(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2149033,      46065]
NotebookOptionsPosition[   2138881,      45886]
NotebookOutlinePosition[   2139274,      45902]
CellTagsIndexPosition[   2139231,      45899]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Covid-19 Exploration", "Title",
 CellChangeTimes->{{3.793106005841469*^9, 3.793106016870804*^9}, {
   3.7941413372547197`*^9, 3.7941413984859543`*^9}, 3.7983907145414677`*^9, {
   3.798561156139247*^9, 
   3.798561165935157*^9}},ExpressionUUID->"e77c1826-4845-4332-9bff-\
c4605939e3cf"],

Cell["\<\
This notebook contains a computational exploration of Covid-19. The topics \
covered include some properties of the disease, it\[CloseCurlyQuote]s spread \
and precautionary measures put in place around the world. 
This exploration is mainly based on information and data from Wikipedia, \
Wikidata and the Wolfram Data Framework.\
\>", "Text",
 CellChangeTimes->{{3.79856089815781*^9, 
  3.798561106316348*^9}},ExpressionUUID->"82919fd9-3291-4fad-bd47-\
cf518a2b23c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Wolfram", " ", "Alpha", " ", "summary", " ", "of", " ", "COVID"}], "-", 
    "19"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"WolframAlpha", "[", "\"\<Covid-19\>\"", "]"}]}]], "Code",
 CellChangeTimes->{{3.798390776268691*^9, 3.798390809601782*^9}, {
  3.7985596845335417`*^9, 3.798559696830037*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"954fa826-3c06-4b80-b9d0-3f31cda83509"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Covid-19", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Entity[\"Disease\", \"NovelCoronavirusDisease\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"COVID-19\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`DiseaseData, 
                   "NovelCoronavirusDisease"}]], Identity], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Definition", "scanner" -> "Data", "id" -> 
     "Definition:DiseaseData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"DiseaseData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"UMLS"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 InterpretationBox[
                  Cell[
                  "a viral respiratory disease caused by a novel coronavirus \
(SARS-CoV-2) first identified in Wuhan, Hubei Province, China"], 
                  TextCell[
                  "a viral respiratory disease caused by a novel coronavirus \
(SARS-CoV-2) first identified in Wuhan, Hubei Province, China"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> None, "Rows" -> None}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Image", "scanner" -> "Data", "id" -> 
     "Image:DiseaseData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "imagesource", {}, {"https://phil.cdc.gov/Details.aspx?pid=23312"}], 
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"DiseaseData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Disease\", \
\"NovelCoronavirusDisease\"][EntityProperty[\"Disease\", \"Image\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzcvQVYm9neL5rRTh0qFNri7u7uDi1O0eLBJQQNBAlJSAgJwR2Cu0MFSqm7
u07dWzzE3ps3QEtn733Pt+9zzznTWc8KJSGFlfVbf5clHBDjFPIzBAJJ+IP9
xelgknF8/MEUZy72E9foBGhodHCQdTQsODQ4XivgF/aLLuxHKfsBfg/87xwM
AFgCgEXOVzrnKQvgPNbO1Xdy3sycB2gz4ASmOZP9DZXzI/AXsKjA0hzApAJM
GsBiLlGZS+B7mB8A+jwA0FicP8OeC+w/SQMWPwC0V8DCE4D6FHhxE3h8G5ie
Bt5+AmYWwF9HX5r/9AZgLrDm2a98Buh0cJXU1YUyAc4vY/9+OoP9hD2ZTIDB
BH9EX3nD1zXTv34oxtdP+M8Zy5tK/V8hyFrdCjrAZAA0Brih4P9a3tTVLaID
NDZ8C+C2L81SF2dZIFasOYD+ija9jDII/DwHwXkaMP0eeHX/z0HK+QrMUAas
KSz0VXMn8HEBmKUxXr19feXKw6njwIc3wMIMsLjAevMOWGSurJK1cvCo4FlZ
RZC1BsFVmFbXzDlg/1wE6auU8T9BENwrGh3cTDYkNM6rzK+TNvvuOcCaBQD2
nGOyFthAz7EWlti4subBzWP/jTkO6p9obw9PnSsovEMk9PoeaLC0aDS1xIgp
Ddj6Ar3Hz+NK8e5+GabWOeZWneHRFwpJwK17wOwCsLjE/nPLv2OV/OmL4Fli
rqyZuQawVRr8DsHldf7jEFz7MVlfX/33BMh5woZvngnS0VrSZZ9/2iIw9wFY
+gjMv/386MbLmxfnXv8JUNkU9AmkPSadNbvI+LDw4vytxuRspJlDopRCg7lN
s5Z+h7r+lI1bj6p5haBGi66j7zYBI8jPPlw8cGGJCgNzioPrHWIx8OAxMM+m
ORabgr9wJod7s+EDafAbgozVyfzucP6DEQS+5y7/awSBVcG5TIP01X1j7+X0
B2DxM+P2pffHRvqRKY2R4Z2JicxLl4D5z8DiNEBdAJaoAJVGTEyVgfxuv4Un
Q1KpWcfsqJHtEU3zo5pWvQomNSKalcomSC29EHHRDAVFnKLSiKNzp5V98z73
Y9lokAwZjEUOdovLS6MzOez8f4Tgt/f84xAE/vUzfQ/fWgTB1xirwLHW7Ayd
BlCngWf3e5KjO8P8cfq6GDW1NBGpOygccOUqcO8O69YN4NUzNo6TLc37pWU8
9wrnKWs1aBoft3Qa0TAt3i2Zyy3UZmg/Xdn4oLI8XlUhlGc7UkSkzdC0WF65
0tT6blkVMMuWqIzl4wPSFHsNC0yQITCYKwtlfMdF/yIgvkmHf+pg/ctc8/LX
vaGvfk/lqCTznG/AQacCX96cLScECe3KkpMkKypWy6tiufdMOXieOgg9DUtu
iwgvjwp9fvYYQP3SQ8RY8e44sG1nrrRCs75ZhbJWqoCw18ZNaEtz4OGdL6N9
rjxbXdf9kiMtVWtg2GFnfx9HAB4+BmmQxljGBTw/yxKRzc/pXxVRJsgWaF8l
34rC8w1B4B+K4L9i9y8IfuW09DXwzX1jaOwNXHh/6QTJz8VpPSRLQrhKWblK
TKqMV3jS2K5YUCpPWDJSSMhHSmigBA3QPlwb7VDf+rseBJIkJVugppUiKgaT
kbTmWuesIPDu1DDr5GSIIH/Qju3Q7dsyJSWeEAqAd++BL9PALBU0SDiEv6K0
LGvDNA4vXeJMKmcucdBkMVn/VsT/88Z/wO7rYDAYNBqNzmQs/4RBA4mA/Xg/
v8jev1k6Rz+gzT2cHA7XUwwU3YXXUy5QkMoXEircK9yurNMqq16joB62jTvP
zvjJRDdAfwN8fOCqKikPgThv5QrfIwDl53favslHUchFR5Rx7zRw72Gxjhl8
r3jsHqHIvfyTqakgH2az0EVQB2Zx6OzjHLiIRTqLQV0ClmgL9x7M3b776fK1
uZv3QDtlgQ7MzAEMkNczWPRFBvUrgktLS/9H9/b/zPh/he8v72HSGQsz0wCL
Y0iyQAY1T182E+eA909fjHVeK8VcyU5OEuCN3bKxTFFpyNx2zNAqfSN36Lat
92vJwJdHV0cbbh1tO1KJM9m83pV7m+cGLqKRaZPfgZa4wNascODmyZnmTqSU
BpRXOEJUMlBUNNnEqDAkaKS0jP7yDQgex7Bkg8NewOwi2/akL927XxYRGWdq
Hm1k2paKuN83BLz9CCxSAfb5YoAslQ0i++3/OENwzfgPbJM9mEz2BtFAomNy
MGNTIR3cE84/rKVVc55tvAOz74HpV8Dsq0cNpecy4SQ9zdS9e9P59jbqGHcZ
WCL5+HNUFD4ONAH3TiKDHNJ9rBuTI135eAN27jn427ZexwPHg8OanexOpkU+
riy8ii3MNrD1EpJwFRUJ1tPw01ezU5SG+3guPv6TzTOfn7v56fZz4AsN+DDD
ePMWWFj4ePhQpqFhiIQkexbud6kMCH4xOALMsWl2HpTOLDpnwUwah7H+Y0Hk
jH9PiyyOrcdgrUhBUPGjzS58nluaZYO4wKCBQhB0bs0BH5496GpEGGumqMoi
5KRB6bZHMEtMDiUhF8PD67Vzc6mv44Ph2rb8eMQBSx9lqWgl5Spbl3JNq0pl
I5KEAlt0nvJ1JWorlXn7dyLRjWnpSR7OiZ4OgbaGfpb67UQcGyzqrQfB+hbJ
Nq7XatrvN3YeQuZ1hEe0+/iE8/HCxcUIegZkM0ukjt5kbh7w4QOwMAf6c2jU
ZQQZIEdl/lMRXKurfLUN2bKPxWB+83WwsVpksLcRYFGp8x+WdT4qdYFFWwJP
O3UOuH8z3lgHaa5f4mSXpqxEMrfs8AkM2sXvx7XTbetmsw0QL7ndQ8TkiXpM
Rx68NCIAv88pXkIpmlsUK6BQLaXapaw2aapPMdHN8XbvodQd6mxsIOX2VuBq
0UmkROiFjobbfd2P+gfc+EXt13GniSul7RYniyt06pnUqGskbN4YCIEgBQSR
wuJ5ymqtfgHA9WvA7DQw9wX0qdIWVkH8ZzLSv+iZ9NWnNAadzT9ZbBa6xPhm
WbE1vfnpL3euA0sLwKfPKxrgIg14+xp4dLcuNvxmY8WVctIxTM7t+tqnXT1o
Z1cbrq1227ZY8Gww5PkVE7a/pyh1tDzvRE1xV2paoIiMy89ceWKqHVomnYrK
FMHdk177WzDI0lI8MS+9hYy6P977cKxtqgp/rqHkbnfLo67WSEWFML69BVIK
dRLyUxqGFw3Nb7l7DBvqw3/+OXf7ToKYRLWeQYGu/uPqGuDDO2BhFoSPscRi
Li0jyPi/vdv/v4+/2Hr0f3WQrhAg6Eyjv/gwf/3eFI5ICQ6/XdN0nFA2PXUR
eD0NTNNA5YEN4t1rn85NTjWWXT/cc/XY8NGB9rK8TMNdO1V+gaiuh+jx/daK
S3h7bfTCcH0rLvNYdeVRAinPen+MoFSumNSIhVm9xJ5GE7X+wryqImwTFtmL
RhxCpZ7GI29WEq5U4o+Tcq7UkQtcrNF6GvliQo3iolc0tK9raN+0sTpvZVG8
Y3urrOyTiMgrwaHpIiL1Hp5XKsq+XLrAQZDGZFBpjKV/JIKcwQR1zDWxhuWP
yaQymIsc24ptcM0uvjt3dQRXXOwRkCggCd3E0+cXlq5qUO0aOJGOYU1eAC7d
eDYyCjy89+bcydvjI2dGeooLUIER/jr6anJ82+S2rvMxVMsJ8Xh5chh4e//W
4d7ecmJ3dUk9Js9OTNxbQLhATWPE3qZdTfZSQthIOaG1tmywjNycDi844NYa
Hz5ekEUK9sh2s853sw4T3ZsitBfFu7NfTemKucmovMyUuelhCwuiqNCwvQ1w
copVWZm0kyeCe3u0mOjRzAzgDtu+WGBzDLbIXmPaM/91sjjeub/qAH9/tgsG
Zdi6Nn0JtAeA5eAPa61D6ssC6FK+fb8vMS1ZQiV6Aw+JTxzHI9hobFWoY4iQ
VMqQVW9x8SfauBzDk1h37v85fvx8R3c7luBsaPzbul+FZETklcTlZQWSwgOu
DQ9cqm26Temaqmjor6qpqa8gluLTwgNNt3OnS0iP2e5rUFY8kRDZXUnu7u0Y
pFCa8PjWwoKKPGRtOT7qoCsqyAdtYx25bmscBHJM33LCwoqgJDEO9e13dyeb
miGMdF8PdAAfX55OhuXzi9RIyDUqq3YaGD+AJgBX7rD1mXf0eTCmyVoNhK2d
HO2aEzJj62TM74Idf38/Kovj0GDS6asIsskQXDYNYH6kgQiyCZBKfTY8RnJ0
TuQVQWzmy16/rVxUGicpDePZhZFWRMupwgQkvXfy18XB/jxx4uLQ0FhjU35c
YhWOkJ6eCo0Ns7Ez9PWwGair6MkndMRmTGQWXacMHmnpLKorr+1rqizF6e/m
sYRAitV1K3X02oMDGooJbd3t3bUNxzp6e+vqDw31N/Y0FZCxuOT4bBt7vIRa
4TaxakH50X3OV4tQh3Bpr3q7BjKQD0cGgen3k4X5USKCpeKyR3QMr7m6jxua
nDO2B+o62HopeBjpqy5xYBk72spXDoJ0gH2M6d8h+GPEE5nLh5ABHr/VQAzz
m0LDYrOgLx+vdHZmWlrFCoojhCWQIiIlmuo4aSm0uESBjDxSXMaLe5vznt3Z
Qd43To9X1RDxxWgULnN4rLehoWJiuKsWk1oQ6TOYm5FjZUOwcp7KJp6rbaWQ
izPzs/3igqHQg3Yqyp4ikpk6hlBR8UBlJU9bq4SYyFp0wZHqph5y5dGenrqW
uobOxhICxkpCPEJEFimmTNYynoAnvT4xfG2i+3Rn483hAeDPp9SzZ2vcDgT+
sTVv++6T1g4kQQGiAH+HssbjjGzgzRuARp/7OL/si2CtUBcdPMCs5egGaG7Q
V+ePRIOcj7MsApaffF02+9u5hXnQWKBTT7c2+Ssp2K/f4L5xo81PkDhRvlJN
9Wp1jdDffg/cvMl+/e+yEAhb0g21luVgYKnohPJm8pFjfb31Fc+njiyeHhtL
jmxwdizUNyy3dHhcQxnAEQqzMuo7Gqxc7YSE9/Jv3mwlLu2pqKq3bYeDory5
nmZCRNj57oHjFY1nm7umunqHRvpHpw4fmzoCCw6ohMbgbVz6YhJPlxYfaq14
cPfMuVOHO6vLbvb1TaILkqVUo7fwofeK1Smr4QT3FooKdRnoT/oHzA8Og8kb
C6BBxBERzBUcwY/NXN4EzoFlLs+/Rtn+xoO1km3CCdAwv/GNZa/+9OIsx5mx
MH/7xjA2j+Dh5icmEKEsXuJoXq6tmbBxkxkEErJzmwcfFxtBzY0QVKB7OTqp
CJfc0Vx0fqzj6WDfHXLRUIA7W2ARRISIElIkTe2T2TkN2YgKIhpfhEHkIhwd
7fm2b5cXFtWQlNmzcZOukkJERGBtCeHhofEhNGGquPZCR//oQG/ncHdlc01/
X9fZnn4iNBrrG5wTGJSPTDp0tP/l9MtTp8aHS8rz7N1CeES9ftoYyc1z2Nv7
Q27WkK15m7Fenb7eifBo4No9YI7Ktn1Yq64k+vf4fO/QYLK+KTl/68EABR+Y
mQSs8eN/VWTAf6nzwIvn70+dBO7eAl4+uUKpHC/MHk6JjuXns4dAoLt5IqWF
dddBNH6H2O/aXOLv0YdKHyShbo51DeFzu0LDe1w94ds3o3m4epXVaiRk2mxs
+mExI7VFTfXFKFRafUNVSiJMRkJyrwA/7949wqIiUdHQkrL8I72UrtzcQg/f
Cn/otabOocbGuvrKquaaU+dPHu3rG6ujZPoHexgYk3Kym5rrOsd6Fmmz9yZO
JJnvCxJXCheVzTMy+lBTcS8hhiwhnCvCR1KQpmgZvMgnA8+fs/kJazW54Du7
aXl8i4qu8FXWj4Dg/LL28tUyZC3LAvoidRaYn2HcvX8kn5BqanUInQcsfAQW
P8xemrrdUl0b6FMX4HOvtbonF+6jJeUgsivLzPBcTtYJBOIakUA9eqQdGh65
RwSnqJa0dVOJiGC3pEK1sESNqUmBmyMBERUW4h4Z7JWdEo/PykyDJ3j6eQnJ
Su4WFQoODxwbpVwe7ywJ8U/X0y/f73mrtPZSe/uhjtbevg5Kc30RBj1QXZcb
HBFuvS/GyT05DFpWTp44dnj68bMTTR1R1vYVcXFPhrqPpiU2aGpmb9oQt+lX
vIRwrbTice8A6pkpTq7VisSn/tsI/orgWxaL9G8c9e86GKs2IDiYnIwvjlbG
YiujdOrDw0d641NTlHT3reduCAkD3r8A5t/SHt58c2byWm9LPynv2mjHzcOd
XcTsMBPNfFfHM2jUBRT6cXnlo6q645k5ODMbuKRc0Po/cMKiqHXbmpW0S4yN
if5umLTwuFhfLCKOrV7W5aMr8VhvPw9e0T2CEoJ+fq7DLaQT9XiCg/lBrq0l
OqZdXgFnieTB4qKGUmJhfm4VqbACja5IzTzb3Blv74KPgZ07NtHe3HR56uTn
P/8cbW093Npwc6wbZWNyNzr6uK1t0h4uGO/mKkmpk15+jBNHgZk3bOuJtSb4
+10Ef43qsowgZyv+1mTIWkl7WT5pzAXq7NzSDKh0M9nM81lXXFKhmnnyTskc
KU2S3X767asAbRpYmrs6cbi+jFBXUdBYWUBAJiCCPfPC/dJ8nLvQmdSL547g
sDAT8+ro2CEicZxcjDK3wGnoZu4UJctoka3skK4OqBRoXk5seV7q3SPDlNys
0ozU9MQIU3Md7i2/ZcWG9GLhJS4mVUa6lUoqiT9tSt+2l+Li2ZOWSkHn9DRU
tNWUXTh6KD82bqyk4jCpbJBYPNXTi0pLvX7p/J+P7t+8cfnoYBcmKghlZ34z
MqpDXydRijdLXXzAxvILNn+6qxmY/QDMzrIxW5iZXQ6QTS/RF79q4My1ihyT
Y1z8AAiyF09lLOtmdE4uKBVM6GR/0pt3yBb7yFJ6CT/zhPy6PYhPqCw6fLyl
/vG5s+yjXllSWIBFFqbD03wPhBkZpHk45cOgaHhkdxUpPy4y1MoiNywUg0ir
xGF60BiSi1eeijFZ3yZFUzd9n31bKaatjtBRlHe6uTbbxz3dx6MkN7W6GOvn
apcT6t0d7VduoFoiLjZlbovfwFMjrjzs4d8aHDqAx453UEa7m6qKsOWorC5y
YayDIyUntwmfX0csOD917OK5k+/fPL974RQlG9EWEXYtLn7Cz7M30a83yf9G
WlyntcXQQZ+5oQHgwycwBDw9t5o2DHKh6QXaNxfiCoL0H4IGge8UMPoSYxaE
j/314+vO8GjfX7fUK5tkbhQK+Yk7dLeIt4IC1MYSFxFbnoZsxOJL4SmU8Lg6
9wCyjfPhzJzz/R1tzaVdPQ1kMhaZGJcYAfXy945OiKklEkNMrSMU9BHaFh57
RBNMTScaKo511U5QytvQGfhQvwttjX+ePX5muDM9IjA/0JviYDliblzJJ3DG
0Lbgt+2V/LIkeU2Chc3l5obyXEQBOi0mNiApNqSxnNBSQrh8ePDByYm7JyZu
HB+/cfwY8Okj7e6986XlFa5uF1KTWCMdwPtrwOfrwKnhIm3VtF18nftcv/QO
AzfvAQtUMPGVyaCvCsQVw+KbcrPspfmREGQwqcyFLwB9FliYBl497/QPiuDi
azV2wIoqB2/mO7CdT/O33+V+/U1z665EW9fahPRSnxCKnU+luiVGVL3DM2Cs
ENfbUNrX01hcisvLQqTCE0JiwnMI+QmJMHMNbR9V/Uxz5ygFbdw+tzNVlefb
60eriIdryYcriCcp1Q25yBpUFi4lsTQ2Cq+hPmphVSYgXi0kU7pXulvfFimu
ULTPpSk9tSA1wcfLMSYhGJEZj8yII+dn1eJyL/a03Broejpx9NnExJXG1mMY
wrOG1v6IqKsFaODGySdHGu4Olh/Pg+G0VOJ/21goLNfvFXSntBqkwWm2qjZL
ZS5Rv3qDv/phQNBWXG1/cwSXl7xIZzHZagxbdFPZ/PMLcO3Gp7aOXr+AFEnZ
DEWVMCFR6/UbtCAQnd//0P5jk9IvGzBufqMpucPB8SN2/tXi2mgusWIF3UPx
8It1leONVbmJ0TBocDosPiUZji3A27k76+vpeBuaZdi6EKyca1x8umPiB7Iz
jlHKx5rLjjRVd5EJyd5eGWHhxfnYbnJxgJAwXEi4SFMvW1Khw9n7fj75EBwx
lofNCwuJD/aDQv3whbnGZtr29sblJGwrGX+lsfpeXdWNivJrxRUt/hHpKoan
UnKGYuIp0SEd6ZH+yvz+snwJ6lKZSrJoPpFSIYV6LdPJiHjg9n3g/XswiM95
fKJRl4A1sRgG8NVf+jc3CZcFwdwSA0yloNGAj1/okyfPJGcQNPUnIqM/t7W8
H+k7XIhB+3okWFpkWNp5SckH6Op15aKGkzM7vYKqdSwzuQWwfOI4YdmQjdvQ
hiYpFqb7lWQ9LEzAep6wMC+fA1LqCspayvv09MO1DQuNHarNnAgGlsUeHlcG
2xpLMfXk/OEWSkdxWVV+UXFRWX1ZpaWwkOUO7pqIcJSzS3lo+BiOcKur71x7
12BN3Uhne15ORkZmChqdiUiON1RWiHa0w1hZlFtZJopLYTUMaq1cUyXUTyRk
vGxuSbDWd5bi9dixPoSPO0lVJnAnN15EjiKvO2hocxkaB5y/DHz5DNbpAFS2
OfyZBVLid4yU+TWJ/2+N4LI1sWIPzsxPH5qajE0jKuqErdtSYm5BPTYCfHnC
/PIImH/Floz0k+cOY3AVqIxrx4eGcKi2uMg8c2O/nduwOhqZkhLIPcLFqjrZ
GjrRujrxB9xgUcGu++xExARFVCTVDFR9bC2j9Y3IutY95m51hrY1bgeGKoiU
OjIBl52eBCPnFHTUd5bVdSShMH7+B0IC3LMz4b6+bgmxEf5eHk2VVZNDI5WE
otbq+i5KEwmDjfT397GxC7XfVxMeQ9TR7zazqtUwbDPbRzHdDxeQu44mAM+f
dWMR/gqiWEmpKjmVBEF+OwgkmU+4TlnvpI3rncBIoL0L+PQBoE7TqZ8XwRwR
4JtG+jWfhPVjIDgL6swcpvHy3QV8WamuDV5YmSipHi0gDDfUinIy7q3BAtS3
wPTbh9U1LZHhAbb6TSQkMcirKTQIZWbksmVTnp528A7uUg0tspoWUkkZZW2F
j4HmJsUF+xzQVlPWVVNw0NPK8HBHmdmUqhmPWLoPWLu3efo1pMOLUOkoZGoW
Ir04n4zJI6dhS9GV9Y1dTb2jbfZeDhJacqnYbDNH24zMnKnJU0RcYUVxeXER
ua2J0lJdk+AbmA+N9xaVw8urZnPvwu4VoWiZ4AQV4rfx3ykkA5fOAS/vFh5w
qlPUPWPtjuQXSRIWid7JB+fedXG/20lrh3OhYcCt68Dn1wBjhm0yfAEYi2sr
LBg/DIKc2C5tnv4ZzFp6/DjL0DZmh0SRhD5sg4D3xh37tnA57OCKUpE5k5H8
trwYrSJPtND1ktrpK7u7yc2lzsSmSs08bYd4FPdehKxylIhglp56gOjuTHuz
ulRYdnhYQig0ysMPqmFIsnbp8w3vdfRJ3rQni1sQxS/FthDbIiMJYcEZ0LCC
nFxsXkFlQ3vX4VOJyNz+jvpKAtLBwQSOSKxtbXJ0cScXVY4OHOrs6O0fHuka
7e8Y7u4f6UMjMpK8A/fvlUgRlAqB/Bz08y+p3DuLeUWO2jgNhYc+6WsBPvwJ
XL24iK9ulzGkKBnW6RjhtTRypcUmrMyOGOhc9vcD+rqBmfcAYw5gMb6mMS+X
Q65UgrCWU8D/5gjSacwZKu0jKAyfPMbYuYVsF0/jUzr46y7rnzZFK6lGy8l7
btlYZ2h0LvBgvb5mpuQeP97f46T3NJhbtRnaVytapPPIYdXNsGbWMH0NXwUh
RwEu5H7L9mzESHklLDg8xtW3MSQ2WUy5x8GbomUVC9nSrmFerqRLUNcNFZfI
2O8A83JPigxHZWVnpGWXFNWcP3bq6mBnKw5RikXicDlZqLzwmARoSExjdUtP
90B9Swuuktw03FnTWpeWBE/yD8vc72Xz2wb39evjJMUieLa3aui0G5p2BPs+
H+0C3jwCHj/6gi5vE9M7a+o2pGuWyrszXWBHu5ZSq4rslIvzIqUBePMnQJ9n
UWl0TirQcmEUm6OuIkj9+yPIWR6VxWKveoH25lWBf6jpL9yOv/H48UqYcu10
EhMLVVZMU1etNzFF8vCSxMWLleXwWgoodbl0YQmEsFyKuFqyij4lHl4YGRZh
bxK336QmIXQgD9GPyXt49FhuQkpWLDzN0yPJ2LjQzDZm6564n7iHjZwqlQyq
ze19REUS9tmgYOEpMSGI6IiS1MzWzPzjheWdybAxQnY9NgseDyUWk63s99lY
Ox4ZO3bl0tX2zo5UFKJ9uHP85Pj506cm2vuOVDehw0I683POtlSn25mE8e/O
VlOqDfQaJ+QCLx89qK056Rrcya96Rsn0qoH1gLpqpbRo/PrfErm31hkbPy4t
A54+AOgLy9mwDA71rcS4lxEEfgAaXNa9WJycGLY8HCSXe0irxmhb9GSiK9NT
D9dWnqfUtkdFFqhpZPLsqZBRQgsKpQjtjRPaG7VHMFxQ4qC4fKSpJSo2Curt
nBzhFeNp25yV2J+X2Y1CnevszoanZiWnlGGy2nE5hZ6eGH2TYk0TnIQaUkwR
o2scoqTARrAsC16eldKLx1ysqh1PyT0cA09TVmqLDMqH+of7u7MVoSh4YlJy
OqmwuJhArK+uKiohkMtJ5ZUlR8dGLx2dujR2jIDMDPZy6qgofHb6CM7TKd/e
Cudk2xgVWhzsl2loWKqgXbxVqGWrwG1Dq9tO9u06yumighkqKmxr90VXN/D+
FYjRV4/G11oeOqe0DVgmzb83guDKmSzacsk7c+bJ8yO1lDujR4HZObCAnTkH
LE3fam7AaOpXqutXKmpm7RXSg0DcN29AaOt4iUpI/fSzloSIk5NVLCwEjYIn
h/t04bIHcHldWHRRaiq5kDA00j95uAefGo2LCj5SSGiKjAmXU45T1YrX1EXY
2lVGhdcmRFVHhR5H5VY5u/hv5KoyNBn38a2wsThRTDBWkPT280jKTo+Fw/H5
Bd5OzkUY9NHRwYb6qsqKkrqqytbKhjJMYX4G0kxDHZMYAzx7eKa6tD81KVVH
J1pBwXYHd7qhHlpdM+Lndbk/reuWlOjSlT0S4PS4rvJOc9unQ8eAp88BBg30
YC/R6Au0ZWfacuhw2Yz4Ggv+Ww82/6CCEUE2s1hiLguDJTAFFIyjUT/PvgQ9
bHPTN/BF7Y6emSJy2bLK0fKyLoJ81jw7NTdvsZSXS4uNPBjk5RviGRTkwRZe
l3raezCohmxkZlREXVNtz1gviYRKjQ/uqCa3lxKJSQmxTk4hJmZpLq4h2npo
d/c8B/s0Xe0yW1uijnbirp1FsnJ3QsJvJcIHUxKTfN1r6sv2+bhoGun39fSW
4/GtZWXH+nuKsLm4vGxMbk5daVVbDaW3pZVSXjrZ3Xp9tO98c01venKYiJjL
+s3+QkJ2XFsdt2xIEhYiCwpVCu6u1RR7WIgAZjhlUF+WwDoaMDYKsFisFSOC
uVq4xkGQ8dXb9ncerBVHLicrbYGT48RkIzj39uUc7QudzVTYInJx9m3/0FF4
RoWzV4CktKemQvpBj5wAn9zgwLzICFImIi48KAkW5eVki0qIqUpPRfr61ORk
1xTh8aUFkalRhaS89ubK82cmSksJSfB4Hw9Xd1vbGC+fZFfPhgR4jX8wQl0L
ISfbaG1OMTOI/fXnVjnlMx6+w7B4MjzaydVG2VijpK4sLjYy1N29ODPj0qGx
w51t+dmZoYEBHs7uEaFhWenJJfic8c6GJ2eOvDo7PkXKT5KVz1fXQ6hrs9mF
JgSSqaXRqKbZp6U95mT2uqEE9IiuOkMXQL1lJZj0NboNPucUIdLX5F7+fQfH
9mFxukSwFRqQa7z5COZgL1EZS6Be9urRzeNdrYNYXGNc4mRpeYKbU2zIAba6
j4XF1CKRnTgCJQ+TFReXEhOFSktBxsegY2LK0lInmiiHOpprasgjR/v6Bzpw
+FxyaSGluTEyOkpFRS0sBOpq42CupF6ejEC5HwhXUEDr65WZGBapKqZt3Vwv
IDFp71Lh7DxQjN/Bu4FQS+o/MgBLiC7PzekkEUfrapqKiIkR0NjICEtzK3tL
S+gB5xJEwuHKwtlLky/Ge4D71yaCoWU6Jp8oHZ+HRggBfhZbNwX/vqnN0HTs
oMfs4V5gbpGxWoY8D3ZUYNHB/hyctFjGqsjjIPitXvjvPWiLrGXfGp3BYiuk
ANvAvf1o6fotgDZH+/ji09M7U73t2SGBFZkZ105OHDs2PHHuUHF5fmlOJiow
qCw8riE5Iz0guCAzIy8rIyEmMjYgYLKz41R7WxMGdWVsoJ6cPzra29bdWllR
1trQ7OvsZaVnAfUL9/X0j49NTI6PJ2SmN2Rnxurr4M1NE/fsIYpK3HIPOOnq
fRGD7iTkVVYXto11VlOqutqbClNTEj09hqsqYQd9clKS4qIi42LiYSEhMHsL
qJJklZdT8T7LBj/ncmuTYjnVClWDj02dwJdZ4P2bcjgsVEii1tGFdmwUmHnL
RmpubsXf+YWjhYNFItNzPy6CoBCksyUDR3Iv0IHr94eSs1OMLG72dIKl8ey5
8IWUkpgeAz1+bqJxqKWmtwFbiMLC4gawBSeIZTBLB7i3X3JsdCw8Hp6ZikxP
66isbMhEVkREHCfgCkMCavGYvraWzIQkHzsXNxN7+T2ShupG4aHRLp7e2MIC
IglfQ8wfLSbG62hnaWpV6BiViSu2mthM5eVhYsI6uhoaeppwRGxeRlobmViB
SJ1spRzv6cBnIxPjYq0srC2VVeEaaqWGWmQ1BaKidKbQ7iYjA/RO/nOB0cDJ
88DMzMcnD08N9l+ntH85Ogl8fAlGXqhLK0rnAmjvfaAvfPr06QfmopwFs5Xm
JbZUZ5/Ad5+ul9Zi9S29uHalmxgfLsCwrYmXp49nBPhFB/pUtFdnVeBaBtry
UVmpB3xakhDnS2rgdvtQ8ISI2PCYvIzgdFhaFqKBRMrz8EpR026039fm6T2Q
haLkYHICoInufqZyauZqeh4ObsFBUHNrGxsH+9zc7LjQ4HYSKdffP9XabgqZ
W2lkjdM2JAcG5sSGD432kGtK8AWYM0cPv7h4vr0gf6Cm/PyRoZ7WhsS46CC/
QKi1A0pOoVtT87SNzS13j2oBwSlzaxyPwBHfEODZc2B25uaNKw/u3OS0kKKC
zjO23KNxinw/LQLzYORoHmAsLCsAP6gmAwCrSbCgDbt4+XpbaBRByxiropWs
pBwqIxmkKOssIaq1jRsRGUzppTSOdDS1U3ISYYn7XbP2uVBiE8vj4gkoZGRK
bDQhxzEqOCohrgabj3f2RCqo4UWlKLomhYZWBQ7ucXpmpruF7JXUjJWVjbQ0
XJwdQ0OC4PFxbOJtKi+vJ5KwiUnFGcj69Az2Ao4gsrvysZWFuLLq0tHxQ4eG
+l/cvPnw5NTt8UOjLbVNVUW9Xc1VlaWozBwnFfVUCYkGZcVmRfkyvt3HdAzH
9YxxAmKvy6uAZ0+ZM59OTY5fnjoJQrZAnXnzhPXlNfX6tYuVNQ9auoBP08vW
BPvDL0zP/6jWBLCqjrIfSwuLly6X7nfJlpZHCovHCwhABfZARYVlIRCtn3/O
9vPp72js7Gsn4rGwoGCopVVFZExZdCQxISYtOSYyI94nOcY9MjQxAVadnlW0
373a2CJ7J2/6xq0N6iZ50mo1Tu566/9wVJbWlNzt7mji4mCirySVcNAnwddn
oLa+saiEhMFlZCDT4hOKomN7MbjR1tbeni5kXm5jE6WjvqGnsvrCYP/729eI
eel1NaTqmpK+3s6cVER6YEhPeoIr969+3L/lSQo3KijmbOOpNDH+NDpEffUQ
WJoZp7TUwRD3atrvVVLak5KrwoJ7oaFJsrIFJhbUyePA0tz8zMcf36JnMw62
OrYILH5euHQObWqSxC8Yy8UdtGF9JN/OkJ07Dm7bidI3DlVSL0lLbaooa6ws
j/Dx0RUU6Cfgu9iGWURgWloMPDcpICEiMhGGS87oysBkahjCdu+NWvdLqbRE
g5xaLo9gl5NLqrqSCASiL7TFWJFPatcvMd72dThkJQqZFRVdmIOOiYrXNbWI
iYWhk5JTQkOJeByxmByflApPTG0pq+4oLrswOPjh3o22xtKWtqqB4a7hkf6O
OsrJvv7i5KiGVGi2vWGaghROWLRZz6g1wOdYJenD2/tsnjlWXBosqRIjrBAn
LOO1ncd903qE0B62rKwzNr6BwwMfXoMhQjrjB/aqrdiDHKFNn2bduYqzM89X
V0FLiWGVZNJEBHx//iVxt2CrvXvoHnGYqWU3ubimuMTKzJhv3S8wL7f8+DAM
PByHTkNmpSCRGXlJGQWhsKOZBKS6nv+mDaE71w942hYICx6yteu0NMery3nv
+B3vaiz3K8RYdGN62L4+CvGgu+3BAy4FWIy1pV1wYHRyYkYqPCk9LQWGSPUN
gx7wC8zNwvRVN1fnoLuKi+9fOPn08bW+kbZTF46dv3Dq0vFTTcSiQ821aX7O
afss/6yqqFPTy+Dhn8jJnH589eHbW4usT0P4Ap9dws4/b/TZuBUqwJejIInc
vunPyOBrgQF3crKAF4/YYpC9A9Ql1g/r2V72qi3SaaBIB2Y/UaLDK/c5olWV
UyVF0SryWAX5ZN7d9XoWaFkNS8hvaWbWsfb7Zbi4ZbdtEd36u56CaA4iJisH
ngiPxaFQREROqsvBzsTsclfvEge7HF3FAmPVKgvjQk31Dvf9UEEejIVODzw0
bZ9hoKnCGIXQXV9AwKS2UCrHRodJxJKkRCQsHhEZFRcMDTeysoEmJHr5B0L9
gz3U9QLVtQ4TcITIgDJE7M2ToyeODhwe7j/UNnBhdLKrsrIJjzleVQncvjvo
H5Yko3StrWn67cOPrA+f5992ZuVEiilGCIhFCQtDxfcmS+zB8nCPG+kddbD/
WF0BvHsOdn4DmIuMb9GlleotsHHCD0CDy8KavrxIsEfMNPDoJXD13u3yqtJ9
+/pDDuYqyzfbWJYoqzbqGlap6qXtEt4PgQTs2usosFtHhFdVWSw4NiABCUcX
5cfB43MzMsg5uWwbP9rENFFXJ0dfN1RUqCzErz4lPtfPM8rO0lNH01NXO9Hb
PdHXA58c00DMqyVhGqvIRaSCuER4UUVdSFSil1fwPnu3A54H5eRVVDTU9aQk
XbbxoBWUiozUk2R29x10+dhNGS4uGG5uOdk7OdY4Wpxb2FfRkOzs9Xzs2Pzl
a6fbWmhvXnz5+Ooj7cviwszj3kMNPuGkfW4oayuMi3Waumyrmma1sESzifmL
+jqwFxxrYY5JnV/TaXMlwvsjVC0BnJXOgR3rOBrXsiSYAxjXHlQFhVMCg9p8
vRAyYhUG2nlCAjgBYfSOPSjuvembeJP5xex2btsBgaxbDzHdbxYaHx4Ni2Vz
UVxeTm5qMjI6MsjCLN7CvD0qZhyNTgnwTouPSIuNjgw4GOzts9/KNj4yMjU2
Os73QKy7Ew4aeqy+tr+6qopMQuShoDD4gQMBygrapvqWWhq6YmIiFjKSeHXd
di2dZK7fajWlGjXkTkYEPxnoPt03ONIwREaWRnpDESGxxnxiac5e7+7cmH31
GPjyfunL+5evn7E54fzxS42+EYdSs3OsLeP1VEIE+eqVtTrUjO5k5ALXrrIR
ZNHnFgHmFzYZfu339S1d7QfAkFMGwljilFyv1MsvAM/GpkLk1dy2bk+RkoTx
8eSJCGGFhfosrIiiUgchEKKqvt+uPXpcm0W3/iGwl0tdQyHkoE8iFIqGwUuz
c1EJCVlRkUWpyaiQoOrYuE40Oi0+KiUNngxLTIOnBgaFGdtYa1ma6Jro5CXF
GuzaRrJzbPHyv1BQRI6N9vV39Yo4aOPgaGJsKS0hr6qgIi0uprZtexyPYIuy
dpmk6JSb3REH605nx2tNdT3lldX55Wh4nq+9q7mckq+qTnFo+LNTx15fPMF6
cAf48hFUUd6/PZFPDtorGcAvYgKB+O7cipASL5FRGXPwAAbHwEynT+/Y4oN9
gD8xadS1eTKrvfV+BATBgMQSsLQItvrhrPz99JXW3hB5VbyRGUJUNImLmygm
RhATq9XQLJCWrTAwxZlYe4vLuGqoedqYervau9hbIqBhSQd8M70D6pEobEx8
4sGAeiIRA0vAREQVpWekJMMzsnMSIhMIuQWxMYnR8GRTFwd9M71AG9MUfb0G
ffM2dZM+W2e/XbyFMGhIkHt4RAgUGqGqrObn5R0XBg0xMcuWUG5V1i8WFsPy
7RqwMOvz8qAkx1eicnGp2bH+4cYKSvw/QdTXrTPautGId4u3isRZQj7w/jWY
QfHmVYV3oO8uQadNW6whEEMIJJ6Lu0JN73pyFnDjFhikmGNrLmCa0DRYxbym
/Ge1gvIHKOEF+SdtibW4yFxaSfKZmX8wMp5hap2tpFEoo1CnoNKpqVWjqFSj
rU3SUC93cMx1dM0OCEUnJsIiQtgzJy6mDYWFW+/zlFSqj08vgafF+fqX4Auy
EOnojKxqcmlaSgYKic5PzkPHIrPjMwtRhPTklISgg6Ga6tUW1gNKepPy+s17
pM66+4zDY/GhvugUuLPTPhUlZUI+tqKggBwZ02J7IIdLsF5BA7ZuQ/S6Dfk6
2jBbc1J6UlE2ar+xCc9PEFsZUb3N6wzWQax3/hEoubfEzPhMShKYQfH2BcbO
wQBs4LYlin9vKORngqh0vaX9dEcfmHs/P7ecL7rIpC8st3taU4LHaazH/PvX
LoFpkWCWFo0O5oss0Rh0gMF8f/ZirrVjyObtRFHpIj6h3E1bSKJiR7wPjAQH
5FlbEaCxFRgCMT8/C5mOSIwvTEudLKtqjIFHqRu0JiMJcYnBnl7p7JGVm5WL
xWAJuShsfk5+R3lTok9UfkJOXjyiGltQkpTUHBWJU9co2yN6TFXvpJbxNTfP
E0EBfbDItkIcBoWMj4vq7+7ob23GhUJJxg5Ze6RJsho1+sZ+v/+RqqaW6mxH
TE8syUJaqCibyoh6aSuq/Qyx3vqr7WZIpMiuKk31ci1tspNdLwJ+tbK8LjQk
28oiTVmp3cAMtp6b4uFDPXkWbLU3Owv6ZBi0z7Mz35oA07+2rgLN+b9/zvZy
ngyn0Q99HqDNgiKRufTgUVtUAkJEFr2Tv3Db7lM2jteDwxotzRAaSvuF9iKC
wkn5pJzcPGIJCZWNwMDjRwqJEwWkfmTukaJSBDTc3dnJwz8gKi0jCYlOSEWm
ZCIQmem15ZVZsLTy3MKG/OK2gqJWVB7R3xtrYxrGy11jpN1tacpWcS+GhR2O
iewrwPa21FWWESmNNR2UmmgX5xQ9szrHAykSCg1O7h1BIV2J8X2FmJ6yQnxC
TIC1eZq/Z4S1YYCSJFRexOZ3SNiODUdtbHpNzN22bizwdgU+vAJePBkpxMB0
tE4HR7dbu1wtqWDcfwD2zZuZ4fT+ZoLnFljTOYe+ku77wyDIojJps4tsRsrR
x8BXZmZf9w2TtU2a1A0axBVP2OzvMDE98NvPTts3GfJs269nTMKTsQVEckVZ
RmYKKhXWkJNVlQijpCP6isn4bGQ2Oic0MTEWkRMDR0LDY5JiwzNiwnJiohvR
+IrkrPGSWrR3MMr9QJKlqS3PlihlCYcNkNBdXHVmpk2GprXWdteam+qIOEpd
6eBg+8hgB4VUcK21/UlL18feoXEkCrhz+1JLwySl6uJQBzEushWTc6yx+s+J
sVuU6gxDjWB+7gQ+7i41jU4tfYyB7sPuVuDTa2D2/aNzkxHmJoUmNsDAEU4r
KirY229pkUFfaVa5uHJFwioBriBI+zEQZIJ2K6jMgI56Tn+AmVng+etyc3uS
pPKQoRWRXwy2bXvYbp4Dont1dnGr7BFOjUkqKSnLxaIwuNyC/CwSMqUKjUTD
orKTY7AEdDIaGQRLCIuDh4clwvwjwgx1k411rDZt8t4jnKVvk6RqFCahUu0X
Eq2q7ispkmtt6rV7B97AYNg7oFrXot3Z93JVfQsB31xbWl1LOny098rZiTc3
Lz07MflmYvLZ4SOvL5x9duHUtcMDg+WFLycPPx4bfnX+zNPjx4AnD3riIoP3
7my1Me/T1CsSlnxaUQY8fwgsfgFYc58+vRhppzzq6AXeznCy7JfbyDC/2Qxf
U7VXsrV/KARZywiChZDznNpVYG4eePVuLAZeqKJDllHGikjE8fFa/wpRgEA0
tm81EBSP9gxgaymovKz8glwiMa8IiyzBZRViEZh8RGo+Al1VhCzEp6RnYVPy
Ul38csz08QZqcfx7kLJKNbbuIfxSJFefcC3dbDfnxsTYCA2VoeSk8TTEaCz8
CrroErG8LwdThkgvI+a9eHX345cnw4NN966ceHD2+L3DYwt37z64fPbxjUs3
Jg9dH+17fnT087nTn+/ceXXx0r3O7lg1VT/eHa12tqccXKazscDxSbBJ+8KX
+fmPnO7AnP5v7ziXjwBr4APWIPjVEuQg+EPULq32k6HROGnnKyHpBSrw7lOR
uxdKWz9dQjqal89t00Y3Ph7jHVuNdu8y2LnHXU03JTSUlJ9bVJhHIGQXEbKJ
eCQbvpJ6YgY5F19fjCJgc1IRjdmFcFObSIndba7msTu58uQV0XrGHfDk3IiQ
rb9B8pGwnJigbE/n1kTY0XxcSVQ0MSO9Eo+rzcorz8gi4rNOnR2tqUQnRHq2
1hNOj7TP3br+9OSJI0M99+9crSFgJxprn46NfLpw7u6pM+eGDnXloGPVNUud
HB9j0I8i49+y+e3TxyCCM1/YZxO02ZkLnB6bXxtwrSFA1vcl2KyvNTA/QCeE
rx2BvnZ8BRFcpANfZp+NjBYf8AwWE4mSlrDZvMGZf4+jqJC1oJD5tl37hCUz
/P3rC9D5yCQELKIgJ5VNhhhMek1zOaYCm1eMxuWjGgoK+5D4OAX1Mku9POnd
eDHhVjPLsykZGXb2VrqqMQnBSSkRTlZ6pMiQXCdnSmJSMRzm4+8eER9RmJ7t
YWJua2Xo4+vgZKkO9TBzNJCxVRYrj4m62d1z/vjR8cPDWfExNw8fujXYX5aW
PDV6JD4k3FNF00NYLF1Xu93DtdvUstnI7G5ZCXD/Dqe9M3V6YeYTbWG5YSNr
LYLftyD5YQeT07phzX0E4EUAi8CHt83IVA9Zcf1N60QhkIz9DpSkZE9ZeS8h
MR8RsQzX/YSY8GA7Sx9z4/z46NaiwnIcqqwYRyzNLyDlNFWQD5eXVfuFRvOL
VelpDFsZjxmb43eLNVs5t0HjCLAEMj7Xx80uzNUhQE2tCRpBiYiujI9PT4gM
Cw0I8wrQllfW1lGxMFM3ENvupSFmJrjZVXJ3pr7hpaLyk709l0+ffHnr1osr
lzvJhSNNjcXFpWqKqrwQiDrkJ9NfISYQSCAEUqSkmKKi0BQe9qF/dP7sFTaI
nAoR5uzS/LdGMaw1k2P3rW2v+gPBymIxvh1D1qpfAjQQF2jPH0w11xw00lTe
9PswPv/F4Qk3McmDgsIeu3YGKsh4KcmobdpgvGc3xi9wiFhUkBBfis6uryY1
VhO7SgqIQYGBe8FyoQJpSaKYcDzktxoZbbys3kB4ch+WkBEZjkEk4dMS4h2t
h1E5g1nIXA93fEJ0kJsrLDzey9NXVklaU1nYS0Mi20YXZasfLSWEEJEeDIw+
Ul59qLPz6aUrz69d666rriwheYeEHjjgrczNIwaBsI13h58g8J1b6w21w/l3
HdjOXWhgORaPYNx9uPjh3fzizGpnAw5qzNXJeYW+prvFj3VHDHMVt7+yFNoc
sPQJmH715MLkua6WmSuXgBfvD2WjQ4SEDmzfvH/nZqONv0lDIPrrN8dpm+S7
+qXtc+/A4ylFuHpCbgc+N8PWMmgnb7qIWJqIAJyXp1LDoNHInmLjjdKz70lH
50GjRrtaGmuLuppL2iuwwxUF5Mjgzow0VGCQi41zVHxyTEpsZKALxt06T08x
XU44dhvXpJ0nTkKrLwM98/DJ3J8vn968OTrUS64kJ2Ly+kdHifEwyx3b9SCQ
aJGd3Y7mXTbGmXJiuQry9VqmOHnd5629wBe2UkqlLccfWPRvTdRW+6otrZZS
rtwF9uNEKJa7T69FcJV50FfuLpt+BzZhZpsY95/1J2fmKKumiQqH7OXbx7VF
79dfDDduttnOa7xpW4qV7WRpGTEmvCAy+Hh5UV9qcpWLR76BUWfIwYnUpDPI
vAaf8GrvqElsdWlUWmladkF2RldbdW0Vpru5qDIXPlaKv9fe2ofFY7Ox0ITE
iuaq1qrCW9XkTrf9gT9B8nbxTxo7FQgoF9q6HSZVnGnreX71+shoP7GmdPjc
mXezM6xXr06QSd78OwK2rTvqatdpoFmjoVwgLlYvp1mpZgxMnAEVbMYCfdli
BxHkVJ2vmH7fOqxS1/YI+kFoEFjbDOFb8jKwxPEZctzeS5ymAbT352+EyGiU
yWsXC0ph5JShoqLaf/zqJC+OCfWNsTfNcrOvj4OiXR3IvgcosTGticnj+KKm
pPSjZaSy5ARKLrYaiccnojBJ6BJsWaDnweiggNSoIGSUX5C9YZKn42Rd+eXO
9noMxt/PB12E7z/Uc/vc5OXy0nYXz1ol3eI9MpXCKkccfX1+275vw05KBOze
oaNXLp65+uTu66WlabbWz9Y3X79G6mlHcW1sVZI7oqk+pac7pqWN27H7qE8g
cO8h2wxcoC/Or2QPrvbEWyPpWGuEIGvt1vw4g7XGqOXUT3BaPdFWm2wvAu+u
3IXpWZbIahN3S6Tzi3vz8DpLCI+VET7fOHOlp6405EBL5MFcY+0YWan9O3fa
8vJnePpjY+LLczJq8KiK/ILMxIyUxJxwaFI8DBkYEBrl5xvuYGMtsEtv468u
ooKl4aEXuzv762qaW+rrOxpOnB5/d+/6rZr6Ag3DQkH5Kkm1Rh1z+B6Rg1w8
5fvdj+fiqJevAotzHz+/e/7xE3Xl6q7pUjeXbCnJYVOTq/vsz5uZjxsalcnI
n4yHAY+esg2m5S64f//8z/96rJ65vyBI5XgLGcv5sRxLg/7nu4YERIqoHBs+
6F4Rmy1cPsoKwINbwNyHxVMTt4ryj8ZA8bqaqTLS+zZt1v11na+Onr+Febib
IwkBx8Qnxh+EYrPwsdEp0QkpyfAkUnpKhIGu7S+/Ru7eGyUgXGDvcLevb7Ch
prqmpLW36drlU2e72io9fQ5A/kDtES9V1iSZm5Pc9p0g5X85dvj92CjYMvTD
h5dXr6xIKzYN/vm4GhqMNTNstLcYc9/XbWk64rL/aFjI5+4e8NIfGngH6cIP
RlX/g/G9NfRXjRoMvVA5sfvlygrg2bFTZQf8CNZ2oYpKqr/8YrhrF5Wt4Tx9
NDvQdysrs9XaGictVaKjnSIv7y8mGm5s6KGraakoHulsF+vkkh0aPUjprimv
bWhsam9qONve0hIGjVrPXcgv2WPmQNQ1aoiNPNPTfu/y2avnTjy5dfFUW+Nk
bl6do9OxIGiVjeXzjjrg1ing1R3g8wvg3Wva1PGzpSXA50/gjVpsDQWsSPr8
59GhWy21Zwg5x7Lg46nx10k46tEjnKb3C2DGL+uHiPf9l+N7X8S/IshcviV1
folTnwZGD4HXL+cunj/d1IiBhiY4Oj4dGh5OSk2RlmthW3wCwsXCYp3GpmRd
7RwD7arw4EZEooemQpilUcp+pwZE1lR7b09d49mTx0+O9r8/djRfRz9r3bYh
Ge0+ed06TYMpdA7jzpUXk5MXe3quT4xeGu58MtQzlpV6uQDdnxj+5yAFmH8O
vLr9rr8FODP1qrGu3M9j8fwp0GafpwKLbBzZwvoTeIXlhyesZ7eZD28AT+6C
FxYszoGhwLm5fxx4nPHVJcj8RoZfY9Ngm6Dl52DWOqeQgC1u2Bs1857x7tX0
o4cfrlwD3n8eT88+uGl7kaQiea9It4r6cXuHblurBif7waSYqSJMSwasD5s9
XlBwtbH5fEtbb0nxvbPHT7Y3HsOgwrZwle4Qumm8v19avVZR/XBC1ON2yp16
yr3OntOdTSWZMISfi704n5fMXicBrmhjhY/j7W87q2tdbGuszIcO+qDN9Ep8
3W+3tLyaOAYSGlthnn7z9RpZ8EZg6gwYw2XQQJ8TqHYylq/9+kcN1lp37ncg
gvFqJuPbc/YblhgAg7GidLPtp4V50IM6S/vYf6jJ+QBJWqlORumQntFxa5sh
K4t6U4MCI608S4NxXO7j3vZ7Lc23GhtuUChTFSWvjh8axmTHykmX6epViUj3
y6pNGFpkcHF7r/+FYGt+IiPncll1KyYnLyEYE3cw3FrLQ2q3FddPbvyb8i01
q8x0S1TkIyGQqHW/wSX4kUYaDnw783y85m9c4+Tugh1+5mmznxc+szGbnZ9h
sRh0GnVZ82R/w1ZI/69u9/+G8a8IrgERvLGOxfpGiZx9mF34zAJd/cwVJYdt
Y71496KuqVBVq9fE/LTj/qNm5m1aGgQJ0Zhtm4N4toXJSzfGRFQE+JV4eY5l
pJ/A5D6orShxsmP/KJ53V6GUdJ+ZGXLHtoTN67ucbHB6mtcLiE97eq8Pd7++
dvLReF+2m7Ud1+/evJvdt/4SJ7gjX1Jk2Ny0nF+IvFeApCQTzMvlumdXno/n
0n2wXI4+94kJxlm+6/46v0Bd4lw9uQQWJv/9PdX/5fgLF/3ePvqrZcRBkAMf
/ZvNC/boXADefQROnP5UXNyoo00SFurU1WlUUw2EQBJ28Xrt5t2/l9eedwcb
ynQt9Rwt9RJDA5K2Jl5TrcbeIkdH+XhKVKGpxomYoDF3hwvwmA+jg8Cnt8DS
Z+Dj8z+72vDmpmFbuWO4uf3/+DVi24YmA502DY1BFY0JXaNSISGcvCxuv/39
0X7g0ztg5hPnujomjVN2xGKtOptWb/1a7ij+TxOGXzWZ/4zg9x95OZ7I/Kbt
gKd8EVTX790p3+8Yx7erxcSoUUurTFomffP2FD7+1sAgmLGBq4iAn5hA4O4d
7DeUyCvgRMUmAv1p/W1Xags/HO8Bbkz0RXiRFSROhPi9HuoDixbn3wFz74EX
z68jc7FiMhGQ330gkGwhweOurqNGZn3yqj2yymwyrDMzvttSBzYfZrPQRc6t
kUyAscj6Zhet5g2uOs2Y/zR7kPXv5n/++Uo0isUxFVc3CbT6FxbenT0N1VBx
37GFbGKYuGtXxK/rsngEmi0cgPt/3mttIwV4w3TVokT2oqXEKIoqmRu31Brq
AyePADNPgA83phqxrrv/QAnxlqkpDqYkAR/fALTPwML7z0fHsrW0ozfzlMlp
wDZuq1PRun4g8LSVc5+CVsleUbyUxIXsdODZA4A2C7aFmZ/lXLS3fLXrKhul
rRy1pZWO4v84BIH/DwguX5WyUiBJW07sWqIBn9+352V7Soi47eT25eKK3L4r
hou3ztoJePEBmJ57dWiI6OkUtJs7euvGMiGRcmHxLhtbYGIEoL4Cpu+H2KjZ
7/iFTYOJGzeOxiWAl3Cxuei7p+OlhX6iIlF7hAmKmqUqei265odM9x8ytBvU
tSTLKdW6OgLXz4JuWwbb3JsFL9EDvZ2rvunv+2jT/6k0+F+PZQRpywG1lXwF
FudBpy08vt+QDvdXknPbvdtfQMhrG1/x/gPAo1fA5/mJEnKUllKYIE/Ylt8z
t26plJZtsbACzp0B3j97eWrEW11sH9ev/hBI5vbtowFQ4ORZ8Ap7+vSDM0cH
i3BHcnILLGzGIxOOh8SMOXgPWrqcCYyagsMvNJcDjA8gfGCS5BInzAcOOltn
5mRVfLsae9VTT//rCf0njP9AfP9pMFdd+CshUdaqrcGcZguvWeafj66w1Y/A
gwQff0o07EH7ADBL/3ThWoSpqf7GX+PkxWD8O6A/QVK5tpVo6AAXrwDv347k
ZIYrywTt2ZG8k6tKVSWBVzjf0uH2YC8bQTYvXXp2H3j84M3Y2NLUKeDsxemm
rvs40mxnL3DzGvPLE7AXBZO2zCdZnPZMi5wow0oQcPmW8++t3X/YWOuE+Tdu
+X/DXdnAUTlzzeVEjNVMy7k58GZJ6tz8vbvAq1fAq7fADBWYY87detSQmhal
pxkoyue58afIbRvyJMUbLWyB3lF6zwjZyh4mLpUpLVWtqx61cUPY9t1u23dT
0lJYLx8DS7McT8sMyCSXOHP2C/DoPshmFz8DwGc6G0E6p3IMbGrEmmYuzYA2
IXN+pU39aiCJwZnM/+Kk/iiD9S/w/Q8QpC3bgyvvYa7myi7SwUQ+MBWTCibT
0mhgSHGJybnXkAk8ez5eQk62MIRpKdV47K91cT6LyAaefwBOXP5/2rt6lYah
KPw09gF0Lp18jW7uXToIDu7ipvUJ2uKgEFzcnNRBLEURcY7YSmJSmprc3HNv
ruecm7SNTk6B0I8zh5CPe3LP7/d81Bu29w62d45bzU5j67C1O+jui7dXM/NM
6JMEZODhRUXToF9MyyjQbSJLYpaZSOoF6zvTuwDPXS2oAKFDSrTZGWrIy/Hl
w1gn/MeFWvxRI1qxXO5esN+N9guBSQS4rnt/93TljC8vXhyHVta8f1Is+eEF
tw+j/vnN6dn1SW/yOE4mU44LrKDcensnFMJzsFrfWk7LFzHEUnOnNu1MFSHj
q2ou3QBUA4oilhoX1ExlZXzRMKL8Co0fmvn33A/SNP31GMoLbVAJqAFF6CRB
Y6nK4pdkDXQuxCwg34sFenlM1lnbMFgpkBTFOoaSfBu6WSlVHBck8nwJ8igk
5cnxYDKDSikAyLI6eL0fBttmXQ==
                "], {{0, 84}, {150, 0}}, {0, 255}, ColorFunction -> RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, 
                Interleaving -> True], Selectable -> False], DefaultBaseStyle -> 
              "ImageGraphics", ImageSizeRaw -> {150, 84}, 
              PlotRange -> {{0, 150}, {0, 84}}], Annotation[#, 
              Association[
              "URL" -> 
               "http://www.wolframcdn.com/waimage/hset110/fae/\
fae44ac1e065f39a7dd061617b7daa7e_v001s.jpg", "Dimensions" -> {150, 84}, 
               "Source" -> "https://phil.cdc.gov/Details.aspx?pid=23312", 
               "Popup" -> 
               "hset110/fae/fae44ac1e065f39a7dd061617b7daa7e_v001ms.jpg"], 
              "Image"]& ], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Medical specialty", "scanner" -> "Data", "id" -> 
     "MedicalSpecialty:DiseaseData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"DiseaseData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"TheWikimediaFoundationIncWikipedia"}],
          "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"infectious disease\""}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> None, "Rows" -> None}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Temporal characteristics", "scanner" -> "Data", "id" -> 
     "TemporalCharacteristics:DiseaseData", "position" -> "500", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"DiseaseData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"TheWikimediaFoundationIncWikipedia"}],
          "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Disease\", \
\"NovelCoronavirusDisease\"], {EntityProperty[\"Disease\", \
\"ExposureToDiseaseOnset\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"exposure to disease onset\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   TagBox[
                    TagBox[
                    RowBox[{
                    TemplateBox[{
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], 
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], 
                    RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["2", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2", "SRString" -> "2"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["14", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14", "SRString" -> "14"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                     InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"days\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                   SyntaxForm -> Dot], 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0, ZeroWidthTimes -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Right}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Common causes", "scanner" -> "Data", "id" -> 
     "CommonCauses:DiseaseData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"DiseaseData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"TheWikimediaFoundationIncWikipedia"}],
          "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"SARS-CoV-2 virus\""}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> None, "Rows" -> None}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Transmission", "scanner" -> "Data", "id" -> 
     "Transmission:DiseaseData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"DiseaseData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Disease\", \
\"NovelCoronavirusDisease\"], {EntityProperty[\"Disease\", \"Transmission\"], \
EntityProperty[\"Disease\", \"BasicReproductionNumber\"]}, \
\"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"transmission\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 "\"airborne droplet\""}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"basic reproduction number\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   TagBox["1.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.4", "SRString" -> "1.4"]], 
                   TagBox["2.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.5", "SRString" -> "2.5"]], 
                   RowBox[{
                    StyleBox["(", 
                    GrayLevel[0.6]], 
                    TagBox["1.4", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "1.4", "SRString" -> "1.4"]], 
                    StyleBox[
                    FormBox[
                    "\"\[MediumSpace]to\[MediumSpace]\"", TraditionalForm], 
                    GrayLevel[0.6]], 
                    TagBox["2.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.5", "SRString" -> "2.5"]], 
                    StyleBox[")", 
                    GrayLevel[0.6]]}]}, "Interval", DisplayFunction -> (#3& ),
                   InterpretationFunction -> (RowBox[{"Interval", "[", 
                    RowBox[{"{", #, ",", #2, "}"}], "]"}]& )]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["definitions", {"count" -> "1"}, {
       XMLElement[
       "definition", {
        "word" -> "basic reproduction number", "desc" -> 
         "the expected number of new cases of an infection caused by an \
infected individual"}, {}]}]}], Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Typical treatment", "scanner" -> "Data", "id" -> 
     "TypicalTreatment:DiseaseData", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"DiseaseData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"TheWikimediaFoundationIncWikipedia"}],
          "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              
              GridBox[{{"\"supportive care\""}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> None, "Rows" -> None}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Prevention", "scanner" -> "Data", "id" -> 
     "Prevention:DiseaseData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"DiseaseData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"TheWikimediaFoundationIncWikipedia"}],
          "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  RowBox[{"\"handwashing\"", 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"avoiding infected people\""}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}}, GridBoxAlignment -> {
                "Columns" -> {Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxBackground -> {"Columns" -> {{None}}}, 
               GridBoxFrame -> {"Columns" -> None, "Rows" -> None}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Common symptoms", "scanner" -> "Data", "id" -> 
     "CommonSymptoms:DiseaseData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"DiseaseData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"UMLS"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Disease\", \
\"NovelCoronavirusDisease\"][EntityProperty[\"Disease\", \
\"CommonSymptoms\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\"fever\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], "\"cough\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               "\"shortness of breath\""}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www5a.wolframalpha.com/sources/\
DiseaseDataSourceInformationNotes.html", "text" -> "Disease data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "10", "datatypes" -> 
    "Disease", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.247", 
    "parsetiming" -> "0.137", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP583521320i14ce4g9e9a000022ha1fib97bf2242", "host" -> 
    "https://www5a.wolframalpha.com", "server" -> "18", "related" -> 
    "https://www5a.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa583621320i14ce4g9e9a00001b7ch28fbg41aha42812829786434294891", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2020, 5, 15, 20, 59, 59.957594`8.53041917006751}, "Line" -> 42,
     "SessionID" -> 29107488227704041399}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7, 8, 9, 10}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Covid-19"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1320., {376., 382.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.798390785749298*^9, 3.798495519633613*^9, 
  3.798559307357623*^9, 3.798559700114875*^9, 3.798561448011874*^9, 
  3.798561600133567*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"73f94d17-02ff-42f5-b64e-c181b3b4c3e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wikipedia", "Subsection",
 CellChangeTimes->{{3.793105989651456*^9, 3.7931060209190106`*^9}, {
  3.793109627904931*^9, 3.793109628263386*^9}, {3.7931132125852256`*^9, 
  3.7931132141230664`*^9}, {3.798390707945075*^9, 3.798390726688531*^9}, {
  3.7983920389290953`*^9, 3.798392064478063*^9}, {3.798399261520561*^9, 
  3.7983992647485857`*^9}, {3.798559712336108*^9, 
  3.798559733423954*^9}},ExpressionUUID->"da6eb7c6-4d31-433d-910e-\
7cc828c78f77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"search", " ", "for", " ", "COVID"}], "-", "19", "-", 
    RowBox[{"related", " ", "articles", " ", "on", " ", "Wikipedia"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Panel", "/@", 
   RowBox[{"WikipediaSearch", "[", "\"\<COVID-19\>\"", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.7983911046460876`*^9, 3.7983912151131487`*^9}, {
  3.798391562700385*^9, 3.798391595844397*^9}, {3.798542345369873*^9, 
  3.798542394507094*^9}, {3.798547782573352*^9, 3.798547792914312*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"f782353e-c4b9-4634-9909-d5d4d6308b35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   PanelBox["\<\"CoViD 19\"\>"], ",", 
   PanelBox["\<\"COVID-19 testing\"\>"], ",", 
   PanelBox["\<\"COVID-19 vaccine\"\>"], ",", 
   PanelBox["\<\"COVID-19 apps\"\>"], ",", 
   PanelBox["\<\"COVID-19 drug development\"\>"], ",", 
   PanelBox["\<\"COVID-19 drug repurposing research\"\>"], ",", 
   PanelBox["\<\"COVID-19 in pregnancy\"\>"], ",", 
   PanelBox["\<\"COVID-19 surveillance\"\>"], ",", 
   PanelBox["\<\"COVID-19 Case-Cluster-Study\"\>"], ",", 
   PanelBox["\<\"COVID-19 Solidarity Response Fund\"\>"], ",", 
   PanelBox["\<\"COVID-19 Congressional Oversight Commission\"\>"], ",", 
   PanelBox["\<\"COVID-19 crisis\"\>"], ",", 
   PanelBox["\<\"COVID-19 in India\"\>"], ",", 
   PanelBox["\<\"COVID-19 in the United States\"\>"], ",", 
   PanelBox["\<\"COVID-19 Hospital\"\>"], ",", 
   PanelBox["\<\"COVID-19 by country\"\>"], ",", 
   PanelBox["\<\"COVID-19 in the UK\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Italy\"\>"], ",", 
   PanelBox["\<\"COVID-19 in Spain\"\>"], ",", 
   PanelBox["\<\"COVID-19 in Canada\"\>"], ",", 
   PanelBox["\<\"COVID-19 conspiracy\"\>"], ",", 
   PanelBox["\<\"COVID-19 pandemic in mainland China\"\>"], ",", 
   PanelBox["\<\"Covid-19 in Australia\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Germany\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Daegu\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Sweden\"\>"], ",", 
   PanelBox["\<\"COVID-19 in France\"\>"], ",", 
   PanelBox["\<\"COVID-19 in NY\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in South Africa\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Poland\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Russia\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Mexico\"\>"], ",", 
   PanelBox["\<\"Covid-19 virus\"\>"], ",", 
   PanelBox["\<\"COVID-19 in Eire\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in the Philippines\"\>"], ",", 
   PanelBox["\<\"COVID-19 Pandemic Unemployment Payment\"\>"], ",", 
   PanelBox["\<\"COVID-19 in New Zealand\"\>"], ",", 
   PanelBox["\<\"COVID-19 in Europe\"\>"], ",", 
   PanelBox["\<\"COVID-19 in Pakistan\"\>"], ",", 
   PanelBox["\<\"COVID-19 in Bangladesh\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Brazil\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Turkey\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Japan\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Malaysia\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in the Czech Republic\"\>"], ",", 
   PanelBox["\<\"COVID-19 recession\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Singapore\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Indonesia\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Belgium\"\>"], ",", 
   PanelBox["\<\"COVID-19 outbreak in Greece\"\>"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.798391121371005*^9, {3.7983911575317574`*^9, 3.798391215930544*^9}, {
   3.798391573209066*^9, 3.798391596402896*^9}, 3.7984966928744793`*^9, {
   3.798542366690445*^9, 3.798542395464952*^9}, {3.798547786652648*^9, 
   3.7985477934800787`*^9}, 3.7985614538658237`*^9, 3.798561601350391*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"595eac48-6116-4166-beeb-b950924f54cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "summary", " ", "of", " ", "Wikipedia", " ", "article", " ", "on", " ", 
    "\"\<CoViD 19\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{"StringReplace", "[", 
     RowBox[{
      RowBox[{"WikipediaData", "[", 
       RowBox[{"\"\<CoViD 19\>\"", ",", " ", "\"\<SummaryPlaintext\>\""}], 
       "]"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<.\>\"", " ", "~~", " ", 
         RowBox[{"w", ":", "LetterCharacter"}]}], ")"}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"\"\<.\\n\\n\>\"", "<>", "w"}]}]}], "]"}], ",", " ", 
    "\"\<Text\>\"", ",", " ", "15"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.7983912247335987`*^9, 3.79839125093722*^9}, {
  3.798391486541396*^9, 3.798391538076632*^9}, {3.7983920699147053`*^9, 
  3.798392087846757*^9}, {3.798392214782049*^9, 3.798392265513126*^9}, {
  3.7984997825237427`*^9, 3.7984997865812273`*^9}, {3.7985000334262123`*^9, 
  3.798500034917684*^9}, {3.798500428453533*^9, 3.79850048615411*^9}, {
  3.798500549535843*^9, 3.798500565635745*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"b47ca147-5005-48ef-b6e8-77c0f0c20459"],

Cell[BoxData[
 StyleBox["\<\"Coronavirus disease 2019 (COVID-19) is an infectious disease \
caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). It \
was first identified in December 2019 in Wuhan, China, and has since spread \
globally, resulting in an ongoing pandemic. As of 15 May 2020, more than 4.48 \
million cases have been reported across 188 countries and territories, \
resulting in more than 303,000 deaths. More than 1.6 million people have \
recovered.\\n\\nCommon symptoms include fever, cough, fatigue, shortness of \
breath, and loss of smell and taste. While the majority of cases result in \
mild symptoms, some progress to acute respiratory distress syndrome (ARDS), \
multi-organ failure, septic shock, and blood clots. The time from exposure to \
onset of symptoms is typically around five days but may range from two to \
fourteen days.\\n\\nThe virus is primarily spread between people during close \
contact, most often via small droplets produced by coughing, sneezing, and \
talking. The droplets usually fall to the ground or onto surfaces rather than \
travelling through air over long distances. Less commonly, people may become \
infected by touching a contaminated surface and then touching their face. It \
is most contagious during the first three days after the onset of symptoms, \
although spread is possible before symptoms appear, and from people who do \
not show symptoms. The standard method of diagnosis is by real-time reverse \
transcription polymerase chain reaction (rRT-PCR) from a nasopharyngeal swab. \
Chest CT imaging may also be helpful for diagnosis in individuals where there \
is a high suspicion of infection based on symptoms and risk factors; however, \
guidelines do not recommend using CT imaging for routine \
screening.\\n\\nRecommended measures to prevent infection include frequent \
hand washing, maintaining physical distance from others (especially from \
those with symptoms), quarantine (especially for those with symptoms), \
covering coughs, and keeping unwashed hands away from the face. In addition, \
the use of a face covering is recommended for those who suspect they have the \
virus and their caregivers. Recommendations for face covering use by the \
general public vary, with some authorities recommending for them, some \
recommending against them, and others requiring their use. There is limited \
evidence for or against the use of masks (medical or other) in healthy \
individuals in the wider community.\\n\\nAccording to the World Health \
Organization, there are no available vaccines nor specific antiviral \
treatments for COVID-19. On 1 May 2020, the United States gave Emergency Use \
Authorization to the antiviral remdesivir for people hospitalized with severe \
COVID\:201119. Management involves the treatment of symptoms, supportive \
care, isolation, and experimental measures. The World Health Organization \
(WHO) declared the COVID\:201119 outbreak a Public Health Emergency of \
International Concern (PHEIC) on 30 January 2020 and a pandemic on 11 March \
2020. Local transmission of the disease has occurred in most countries across \
all six WHO regions.\"\>", "Text",
  StripOnInput->False,
  FontSize->15]], "Output",
 CellChangeTimes->{{3.798391508052415*^9, 3.798391539261997*^9}, 
   3.7983920892424*^9, {3.7983922158049173`*^9, 3.798392266545527*^9}, 
   3.798496728758257*^9, {3.798500433742565*^9, 3.798500487499968*^9}, 
   3.798559332415906*^9, 3.798561456129121*^9, 3.798561602077323*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"c08f6bc8-e8ea-44fb-85da-b3a21433ed99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"wordcloud", " ", "of", " ", "the", " ", "Covid"}], "-", 
    RowBox[{"19", " ", "Wikipedia", " ", "article"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"WordCloud", "@", 
   RowBox[{"DeleteStopwords", "@", 
    RowBox[{"TextWords", "@", 
     RowBox[{"WikipediaData", "[", 
      RowBox[{"\"\<CoViD 19\>\"", ",", " ", "\"\<ArticlePlaintext\>\""}], 
      "]"}]}]}]}]}]], "Code",
 CellChangeTimes->{{3.79849683337008*^9, 3.798496855836412*^9}, {
   3.798496895326562*^9, 3.798496942444661*^9}, {3.798497026915004*^9, 
   3.7984970427335987`*^9}, {3.798497280768862*^9, 3.798497280900426*^9}, 
   3.7984997461233397`*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"3c318e20-25c3-4adc-8d9e-29a835085865"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"COVID\:201119\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.178117048346056],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"symptoms\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.1226000462641684],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-21.5, -36.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"disease\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.14203099699282906`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-0.5, 53.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"people\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13092759657645153`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {7.5, -77.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"respiratory\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0837381448068471],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {31.5, 84.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07541059449456397],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-0.5, 110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"infection\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08928984501503587],
     FontColor->RGBColor[1, 0.75, 0]], {-11.5, -116.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"virus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11704834605597965`],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-16.5, 137.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"COVID-19\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06708304418228082],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-0.5, -143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"SARS-CoV-2\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05597964376590331],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {39.5, 160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Health\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0837381448068471],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-116.5, -80.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"2020\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.097617395327319],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {130.5, -40.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"syndrome\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05875549386999769],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-98.5, 88.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"treatment\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06430719407818646],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {107.5, -106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"%\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12815174647235716`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {124.5, 50.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"infected\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05597964376590331],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {122.5, -66.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"severe\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07818644459865834],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {84.5, 130.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"China\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06430719407818646],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-130.5, 43.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cases\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08096229470275272],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-119.5, -103.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"recommended\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654869303724266],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-6.5, -160.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"study\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05597964376590331],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {107.5, 103.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Clinical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.047652093453620176`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {115.5, -86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"acute\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05597964376590331],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-109.5, 109.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"research\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04210039324543142],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-129.5, 65.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"spread\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04487624334952579],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {91.5, -126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"transmission\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03377284293314828],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-101.5, 132.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"March\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05042794355771455],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-104.5, -125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"available\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039324543141337036`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {142.5, 81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"recommends\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-101.5, -140.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"found\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05042794355771455],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-66.5, 159.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"death\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.047652093453620176`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {89.5, -148.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"include\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04210039324543142],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {67.5, -166.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"patients\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039324543141337036`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-91.5, -155.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"individuals\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03377284293314828],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-123.5, 146.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"vaccine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039324543141337036`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {146.5, -126.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pneumonia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-124.5, 162.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mortality\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654869303724266],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {142.5, -142.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"suggested\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {124.5, -161.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"medications\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {123.5, 145.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"National\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03377284293314828],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {137.5, 158.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Wuhan\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654869303724266],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-143.5, -153.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"remdesivir\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-147.5, -168.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"medical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03377284293314828],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-155.5, -29.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hospital\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03377284293314828],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-155.5, -43.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"distress\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03377284293314828],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {161.5, 62.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"reported\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {-8.5, -174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Cause\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654869303724266],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-53.5, -174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"days\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04210039324543142],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {164.5, 39.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"droplets\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-52.5, 176.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"evidence\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {-0.5, 178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"healthcare\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025445292620865142`],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-161.5, -56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"percent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {156.5, 98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ACE2\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654869303724266],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {74.5, -13.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"use\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05597964376590331],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {164.5, -83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"surfaces\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {45.5, 178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"antibody\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-160.5, 103.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"guidelines\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025445292620865142`],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {39.5, -179.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"testing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03377284293314828],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {152.5, 118.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"risk\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.047652093453620176`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-166.5, 78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"common\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03377284293314828],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-159.5, -120.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"blood\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654869303724266],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-157.5, 116.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"deaths\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-96.5, -170.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"develop\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {-96.5, 177.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"alveolar\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {88.5, 178.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039324543141337036`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-156.5, 130.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"number\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {153.5, 131.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"United\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-157.5, -134.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"States\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {112.5, -176.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"time\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.039324543141337036`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {126.5, 172.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"including\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025445292620865142`],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-138.5, 174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"used\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654869303724266],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {148.5, -174.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04210039324543142],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {158.5, 173.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lung\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654869303724266],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-171.5, 148.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"high\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654869303724266],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {172.5, -11.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"public\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-173.5, -15.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03377284293314828],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {176.5, 2.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"January\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025445292620865142`],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-176.5, 25.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"damage\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025445292620865142`],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-10.5, -187.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2019\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03377284293314828],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {175.5, 16.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"known\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-178.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"contact\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {17.5, 189.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"face\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654869303724266],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {70.5, 24.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"hands\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-179.5, 55.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cough\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {178.5, -59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"based\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-28.5, 188.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"heart\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-180.5, 38.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"World\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-179.5, -69.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"CDC\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-177.5, -83.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"women\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-49.5, -187.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"April\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0309969928290539],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-120.5, -60.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"failure\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025445292620865142`],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-126.5, 8.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"care\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03654869303724266],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-177.5, -96.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"trials\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-83.5, 5.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"fever\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025445292620865142`],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {44.5, 145.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"men\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03377284293314828],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-179.5, 12.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"viral\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {55.5, 188.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"died\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025445292620865142`],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {184.5, -27.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"new\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028221142724959524`],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {35.5, -190.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025445292620865142`],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-10.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"1\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.025445292620865142`],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-17.5, -16.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-197., 196.}, {-197., 196.}}]], "Output",
 CellChangeTimes->{
  3.798496835027565*^9, {3.798496904878908*^9, 3.798496948056898*^9}, 
   3.79849704819884*^9, 3.798497285287999*^9, 3.7985593666941137`*^9, 
   3.798561461813974*^9, 3.79856160727728*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"bef26d2f-2d8c-4783-99a0-5e6bf4b50c93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "daily", " ", "page", " ", "hits", " ", "of", " ", "the", " ", "article"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"WikipediaData", "[", 
     RowBox[{"\"\<CoViD 19\>\"", ",", " ", "\"\<DailyPageHits\>\""}], "]"}], 
    ",", " ", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.798497081377418*^9, 3.798497118010436*^9}, {
   3.798497293760231*^9, 3.798497389161775*^9}, 3.798497926538403*^9, {
   3.798499751145567*^9, 3.798499754986505*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"1a1ac13a-c086-4cc7-a035-862b9eaa635d"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw91A1I1GAYB/CVfdkX08ysBKcQSBQcfSFoOrWu08QOoS/JGJIQBDUwgkBo
RJZI0CEFQhQLqYyumiFFELrCyKijQWEkRasssC5dmuVHVj7/PW8Hx/9+PO9u
+7O9y6w+VFEzXZKkqqkv5dTHubsxXohfWrNK8UG40SIH5uezL14naxuEz14i
RzTh8hay3SjcYZK9duFeHK+8+z9vJ4cTC3wbe2NkYy1b7X1JtqrY0kAv2T3F
tgs+keXbbOWvR1bfsK11Q2R9lsre/YNsBthexgjZqWSbb3+if71Y/wrrA7eE
J4bR/7XwmnH0Tyj07eqwvZodSYW9nWy9A1aOs01jAv2jbCNrDP17xPFVsCUV
sZMTKN2V7HBsFqW8nZ3XJlOqx9hRaRmlfo3dcGMxpfmC7USSKJ1J4dpkZHax
764BrA9UsPelp1Bqdey0B6mUkSvsvudplLbDbh3G3BsX8yCsrNjk+3D+Esrw
NnZ3Oc5nHGXbzTif1cJOcXG9bkzMe2B5lB1dj+tXszbz/b26AP3L2PIYbB4R
807YMdmjsUTkU3Z4dA76j7BbK+eif0bQdyB7NvqXsNP6ZqB/rXDmTPS/wN6V
AyvdbGUV7md4iN1weRr6p2/xHVoOW0G2WvZHxWPG9qKTZPk8W5sHq4/Ydh6s
D7KNethcGuLn7+ZvslMsrMPSQbYawfMXaGbrbdgf2kMxb4IjcXG8v3/s1BLu
dwL7y1PZctcvsnKA7eVhHj7Htuqwv4xOtvr4O9nqZzvVmLuLSrlvOizns/Vc
7Hd1v5hn+Pu/qVTsR/yfeZ9tPhtE/89sRYKlpK3ifTeA/rls4wneL1oN2z2J
9ZEzbC30Df3vCce+oP9HthLqR/+FZTwPYh7OEd4BG9Vse08c/U+z3aKv6H9H
uB/r5fdsJSeu/gMVkY0t
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.7904544*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.789504*^9, 
        FormBox[
         StyleBox["\"Feb\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7920096*^9, 
        FormBox[
         StyleBox["\"Mar\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.79728*^9, 
        FormBox[
         StyleBox["\"May\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7999584*^9, 
        FormBox[
         StyleBox["\"Jun\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.789504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7920096*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.79728*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7999584*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      ((Transpose[{#, 
        Table[
         Directive[
          GrayLevel[0.4, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], {
          Length[#]}]}]& )[
       Part[
        Select[
         Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}][
          SlotSequence[1]], And[
          FreeQ[#, 
           Alternatives["", 
            Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]]& )[
       SlotSequence[1]], {Identity, Identity}]& , Automatic}, {{{3.789504*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.7920096*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.794688*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.79728*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.7999584*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}}, Automatic}],
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{
   "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.7904544*^9, 3.7984032*^9}, {0, 426027.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.798497101213141*^9, 3.798497264599678*^9, {3.798497296224379*^9, 
   3.798497347287568*^9}, 3.798497927334366*^9, 3.798499770336699*^9, 
   3.798543101446453*^9, 3.798559372948759*^9, 3.798561463194059*^9, 
   3.7985616082128973`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"53a22b43-4053-4dcd-a720-5fdcc59d79fe"]
}, Open  ]],

Cell["\<\
We can also see a breakdown of how people have been accessing the article. \
Comparably way fewer people use the Wikipedia mobile app and that\
\[CloseCurlyQuote]s probably why that line is mostly flat for the entire \
period. Mobile web and Desktop views were initially the same but mobile grew \
faster in March. Views from Mobile and Desktop are now similar again in \
mid-May, though mobile is still slightly above. This could be because people \
are generally using their phones more frequently than their laptops each day.\
\>", "Text",
 CellChangeTimes->{{3.7984976785264053`*^9, 3.7984978211166286`*^9}, {
  3.798497977145495*^9, 
  3.7984980459412193`*^9}},ExpressionUUID->"f2e0cbbb-208b-4c50-a165-\
e92c1dc7ff1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "breakdown", " ", "of", " ", "page", " ", "views", " ", "by", " ", 
    "access", " ", "types"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"accessData", " ", "=", " ", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", " ", "\[Rule]", " ", 
           RowBox[{"WikipediaData", "[", 
            RowBox[{"\"\<CoViD 19\>\"", ",", " ", 
             RowBox[{"{", 
              RowBox[{"\"\<DailyPageHits\>\"", ",", " ", 
               RowBox[{"\"\<Access\>\"", " ", "\[Rule]", " ", "#"}]}], 
              "}"}]}], "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Desktop\>\"", ",", " ", "\"\<MobileApp\>\"", ",", " ", 
          "\"\<MobileWeb\>\""}], "}"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"DateListPlot", "[", 
     RowBox[{"accessData", ",", " ", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.7984974995441923`*^9, 3.798497688835184*^9}, {
  3.798497828736948*^9, 3.7984979174927063`*^9}, {3.798498207679452*^9, 
  3.7984982083486023`*^9}, {3.798499418645173*^9, 3.798499420776664*^9}, {
  3.798499801787163*^9, 3.798499821594521*^9}, {3.798499936842993*^9, 
  3.798499950573442*^9}, {3.7985005343096*^9, 3.798500538341107*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"ae1e3e82-1ef3-47d9-9fc9-b0678b11ffc5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw10wlIVEEYB/BBISgqNtIoENyKQoLoQRBBpc8jr4wWIYPCeAqGEORSWAaR
UxGKSW12IEX4QCjs3A6yIOllSYJJC5G5afo8sgNL0w47rJz//mdhmf3xzfft
/B/zFhaW5BZFCSHyp75qnfqEGtcNJ+NXwklTLf3a1+uVjZmJdLBO2VqlXVut
HLC0M48rO1XaMZg3ekfbbyt7e7VzLin7pifp/iZluZKWQ83KwXztsifKboX2
s3Zlzy3dn9SlbHbTdpyr7J9mRuy93KdsG7RZMqAc2krbZ2FxlJbXMM+4QYtj
r5E/TLsV75A/Opnzbr5F/uW0vXQI+bfQbjHsPUxbK9Dvu6p9BeeVHbSzGOcN
ihTWd48i/7IUfd5x5N9MB0v/IH85HYiJVqu/gXYq/yL/C9pz5CvyT9Le7O/I
n5AacfEMoVYjl/ZVTyL/AbqzAPXARe28KLU6Idra9g/5f9Gi9CfyL0mLODQO
+zbRZhnmy/209fw38tfTxqMfyN9Oi6wJ5J/Q81phc9F6Po9zX5T9ObSoh+29
tLEvkt+mZcMY8rfRdjlsfNP9t2ErPp37x0eUA1m0nfJR2dlDe+99Qv4LtHj1
GflbaatrGPnHaKcH/TIug/1pcDCdljtwf1w/LeoGkf887fhgs0Xvj3+P/CO6
3oR59oJM3sdDqIdSabMF91HsouVT3GejlrYqcR+tZu2D/cg/TIvT+H9nXhZd
hfdp1KRlbOT+76TdQfT7zuj9sZgvH+r9Gd3I/4G2N6Luzs3m8ynA++JJpGUj
bBbT5kgv8tdob+9B/ge08xjvd2hI10/h/RZzNrBeG0b+NbQ1C/OtIlq+wfkC
J/T+fMxz7ut6XifyD9AivgP5Z+fQ818i/2raaYNloa7X4DzBalrm4jzuXb0/
gPmePl1fGzb/A9LkmJ8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV0g1IE2Ecx/GjIIwi1isGQSsKQnoZvYxBZLeXNGvUYW9SzoYkBEkNhCAI
OqIIQmoEkWbabUomWh5Wmi/gKVpGb1eGFAQtIykYNIJAhEKf3z2/QYPt9uH/
3HP35W5V+ZniilmKokRmvuI487G7dqT9zt9tqvgdz7pM2DM/X9oqEY56aTUi
HI/SSlTYupqdlwpnHmd9XNj9hTaqhLW5O6VrrgnrW2j9lrAZoX8khVNX6I2t
wq4OuqRdWP1MBx4Jx+ao0s1dwoaHroXto/SibvRfpkeeor+dTjxB/yd6cyf6
Z/ul58HWBnoNnDlCB2D3RfoArq+10ftwfX2MDsKmEnCs5w2gP09aGRhC/yG6
9w36L0hbhWPob+E8dxT9o3TlO/T/5f6b3qN/XVDai7mnOMj9bfSfpzU4fo/r
q2HLpo+9Rf8U7ZzvXhuS/of71fZLK4dfoP8c7X2O/kY6DKde0xNO/yRtw+rq
XdKTg+gP0wnYOEvH+tFv0Gov+l/SLT3o/0P7+9C/suC/9yleRH/H87Kq6B7M
M/X0Uuf5j9DDHej/nV1von9FoXQObBbQyYfoj9Ea3ndXHd2G9eowrT5A/y96
6j76l++WXgLbQboJVk7T483or6FzMI8O0iHM42nabET/siK+73BGpYdg9yna
l0T/TfpEAv39dBnm5k/6GeapxXt4P7Arn47dRf9JurIB/Tfog/Xo76M/wPZE
9nysVxbulV5voH87nXsH/RX0Vpwfv06HbqO/m26qRf83+lUd+heEpS9hP81H
67i+Xk6nsZ9ZTX+EU520D/u7vtKlDeo0D3Flpw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw90wtIFFEUBuBJwbTMNhQrCNySIIJiQ7BIstE180UtRhSKMAhCJeREEEZC
QyBFZG2ZIUQ0ZASW4GJSSKVD0gMqGQhkM63xga+W3OxpuZT33/+2sJz5OPfe
3Z8zd21lTWlVjKIoFQtfURc+9sMdoRw8+U+pooxIh5qFPYnZtHJNWMuUjm8U
9mvStU3C1nnpggbhcKe0c1XY/fH/+pvCvoSd9K0uYSND+kOvcKCCNlpfCztn
pTOCwq4OWj08IqwOyv7YsLAep0atpYwJmx7aGBoVtstkP2YC+etps2cS+dtp
K4K+9o5WV04jf2xO1O6aEPJvopXcT8h/gLaK0XefoY0J2NdGOzWfkb9f7o86
oORGrTd8Rf6NtFP9E/n30+GsRaKqp2k7PUlUvZUO3E8Q1XxLN3fEiWpHaLNu
MeoGb9S+Nqz3lNJqOfpaHX0wdamo/ju0tnWZqJZNT3oTRQ3/poOP0Hevz4t6
VeNyUX17aVfJElGNk7Tej98PtND2Efxf5w1tboddv+hwF6yu28Xz78Uifwlt
RGDzBB08F4P8Jq1n/8X8X0k/j2D+32l3moL8aflRewbnMf9C2h//B/M/ThvT
c5j/Ddppgd0vabX7B+Y/S7vsb5j/mt2cfwocyKfD6bOYvy5dCbuu02rwi7D6
TO73hoX1Gdp8gvfJXF3APGUzwraXti7DylHaGcD762mmlTK879pT2d8yhfwh
Wg3hfliphTy/aBz5VVrLxH1yV9PGMfR9TXJ9H+6n0UM7eXBgijbLYSe5iOtf
wK5s2ukdQf5DtLUP91u/QmvJ6JuP5f55B/nHaaUXVlYU87w+2JMlfRvWqmhj
M+y/RFsXh5C/i1buvkf+Ubm+cwD5k0roNqz3baOVuUHkr6StWjhwQboe5zkP
5P522DUs9+8ZUv8ByIGP1Q==
         "]]}}, {{
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7904544*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.7904544*^9, 3.7984032*^9}, {0, 258659.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Desktop\"", "\"MobileApp\"", "\"MobileWeb\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.798497502420702*^9, 3.798497534963757*^9}, 
   3.798497879090746*^9, {3.7984979109667807`*^9, 3.798497919023671*^9}, 
   3.798498210172708*^9, 3.798543105977955*^9, 3.798559377990611*^9, 
   3.7985614648069887`*^9, 3.798561609513043*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"8a731bcf-c6a3-49ee-b382-9ee71582f830"]
}, Open  ]],

Cell["\<\
But are all of those views even from real people? What portion of them are \
from bots?\
\>", "Text",
 CellChangeTimes->{{3.798498061409339*^9, 3.798498100710925*^9}, {
  3.79856128303965*^9, 
  3.798561298752543*^9}},ExpressionUUID->"58e48f20-a5c0-4737-aacf-\
b3f7f0b1309a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "\"\<Bot\>\"", " ", "is", " ", "currenlty", " ", "returning", " ", "an", 
    " ", 
    RowBox[{
    "error", ":", " ", 
     "\"\<Wikipedia servers are currently under maintenance or experiencing a \
technical problem. Please try again in a few minutes.\>\""}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"agentData", " ", "=", " ", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", " ", "\[Rule]", " ", 
           RowBox[{"WikipediaData", "[", 
            RowBox[{"\"\<CoViD 19\>\"", ",", " ", 
             RowBox[{"{", 
              RowBox[{"\"\<DailyPageHits\>\"", ",", " ", 
               RowBox[{"\"\<Agent\>\"", " ", "\[Rule]", " ", "#"}]}], "}"}]}],
             "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"\"\<User\>\"", ",", " ", "\"\<Spider\>\""}], 
         RowBox[{"(*", 
          RowBox[{",", " ", "\"\<Bot\>\""}], "*)"}], "}"}]}], "]"}]}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"DateListPlot", "[", 
     RowBox[{"agentData", ",", " ", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.798498624680244*^9, 3.798498669746552*^9}, {
   3.7984990380422297`*^9, 3.7984990411737537`*^9}, {3.798499838502323*^9, 
   3.798499858664418*^9}, {3.7984999325601273`*^9, 3.798499963315984*^9}, {
   3.7985005307416973`*^9, 3.7985005321981077`*^9}, {3.798543110616452*^9, 
   3.798543116419115*^9}, 3.798559384649351*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"b83475a6-19d2-42c8-a772-114f90573450"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw11A9IE1EcB/DLwhJKTk1DEFqFYUFxVIhY2anLsoyWFUIgXjJDKHJUSFLR
CqO0RUchGBFcGFEqNEwyqWgIkZDRWRIkQWdJf8zqtCyzpHzffd9gfPfh997t
vru7LSivKq6IURSldOotcupld6wdzsUntVEX8Va6Liyszc6hQy3CRqZ07VVh
05DOaBKO1Es3W8Juu3QY+z1vpJe0C/vi1tFbeoSDK2nd3yccLpVe1C/snKYj
A4PCahvt6XSF9dfyeCMjwoFYPWoz/oewpdFaB2zvopWGn+h/ijZqMddu0W7L
d/R/Jdc/+43+03Ojtn/BkWW0eQJ2S2g3ZwL9T9LBhD/o3yr3d42j/0tan4n9
YSVPfl+MSGcpHcmPFanupBtLVZH6cfpGa6rIwE3aX5Es0nohj1eSINKepAPL
E5EZ+VHva8F6rZg+8zxJpHGUTitLEWlep73n5omM2PS1aszdCdrpxfE86V7u
v4e5byt9aHyuyGANPVgIh5vovos4X+cp7fhhdZyu7If1heujzlo1B/2LaL0O
tqppZxtsW7S5OA75hPbsnoX+Y7Q2gLkxvyDq7gf4/c1C2jwyA/0P0tpt2L1C
H+6CPd203obr6Rul1TXT0D9tA6/vJQX9C2i3ZlLcD06ADnf8FVYv00o2rD+i
DS8c+EarK3C/WakbOe+F7Xw6WAUr+2kthPtRa5S2x4SNLrl+D2wO055kPD+R
lELOLTw/rk47zVjv2Uu72Zj7Gmhf26hw8CGtxeP5DX+i9R7MnaRN7HMAVnNo
K4T1eiXtbo8+/xfkPBH/D9Z9Wsn7gv7v5fzuMPonbOb5Z8LaaloZ+4r+FdJn
sd88L53+Gf075f7Bj+j/Ts7rP6B/fBG9A3NfFm2UwcFyOnhsCP1DtPUPc+cO
7TyG1QFp75D+H6HEhXU=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw91A9IE1EAx/GrIBAkroIoCFrDYEjBlSVCpLc0Sxs0hEgCxzEQAqEGSVkU
XlFIIbTM0XBUU8uyLJfZLJg5hGD9g1UiFUHrD5Jx1REFEQXt/fZ+N9htH969
t33fcbcyuK+hea6iKE35t/jMv7Jjmyxv4et6XRw/OLar8getuJJ2i3Gj3LFL
OGw4LhNOn3ZcImyPOt4g7HpHx4PC/qIq6aXHhM0y2jwqnGiiG08J5zqc8Q5h
dcTxWWH9LW2FhUPzdelMl3Bco7Ue4exu2oNx5SQ91S2sDdP2OfS/pq0o+ud5
pWsuon8NHe9D/y46dwn9x+lMDP1DtHUe/dN0dwT9ymbpT3H0l9LrbqN/Jz07
iv52es5d9A/SRSPof0l/HkL/P7oR6ymeaunpBPob6IOYbxyh2++hf4AunUJ/
lvZOoP+P43H0r6qRbkmjfwcdwf81D9Fjd9DfT6tw7hndlkL/b/p5Ev3uLdLf
0Bfy0T9voP8AfQLOxumv2D/lCT2DXu0XHbiF/hW10j3X0V9Hu+H0fvow1rcv
0G030Z9xjPX8P+gA5pvLt0qvxf4naul6jOdC9DXMV2P0aozrD+niYfR/lzZj
k+hfto3zC/3V9CL8nrKX9hauf5T2YD+NSTqF/QlbtDqI/iV10q0439alzUe4
3q4Wjruwvj9C+zDfnKDdV9E/S7/oQ//ieu7HFfRX0m9gfQ/95TL6u+hAP/pT
dDmcnaEfw8rC7dIlWE/bSD/AekYzXYHzw2fovzg/fZ9O4n61P9JRPB9cC3x8
3vWiv4LuRJ8ZpFsxnuikjQH0J+mneH6o7+lXvfp/R49gmg==
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7904544*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.7904544*^9, 3.7984032*^9}, {0, 420650.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"User\"", "\"Spider\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.79849860838242*^9, 3.7984986476230097`*^9, 3.798498680161049*^9, {
   3.79849903993981*^9, 3.798499042634596*^9}, {3.7985431132641993`*^9, 
   3.7985431177639513`*^9}, {3.798559382118759*^9, 3.7985593956217012`*^9}, 
   3.798561465734927*^9, 3.798561610649251*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"d2b5e423-b487-4cee-b103-6745068761c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Spider", " ", "views", " ", "appear", " ", "to", " ", "come", " ", "only",
     " ", "from", " ", 
    RowBox[{"Desktop", ".", " ", "Bot"}], " ", "data", " ", "also", " ", 
    "not", " ", "available", " ", "in", " ", "this", " ", "case"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Grid", "@", 
   RowBox[{"List", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"accessAgentData", " ", "=", " ", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[Rule]", 
              RowBox[{"WikipediaData", "[", 
               RowBox[{"\"\<CoViD 19\>\"", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"\"\<DailyPageHits\>\"", ",", " ", 
                  RowBox[{"\"\<Access\>\"", "\[Rule]", "ac"}], ",", " ", 
                  RowBox[{"\"\<Agent\>\"", "\[Rule]", "#"}]}], "}"}]}], 
               "]"}]}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{"\"\<User\>\"", ",", " ", "\"\<Spider\>\""}], 
             RowBox[{"(*", 
              RowBox[{",", " ", "\"\<Bot\>\""}], "*)"}], "}"}]}], "]"}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"DateListPlot", "[", 
         RowBox[{"accessAgentData", ",", " ", 
          RowBox[{"PlotLabel", "\[Rule]", "ac"}], ",", " ", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", " ", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ac", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Desktop\>\"", ",", " ", "\"\<MobileApp\>\"", ",", " ", 
          "\"\<MobileWeb\>\""}], "}"}]}], "}"}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.798498876296054*^9, 3.798498890191763*^9}, {
   3.798498927243606*^9, 3.798499013578835*^9}, {3.798499045706018*^9, 
   3.79849913621196*^9}, {3.798499187778593*^9, 3.798499221425796*^9}, {
   3.7984993143724623`*^9, 3.798499357195397*^9}, {3.798499886154361*^9, 
   3.798499988101142*^9}, 3.79854313568368*^9, {3.798559401525568*^9, 
   3.798559406779694*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"8f91bdcf-1625-4817-9d0e-f7b42fd20392"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw10wtIFEEcx/HFQAgiTiIpKNwCK4xkKRAptNErH3XQYVQUSJdgHAR5EARJ
0KBUJIpHFAj2WBCEQmrpSSS0WIHQg0vTMC1XTVE0bzMsscScX785kL0PM/t3
vtzuhoqqssoUwzDKl/7UdemTeJo3VYBv43GhLsPa91qUrRX5dNNt5UiOdrRe
OR7R7mxQduu0fczzH2mHbGVzUDunVTm8fDd98rmy3EHLNR3KTrleN14qe5e1
a94qBx5on/isLAa0Q4PKsVTx35HMIWXbor22YeXEMdpYPYL+i7R7BfOs+9qy
D/19tOgfQ/+yAs4b+Ib+bbRMH0X/EVrUwWYNbcZwf7iNtlM99PdqN8COUcjz
TSfRn0VHbsyg/xBt5f1B/wW6pDpFXWN3aKd2Af3dtP34J/oX6MDBWfRvCbI3
axH9ZXSg7i/6z9NOFOvxVlq+h92EdgP+nz9Pm69+oz9zD+enzaH/AG0XYr48
p/1wHv0tdLj9F/rf0fG7cGCOtqoxX2zcy/VuXzkWosMjsH1Wm/02bVf/QP8b
2qyCrVlaTsKRjCK6dhr9pbTdNY7+M7SXO4X+m7Sx/Tv6O2kzYxL9M7Q4PoH+
dcX8fSswzymi5TSeLy9Gm94w+ptp+x0sXuv9h/F8xZK0CML22hKu+3AiSHuj
eD6N03o9iffBaqKNLrxPkQ7aLMbzGZ+i7c3Y76aX8vw+3jdf0MZ6nM88RctF
3B++TrslmC9f0OIW3jdnQu8vwH5v1T766Ff059NGEhZRWmz6gv6rtNuM99lu
117oRf+Yvj8MG2n76UAP+nfRMrsf/ZV6PRvnizfq9egn9D+jXfcj+kf0/r4u
9K8Mcb3xA/pzaRnEuqzQ61sxz6mnxU6cx3ui91/C/MCQ3n+tR/wD60Sa6g==

             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxV0w9IE1EAx/HDIFaEGMEoEFIpiCA4LCJorVNrORu1hAoE4RKEILBBEAhS
RxiOMjpEaSnVymVappdZYY1cskKI4MCQgqhl0h8ZNqJEgiDf797vYIP9+ey9
+/Pd2yttOFnbWKAoSv3SU7wvPewnu7IVzkdVE68zrp0vV/nptWJc355vU/fn
HZ+64LpMODfquly45BOtHxMOr9gtXXJG2NhKp5qFrXo62iacaaP7W4WLRtz5
F4W1D+74JeHIck06ZgrHVToUE7br6G0YV87Tvg5hdZhOYFx/T3d2oX9ZhXR7
N/q30AU30X+UftuD/nP09yvoH6RjneifptO4vqVUSr+7jv7NdPUw+g/T0Yfo
P0sH4cgAfchC/xQ9NID+f/TMEPo3VUlX3kd/Lb0Bx+sttPUI/X3SqZYp9Nsc
/5hE/1+68Bn6N+6RLn2O/oN0He7XaKaTD9DfSx/A9TNv6G9j6F+k50bRX7ZX
erYf/SF64Q76T9M+jNtxen4E/a9pD66v/qFzmK+vD/D/jPOZwXynTtG/4dw1
OnwX/ZN0+h76f9GLmG8U75MuxnpYAdrAeCZCz+P4oh66HPenvaTNQfT/pOde
oH9dtbTXWf8qegHrrTTRhrP+MXcc8/UJ+il+HzNLv+pDvzco3Y35OY1Oj6P/
BH0EfeEueqXTP07X3Eb/D3oijv41NdKBXvT7aSWB/uP0NPZfpIP2wfEk3QTb
X+ksrKzez98T51d30tFb6G+kWzHfvEzPYn5qjPZgv+a+0JPO/i8McT/dQP8O
OgobDXQCx1vttB99mce05yr6P9PeuPYfoiBegQ==
             "]]}}, {{
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}}, {{
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {3.7904544*^9, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}], 
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
             None]}}, GridLines -> {Charting`ScaledTickValues[
            ((Transpose[{#, 
              Table[
               Directive[
                GrayLevel[0.4, 0.5], 
                AbsoluteThickness[1], 
                AbsoluteDashing[{1, 2}]], {
                Length[#]}]}]& )[
             Part[
              Select[
               Charting`DateTicksFunction[
               Automatic, DateTicksFormat -> {Automatic}][
                SlotSequence[1]], And[
                FreeQ[#, 
                 Alternatives["", 
                  Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
              1]]& )[
             SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> 300, 
         Method -> {
          "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
           "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Desktop\"", TraditionalForm], 
         PlotRange -> {{3.7904544*^9, 3.7984032*^9}, {0, 151369.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"User\"", "\"Spider\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxV0g1IE2Ecx/GjNyqiFr1D0BSCkqLRywgifTZLs0ZdkhXibEhCYNRACIKg
EUQQUkcUWqadMzLJ8jBTN0deI7OI6soQgqBlJAVCIwhEKPL57fkNHOzlw//Z
89yXu5yq06XVMzRNC0695ffUy+ndOe7L/Nwm5Odo1pXSngX5yvZR6ZCXFkFp
I0RrIWn7cnZeIZ3uzvqYtPsLbdZK6/MKlBuuSEe20JF6aStI/4hKpy7RuQ+k
XV304U5p8Zn2P5YOzxHKbb3Spoeuh51yelEM/RfpoT70d9LmE/R/oj096J/p
U54P2xvpHDh9hPbB7gv0QZyvd9D7cX5khPbDlubPOLL+Gfrz6KfP0V9Gx96i
/7yyXTyC/nZ6xTD6h7m+5j36/yprmz6gf12hmnsx95TScQf955Q1HTbucV4H
2w7n5e/QP6ks+jF3r92l1v/D9eoHlLWyV+g/S3uH0N9KB+DUG3os0z9BO7DI
3a08kUR/gG6BzTN0eAD9Ji360f+abo+j/w9dkED/mqJpz5NRQn/H/bJr6W7M
0030ssz9f0kPdqH/Nx230L+6WHk2bBXR0UfoD9M6nndXI92B9WKQFg/R/4ue
vI/+VXuUl8JOIX0X1k7Ro23ob6DnYh5K0gJzY5y2WtG/vITPL5wWdBJ219Cb
o+i/QR9vQf8AXYm59ZN+gXlqyV7lWbArnw7fQf8J+mQz+q/Rh5rQn6A/ws7Y
9PXa4n3KeSb6d9Arb6O/mt6K/xtXaXEL/TH6+k30f6MTjehfGOD1Yj99e9Y4
P1JFp7CfVUc7cKqH3oD9XV/pimbxHzwTZnQ=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxV039ExGAcx/FHkSJZSoroikjEiETq9uP6cT/oHImIiSOijoiITiQSTUQk
RkREk5SIJiISIyKiVUQcTUQiuuuP1Xts8/J9nu+zz56tcWwqlS4SQozmz8I9
f7jH3TlV/DueaLm8BzY6aNOgnWXaP6RDD3SyLAxn22l7lPaWAtcq+Yt0ENgP
5y/KPcdnShTYkv9cmO+OBC4tWCwq6Cfv08Yd55vFKupOm4p+/jDroQUV85N7
KvPfcrwtNIz3WgNX/+Yf0rCeMq8x/66GftYN+7nftGjRuf8pHXVjjnVzh3Zc
nfm/dOZvjnD/ByPon51l3d6mvWta+qSVpl7mT9DWDO1atLii5Y9e5m/oY/4o
7UwH/v0+/S3WQ5d08p3O1vfj/dl9/cyfoaVNWrmgM2+0VTfA/DotJml5gzbO
B/A+zBzrTk2U/78S5f5PRJEvuc7x2TPafqW9qhjWl3pizD9OZ9Zo65R2X2hR
GWf+LtpI0+ZqHPmckziez38OLBUcqkgwf2eC+cdoe4X2jmjp8Z9/ACT19M0=

             "]]}}, {{
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}}, {{
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {3.7904544*^9, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}], 
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
             None]}}, GridLines -> {Charting`ScaledTickValues[
            ((Transpose[{#, 
              Table[
               Directive[
                GrayLevel[0.4, 0.5], 
                AbsoluteThickness[1], 
                AbsoluteDashing[{1, 2}]], {
                Length[#]}]}]& )[
             Part[
              Select[
               Charting`DateTicksFunction[
               Automatic, DateTicksFormat -> {Automatic}][
                SlotSequence[1]], And[
                FreeQ[#, 
                 Alternatives["", 
                  Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
              1]]& )[
             SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> 300, 
         Method -> {
          "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
           "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"MobileApp\"", TraditionalForm], 
         PlotRange -> {{3.7904544*^9, 3.7984032*^9}, {0, 22815.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"User\"", "\"Spider\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw11A9IE2EYBvBrgqH4ZxKIgdgWVFJEi0DC0K4sm2V0alIEwiUIQaWDQAwT
ryAKMVqlIIZ0EJrNoBFRCoJHUQmVDJToj9KpYVorl1qZKOb37PkG492P97vb
nr3fd+7yquIKh6IoZStvUVdeoac54T34pNWqooxJT7YIexJy6blmYT1LWrkl
7Nelz6BvNUir14Qjj6WHmoRdn6W1O8Ja3G76ZI+wsUPaei4cLKONxjfC9hVa
zXgv7HxE64VjwuowbQ2OCvti1ahtxxdh00ObA+PCoRO0a3YC+S/TStck8j+k
jfGvyP+BthankD9mD/tFYeTfKp35HfmPSW9B33WJtvph7QGtlv5E/ne0eRwO
KnujDl2cRf7NtFbyF/lLaWX7KlHVetqZmiSq7z493x4nqjlIW+2xooaW6Jqz
q1Ez86LubMV6TzHd7UVfv0Dby/Gi+jtk350oqhWiJz0JokYWaG8AfdeGfVH7
6pJF1Y7Q3mzczzhPt7zE9wfv0tZR/F77LZ22EXbO090BWF2/P+pIawzyF9JX
f8BmNd1d60B+kzYyljH/17S/cwnz/03XxCnIvy6f+61vEfMvoI3pBcz/HB0c
+If5t9FmA+zql+78g/nP0HbvHOaffoDzdMDBfNpMnMH8fbTrMOy8Tfv6fwmr
L2R/W0TYN02rN7CfzLVeuV+mhUN5tF0JK5W0FcD+9bTIftY3Yf2ZdEp0/4dp
8xXOh5VawP8jHecpotLmIvqu07Ragr7WTCsBnE+jj9Y3wcEpeX02bK85yHz3
YGcurXaMIf8pWnfjfPtu0lYYzwOzlzaGbOSfkNe3wUrKIebrgj27aKUO1ito
PR72X6eNnBHk75Hrqz4h/zit1n9E/qRCugjrtZ3STcPIXy7thoONtJKG+9lP
aKMado7K9ckj6n9Aqouq
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxV1A9kVVEcB/CjSJGcRER0SzERl0ikt7PWVqtXXWMiXm7TarW13VrNVqud
VqtJdEVE4hIpoispEV0RI3GJiOhURIyuiET0zve97+E+3ts+fufP73vePW91
73B33zwhRK3+tn/rr/z51rm2xr9S2c+vzkVr/cNfXKEX2nq4yVlYx2G5nl2r
lOYXT8t177PzWutgUWvTKrDWG2mx1zqtOe+xNlfd+B5r+YQ2g9bqE52F1tEC
1bQ+ZJ34dFazzg+4+kHkn6aTw9b+Y1odR/6Pbjwcz2/j+BPIv4HWx6yL/bQX
If8UnQ0h/yM3H+vpD3R4BPnFNu5/FPnX0/EY8vfQ5gzyT9L6HPI/pCM4eU+n
48j/jw4uIH9Le9MPLiJ/Nz0zhfwT9NgV5L/vxk8jf06LS8j/l46xnrdue2l8
sI+eRV2P0+kk8t+jJfYz7+iZy8j/h47Qv1rT0XSLRv4qXWC9ZJRWZ5E/KdfF
W9qcR/7fHaV+w1WdTecTyN9FS5xnNuLqOO/iLq1Q92bpBN9X8Iv2R5B/5Q6e
3ynk76SDUeSP6Bzz5R06GUb+N7TBetFP2sf8ZMVOfh+nkb+djk4i/xAt8Xz5
t9141MPXtMDzHM/RAfrNlnexP+xXKNrgvLwBWjWe/1u0xHz9ita4T+kPZ+xn
lu0q7S8rdOP+qX5n9B/dpCX6T17SGr8X+XfaYL5Yupv3Fefpb6HTRv4+Wg0g
/w1XRz/ZC9rgPhffaIH77C2p0v3Iv5lWOC/dWy31m14v2zyjPawnvzgPqv9Y
lUgr
             "]]}}, {{
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}}, {{
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {
            Directive[
             PointSize[0.009166666666666668], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {3.7904544*^9, 0}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}], 
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
             None]}}, GridLines -> {Charting`ScaledTickValues[
            ((Transpose[{#, 
              Table[
               Directive[
                GrayLevel[0.4, 0.5], 
                AbsoluteThickness[1], 
                AbsoluteDashing[{1, 2}]], {
                Length[#]}]}]& )[
             Part[
              Select[
               Charting`DateTicksFunction[
               Automatic, DateTicksFormat -> {Automatic}][
                SlotSequence[1]], And[
                FreeQ[#, 
                 Alternatives["", 
                  Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
              1]]& )[
             SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> 300, 
         Method -> {
          "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
           "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"MobileWeb\"", TraditionalForm], 
         PlotRange -> {{3.7904544*^9, 3.7984032*^9}, {0, 257966.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"User\"", "\"Spider\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm]}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.79849889504524*^9, {3.7984989558134727`*^9, 3.798498984272957*^9}, 
   3.798499016610623*^9, {3.798499089146427*^9, 3.7984991391159983`*^9}, {
   3.798499202860853*^9, 3.798499224696558*^9}, 3.7984993204288673`*^9, 
   3.7984993601863117`*^9, 3.7984999939859962`*^9, {3.798543120444489*^9, 
   3.798543140540269*^9}, {3.798559398970533*^9, 3.798559410374619*^9}, 
   3.798561468236521*^9, 3.798561613307838*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"d9c1220b-9201-4457-8789-7dedf2863a9a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wikidata", "Subsection",
 CellChangeTimes->{{3.793105989651456*^9, 3.7931060209190106`*^9}, {
  3.793109627904931*^9, 3.793109628263386*^9}, {3.7931132125852256`*^9, 
  3.7931132141230664`*^9}, {3.798390707945075*^9, 3.798390726688531*^9}, {
  3.7983920389290953`*^9, 3.798392064478063*^9}, {3.798399261520561*^9, 
  3.7983992647485857`*^9}, {3.798559712336108*^9, 
  3.798559749180087*^9}},ExpressionUUID->"ea3713b8-fd6f-440e-a8c5-\
5b34b84550de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"search", " ", "for", " ", "COVID"}], "-", "19", "-", 
    RowBox[{"related", " ", "data", " ", "on", " ", "Wikipedia"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"WikidataSearch", "[", "\"\<Covid-19\>\"", "]"}]}]], "Code",
 CellChangeTimes->{{3.798390822061082*^9, 3.798390825708703*^9}, {
  3.798390967397052*^9, 3.79839101644739*^9}, {3.798543621951036*^9, 
  3.798543627817994*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"f200a038-9f72-46d6-a566-ef171bc6a8fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q84263196\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"COVID-19\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"zoonotic respiratory syndrome and infectious disease in \
humans, caused by SARS coronavirus 2\""}]}], "\[RightAssociation]"}]}], "]"}],
      "\"Wikidata\"", "\"COVID-19\"", 
     "http://www.wikidata.org/entity/Q84263196"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q87718451\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           
           RowBox[{"\"Label\"", "\[Rule]", 
             "\"2020 COVID-19 pandemic in Nigeria\""}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"2020 COVID-19 pandemic in Nigeria\"", 
     "http://www.wikidata.org/entity/Q87718451"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q81068910\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"COVID-19 pandemic\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"ongoing pandemic of COVID-19\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"COVID-19 pandemic\"", "http://www.wikidata.org/entity/Q81068910"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q93202208\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"COVID-19\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"scientific article published on 01 April 2020\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", "\"COVID-19\"", 
     "http://www.wikidata.org/entity/Q93202208"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q93219706\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"COVID-19\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"scientific article published on 23 April 2020\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", "\"COVID-19\"", 
     "http://www.wikidata.org/entity/Q93219706"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q91601520\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"COVID-19\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"scientific article published on 30 March 2020\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", "\"COVID-19\"", 
     "http://www.wikidata.org/entity/Q91601520"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q94502207\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"Covid-19\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"scientific article published on 30 April 2020\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", "\"Covid-19\"", 
     "http://www.wikidata.org/entity/Q94502207"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q84055514\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"2020 COVID-19 pandemic in India\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"details of ongoing viral pandemic in India in 2020\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"2020 COVID-19 pandemic in India\"", 
     "http://www.wikidata.org/entity/Q84055514"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q83741704\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"COVID-19 pandemic by country and territory\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"details regarding the 2019\[Dash]20 coronavirus pandemic by \
country and territory\""}]}], "\[RightAssociation]"}]}], "]"}], 
     "\"Wikidata\"", "\"COVID-19 pandemic by country and territory\"", 
     "http://www.wikidata.org/entity/Q83741704"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q83873577\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"COVID-19 pandemic in the United States\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"ongoing coronavirus pandemic in the United States\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"COVID-19 pandemic in the United States\"", 
     "http://www.wikidata.org/entity/Q83873577"},
    "ExternalIdentifierURL"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.798390972270019*^9, 3.798391017930489*^9, 3.7984967616369753`*^9, 
   3.7985431233170013`*^9, {3.798543623065411*^9, 3.798543628233191*^9}, 
   3.7985594558073387`*^9, 3.7985614688608637`*^9, 3.798561614117782*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"ded048e1-0c1b-434c-996a-94aec25b6a79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "view", " ", "the", " ", "properties", " ", "of", " ", "a", " ", "given", 
    " ", "Wikidata", " ", "item"}], " ", "*)"}], "\n", 
  RowBox[{"WikidataData", "[", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q87718451\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            
            RowBox[{"\"Label\"", "\[Rule]", 
              "\"2020 COVID-19 pandemic in Nigeria\""}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in Nigeria\"", 
      "http://www.wikidata.org/entity/Q87718451"},
     "ExternalIdentifierURL"], ",", " ", "\"\<NonIdentifierProperties\>\""}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.798543618158029*^9, 3.798543618581626*^9}, {
  3.798543662078003*^9, 3.798543684366139*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"598e3424-247f-4bcf-a15d-924b7e351c5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P580\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"start time\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"time an item begins to exist or a statement starts being \
valid\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"start time\"", "http://www.wikidata.org/entity/P580"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P625\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"coordinate location\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"geocoordinates of the subject. For Earth, please note that \
only WGS84 coordinating system is supported at the moment\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"coordinate location\"", "http://www.wikidata.org/entity/P625"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P237\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"coat of arms\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"subject's coat of arms\""}]}], "\[RightAssociation]"}]}], 
       "]"}], "\"Wikidata\"", "\"coat of arms\"", 
     "http://www.wikidata.org/entity/P237"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P828\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"has cause\""}], ",", 
             RowBox[{
              "\"Description\"", "\[Rule]", 
               "\"underlying cause, thing that ultimately resulted in this \
effect\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"has cause\"", "http://www.wikidata.org/entity/P828"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P910\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"topic's main category\""}], 
             ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"main Wikimedia category\""}]}], "\[RightAssociation]"}]}], 
       "]"}], "\"Wikidata\"", "\"topic's main category\"", 
     "http://www.wikidata.org/entity/P910"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P276\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"location\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"location of the item, physical object or event is within. \
In case of an administrative entity use P131. In case of a distinct terrain \
feature use P706.\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"location\"", "http://www.wikidata.org/entity/P276"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P361\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"part of\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"object of which the subject is a part (if this subject is \
already part of object A which is a part of object B, then please only make \
the subject part of object A). Inverse property of \\\"has part\\\" (P527, \
see also \\\"has parts of the class\\\" (P2670)).\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", "\"part of\"", 
     "http://www.wikidata.org/entity/P361"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P17\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"country\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"sovereign state of this item (not to be used for human \
beings)\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"country\"", "http://www.wikidata.org/entity/P17"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P31\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"instance of\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"that class of which this subject is a particular example \
and member\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"instance of\"", "http://www.wikidata.org/entity/P31"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P1846\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"distribution map\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"distribution of item on a mapped area (for  range map of \
taxa, use (P181).)\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"distribution map\"", "http://www.wikidata.org/entity/P1846"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P2572\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"hashtag\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"hashtag associated with this entity. Format: do not include \
the \\\"#\\\" symbol\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"",
      "\"hashtag\"", "http://www.wikidata.org/entity/P2572"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P3457\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"case fatality rate\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"proportion of patients who die of a particular medical \
condition out of all who have this condition within a given time frame\""}]}],
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"case fatality rate\"", "http://www.wikidata.org/entity/P3457"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P8010\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"number of recoveries\""}], 
             ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"number of cases that recovered from disease\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"number of recoveries\"", "http://www.wikidata.org/entity/P8010"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P8045\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"organized response related to outbreak\""}], ",", 
             RowBox[{
              "\"Description\"", "\[Rule]", 
               "\"specific action taken or system used as a reaction to an \
outbreak\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"organized response related to outbreak\"", 
     "http://www.wikidata.org/entity/P8045"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P1120\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"number of deaths\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"Total (cumulative) number of people who died since start as \
a direct result of an event or cause\""}]}], "\[RightAssociation]"}]}], "]"}],
      "\"Wikidata\"", "\"number of deaths\"", 
     "http://www.wikidata.org/entity/P1120"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P1603\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"number of cases\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"cumulative number of confirmed, probable and suspected \
occurrences\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"number of cases\"", "http://www.wikidata.org/entity/P1603"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P373\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"Commons category\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"name of the Wikimedia Commons category containing files \
related to this item (without the prefix \\\"Category:\\\")\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"Commons category\"", "http://www.wikidata.org/entity/P373"},
    "ExternalIdentifierURL"]}], "}"}]], "Output",
 CellChangeTimes->{3.798543630161694*^9, 3.7985594714577293`*^9, 
  3.798561469572691*^9, 3.798561615386573*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"fb4f833b-b1da-4bae-aa37-fa4e9bd948c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "view", " ", "data", " ", "and", " ", "their", " ", "respective", " ", 
    "sources"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Values", "@", 
    RowBox[{"WikidataData", "[", 
     RowBox[{
      TemplateBox[{
        RowBox[{"ExternalIdentifier", "[", 
          RowBox[{"\"WikidataID\"", ",", "\"Q87718451\"", ",", 
            RowBox[{"\[LeftAssociation]", 
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Nigeria\""}], 
              "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
        "\"2020 COVID-19 pandemic in Nigeria\"", 
        "http://www.wikidata.org/entity/Q87718451"},
       "ExternalIdentifierURL"], ",", " ", 
      TemplateBox[{
        RowBox[{"ExternalIdentifier", "[", 
          RowBox[{"\"WikidataID\"", ",", "\"P1120\"", ",", 
            RowBox[{"\[LeftAssociation]", 
              RowBox[{
                RowBox[{"\"Label\"", "\[Rule]", "\"number of deaths\""}], ",", 
                
                RowBox[{
                 "\"Description\"", "\[Rule]", 
                  "\"Total (cumulative) number of people who died since start \
as a direct result of an event or cause\""}]}], "\[RightAssociation]"}]}], 
          "]"}], "\"Wikidata\"", "\"number of deaths\"", 
        "http://www.wikidata.org/entity/P1120"},
       "ExternalIdentifierURL"], ",", "\n", 
      RowBox[{"Method", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<StatementFormat\>\"", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<Association\>\"", ",", " ", 
           RowBox[{"\"\<IncludeQualifiers\>\"", "\[Rule]", "True"}], ",", " ", 
           RowBox[{"\"\<IncludeReferences\>\"", "\[Rule]", "True"}]}], 
          "}"}]}], "}"}]}]}], "]"}]}], " ", "//", " ", 
   RowBox[{
    RowBox[{"Short", "[", 
     RowBox[{"#", ",", "5"}], "]"}], "&"}]}]}]], "Code",
 CellChangeTimes->{{3.7985437029567957`*^9, 3.798543704186692*^9}, {
   3.798543855878172*^9, 3.798544005067494*^9}, {3.7985440584059563`*^9, 
   3.79854406188798*^9}, {3.79854409712136*^9, 3.798544222039139*^9}, 
   3.798544714972931*^9, {3.798545654438086*^9, 3.798545673943404*^9}, {
   3.798547562665012*^9, 3.798547563267274*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"a1147914-39a4-481b-8411-dd8c2a536862"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.`", ",", 
      RowBox[{"{", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Tue 17 Mar 2020\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2020", ",", "3", ",", "17"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
        "DateObject",
        Editable->False], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{
           TemplateBox[{
             RowBox[{"ExternalIdentifier", "[", 
               RowBox[{"\"WikidataID\"", ",", "\"P585\"", ",", 
                 RowBox[{"\[LeftAssociation]", 
                   RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"point in time\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"time and date something took place, existed or a \
statement was true\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
             "\"point in time\"", "http://www.wikidata.org/entity/P585"},
            "ExternalIdentifierURL"], "\[Rule]", 
           RowBox[{"{", 
            TemplateBox[{
              RowBox[{
                StyleBox[
                "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                 Plain], "\"Mon 16 Mar 2020\""}], 
              RowBox[{"DateObject", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16"}], "}"}], ",", 
                  "\"Day\"", ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
             "DateObject",
             Editable->False], "}"}]}], ",", 
          RowBox[{
           TemplateBox[{
             RowBox[{"ExternalIdentifier", "[", 
               RowBox[{"\"WikidataID\"", ",", "\"P248\"", ",", 
                 RowBox[{"\[LeftAssociation]", 
                   RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"stated in\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"to be used in the references field to refer to the \
information document or database in which a claim is made; for qualifiers use \
P805\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
             "\"stated in\"", "http://www.wikidata.org/entity/P248"},
            "ExternalIdentifierURL"], "\[Rule]", 
           RowBox[{"{", 
            TemplateBox[{
              RowBox[{"ExternalIdentifier", "[", 
                RowBox[{"\"WikidataID\"", ",", "\"Q87779474\"", ",", 
                  RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"Novel Coronavirus (2019-nCoV) Situation Report 56\""}],
                     ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"report from the WHO about COVID-19 epidemic at 16 \
March 2020\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
              "\"Novel Coronavirus (2019-nCoV) Situation Report 56\"", 
              "http://www.wikidata.org/entity/Q87779474"},
             "ExternalIdentifierURL"], "}"}]}]}], "\[RightAssociation]"}], 
        ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          TemplateBox[{
            RowBox[{"ExternalIdentifier", "[", 
              RowBox[{"\"WikidataID\"", ",", "\"P248\"", ",", 
                RowBox[{"\[LeftAssociation]", 
                  RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"stated in\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"to be used in the references field to refer to the \
information document or database in which a claim is made; for qualifiers use \
P805\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
            "\"stated in\"", "http://www.wikidata.org/entity/P248"},
           "ExternalIdentifierURL"], "\[Rule]", 
          RowBox[{"{", 
           TemplateBox[{
             RowBox[{"ExternalIdentifier", "[", 
               RowBox[{"\"WikidataID\"", ",", "\"Q87843252\"", ",", 
                 RowBox[{"\[LeftAssociation]", 
                   RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"Novel Coronavirus (2019-nCoV) Situation Report 57\""}],
                     ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"report from the WHO about COVID-19 epidemic at 17 \
March 2020\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
             "\"Novel Coronavirus (2019-nCoV) Situation Report 57\"", 
             "http://www.wikidata.org/entity/Q87843252"},
            "ExternalIdentifierURL"], "}"}]}], "\[RightAssociation]"}], ",", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          TemplateBox[{
            RowBox[{"ExternalIdentifier", "[", 
              RowBox[{"\"WikidataID\"", ",", "\"P143\"", ",", 
                RowBox[{"\[LeftAssociation]", 
                  RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"imported from Wikimedia project\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"source of this claim's value; used in references \
section by bots importing data from Wikimedia projects; also allowed to be \
used for manual imports\""}]}], "\[RightAssociation]"}]}], "]"}], 
            "\"Wikidata\"", "\"imported from Wikimedia project\"", 
            "http://www.wikidata.org/entity/P143"},
           "ExternalIdentifierURL"], "\[Rule]", 
          RowBox[{"{", 
           TemplateBox[{
             RowBox[{"ExternalIdentifier", "[", 
               RowBox[{"\"WikidataID\"", ",", "\"Q328\"", ",", 
                 RowBox[{"\[LeftAssociation]", 
                   RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"English Wikipedia\""}],
                     ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"English\:2011language edition of the free online \
encyclopedia\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
             "\"English Wikipedia\"", "http://www.wikidata.org/entity/Q328"},
            "ExternalIdentifierURL"], "}"}]}], "\[RightAssociation]"}]}], 
       "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"103.`", ",", 
      RowBox[{"{", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Wed 6 May 2020\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2020", ",", "5", ",", "6"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
        "DateObject",
        Editable->False], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            RowBox[{"ExternalIdentifier", "[", 
              RowBox[{"\"WikidataID\"", ",", "\"P813\"", ",", 
                RowBox[{"\[LeftAssociation]", 
                  RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"retrieved\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"date or point in time that information was retrieved \
from a database or website (for use in online sources)\""}]}], 
                  "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
            "\"retrieved\"", "http://www.wikidata.org/entity/P813"},
           "ExternalIdentifierURL"], "\[Rule]", 
          RowBox[{"{", 
           TemplateBox[{
             RowBox[{
               StyleBox[
               "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain],
                "\"Thu 7 May 2020\""}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2020", ",", "5", ",", "7"}], "}"}], ",", 
                 "\"Day\"", ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
            "DateObject",
            Editable->False], "}"}]}], ",", 
         RowBox[{
          TemplateBox[{
            RowBox[{"ExternalIdentifier", "[", 
              RowBox[{"\"WikidataID\"", ",", "\"P854\"", ",", 
                RowBox[{"\[LeftAssociation]", 
                  RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"reference URL\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"should be used for Internet URLs as references. Use \\\
\"Wikimedia import URL\\\" (P4656) for interwiki links\""}]}], 
                  "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
            "\"reference URL\"", "http://www.wikidata.org/entity/P854"},
           "ExternalIdentifierURL"], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"URL", "[", 
            TemplateBox[{"\"https://github.com/datasets/covid-19\""},
             "URLArgument"], "]"}], "}"}]}]}], "\[RightAssociation]"}], 
       "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"143.`", ",", 
      RowBox[{"{", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Sun 10 May 2020\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2020", ",", "5", ",", "10"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
        "DateObject",
        Editable->False], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            RowBox[{"ExternalIdentifier", "[", 
              RowBox[{"\"WikidataID\"", ",", "\"P813\"", ",", 
                RowBox[{"\[LeftAssociation]", 
                  RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"retrieved\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"date or point in time that information was retrieved \
from a database or website (for use in online sources)\""}]}], 
                  "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
            "\"retrieved\"", "http://www.wikidata.org/entity/P813"},
           "ExternalIdentifierURL"], "\[Rule]", 
          RowBox[{"{", 
           TemplateBox[{
             RowBox[{
               StyleBox[
               "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain],
                "\"Tue 12 May 2020\""}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2020", ",", "5", ",", "12"}], "}"}], ",", 
                 "\"Day\"", ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
            "DateObject",
            Editable->False], "}"}]}], ",", 
         RowBox[{
          TemplateBox[{
            RowBox[{"ExternalIdentifier", "[", 
              RowBox[{"\"WikidataID\"", ",", "\"P854\"", ",", 
                RowBox[{"\[LeftAssociation]", 
                  RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"reference URL\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"should be used for Internet URLs as references. Use \\\
\"Wikimedia import URL\\\" (P4656) for interwiki links\""}]}], 
                  "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
            "\"reference URL\"", "http://www.wikidata.org/entity/P854"},
           "ExternalIdentifierURL"], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"URL", "[", 
            TemplateBox[{"\"https://datahub.io/core/covid-19\""},
             "URLArgument"], "]"}], "}"}]}], ",", 
         RowBox[{
          TemplateBox[{
            RowBox[{"ExternalIdentifier", "[", 
              RowBox[{"\"WikidataID\"", ",", "\"P7793\"", ",", 
                RowBox[{"\[LeftAssociation]", 
                  RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", "\"filename in archive\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"qualifier and referencing property to identify the \
specific file within a compressed archive that is relevant to a \
statement\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
            "\"filename in archive\"", "http://www.wikidata.org/entity/P7793"},
           "ExternalIdentifierURL"], "\[Rule]", 
          RowBox[{"{", "\<\"r/countries-aggregated.csv\"\>", "}"}]}]}], 
        "\[RightAssociation]"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"158.`", ",", 
      RowBox[{"{", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Tue 12 May 2020\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2020", ",", "5", ",", "12"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
        "DateObject",
        Editable->False], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            RowBox[{"ExternalIdentifier", "[", 
              RowBox[{"\"WikidataID\"", ",", "\"P813\"", ",", 
                RowBox[{"\[LeftAssociation]", 
                  RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"retrieved\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"date or point in time that information was retrieved \
from a database or website (for use in online sources)\""}]}], 
                  "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
            "\"retrieved\"", "http://www.wikidata.org/entity/P813"},
           "ExternalIdentifierURL"], "\[Rule]", 
          RowBox[{"{", 
           TemplateBox[{
             RowBox[{
               StyleBox[
               "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain],
                "\"Thu 14 May 2020\""}], 
             RowBox[{"DateObject", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"2020", ",", "5", ",", "14"}], "}"}], ",", 
                 "\"Day\"", ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
            "DateObject",
            Editable->False], "}"}]}], ",", 
         RowBox[{
          TemplateBox[{
            RowBox[{"ExternalIdentifier", "[", 
              RowBox[{"\"WikidataID\"", ",", "\"P854\"", ",", 
                RowBox[{"\[LeftAssociation]", 
                  RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"reference URL\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"should be used for Internet URLs as references. Use \\\
\"Wikimedia import URL\\\" (P4656) for interwiki links\""}]}], 
                  "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
            "\"reference URL\"", "http://www.wikidata.org/entity/P854"},
           "ExternalIdentifierURL"], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"URL", "[", 
            TemplateBox[{"\"https://datahub.io/core/covid-19\""},
             "URLArgument"], "]"}], "}"}]}], ",", 
         RowBox[{
          TemplateBox[{
            RowBox[{"ExternalIdentifier", "[", 
              RowBox[{"\"WikidataID\"", ",", "\"P7793\"", ",", 
                RowBox[{"\[LeftAssociation]", 
                  RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", "\"filename in archive\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"qualifier and referencing property to identify the \
specific file within a compressed archive that is relevant to a \
statement\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
            "\"filename in archive\"", "http://www.wikidata.org/entity/P7793"},
           "ExternalIdentifierURL"], "\[Rule]", 
          RowBox[{"{", "\<\"r/countries-aggregated.csv\"\>", "}"}]}]}], 
        "\[RightAssociation]"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.`", ",", 
      RowBox[{"{", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Sat 28 Mar 2020\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2020", ",", "3", ",", "28"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
        "DateObject",
        Editable->False], "}"}]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "21", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"68.`", ",", 
      RowBox[{"{", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Fri 1 May 2020\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2020", ",", "5", ",", "1"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
        "DateObject",
        Editable->False], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         TemplateBox[{
           RowBox[{"ExternalIdentifier", "[", 
             RowBox[{"\"WikidataID\"", ",", "\"P854\"", ",", 
               RowBox[{"\[LeftAssociation]", 
                 RowBox[{
                   RowBox[{"\"Label\"", "\[Rule]", "\"reference URL\""}], ",", 
                   
                   RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"should be used for Internet URLs as references. Use \\\
\"Wikimedia import URL\\\" (P4656) for interwiki links\""}]}], 
                 "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
           "\"reference URL\"", "http://www.wikidata.org/entity/P854"},
          "ExternalIdentifierURL"], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"URL", "[", 
           
           TemplateBox[{
            "\"https://ncdc.gov.ng/diseases/sitreps/?cat=14&name=An%20update%\
20of%20COVID-19%20outbreak%20in%20Nigeria\""},
            "URLArgument"], "]"}], "}"}]}], "\[RightAssociation]"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"85.`", ",", 
      RowBox[{"{", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Sat 2 May 2020\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2020", ",", "5", ",", "2"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
        "DateObject",
        Editable->False], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         TemplateBox[{
           RowBox[{"ExternalIdentifier", "[", 
             RowBox[{"\"WikidataID\"", ",", "\"P854\"", ",", 
               RowBox[{"\[LeftAssociation]", 
                 RowBox[{
                   RowBox[{"\"Label\"", "\[Rule]", "\"reference URL\""}], ",", 
                   
                   RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"should be used for Internet URLs as references. Use \\\
\"Wikimedia import URL\\\" (P4656) for interwiki links\""}]}], 
                 "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
           "\"reference URL\"", "http://www.wikidata.org/entity/P854"},
          "ExternalIdentifierURL"], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"URL", "[", 
           
           TemplateBox[{
            "\"https://ncdc.gov.ng/diseases/sitreps/?cat=14&name=An%20update%\
20of%20COVID-19%20outbreak%20in%20Nigeria\""},
            "URLArgument"], "]"}], "}"}]}], "\[RightAssociation]"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"87.`", ",", 
      RowBox[{"{", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Sun 3 May 2020\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2020", ",", "5", ",", "3"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
        "DateObject",
        Editable->False], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         TemplateBox[{
           RowBox[{"ExternalIdentifier", "[", 
             RowBox[{"\"WikidataID\"", ",", "\"P854\"", ",", 
               RowBox[{"\[LeftAssociation]", 
                 RowBox[{
                   RowBox[{"\"Label\"", "\[Rule]", "\"reference URL\""}], ",", 
                   
                   RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"should be used for Internet URLs as references. Use \\\
\"Wikimedia import URL\\\" (P4656) for interwiki links\""}]}], 
                 "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
           "\"reference URL\"", "http://www.wikidata.org/entity/P854"},
          "ExternalIdentifierURL"], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"URL", "[", 
           
           TemplateBox[{
            "\"https://ncdc.gov.ng/diseases/sitreps/?cat=14&name=An%20update%\
20of%20COVID-19%20outbreak%20in%20Nigeria\""},
            "URLArgument"], "]"}], "}"}]}], "\[RightAssociation]"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"93.`", ",", 
      RowBox[{"{", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Mon 4 May 2020\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2020", ",", "5", ",", "4"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", "0.`"}], "]"}]},
        "DateObject",
        Editable->False], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         TemplateBox[{
           RowBox[{"ExternalIdentifier", "[", 
             RowBox[{"\"WikidataID\"", ",", "\"P854\"", ",", 
               RowBox[{"\[LeftAssociation]", 
                 RowBox[{
                   RowBox[{"\"Label\"", "\[Rule]", "\"reference URL\""}], ",", 
                   
                   RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"should be used for Internet URLs as references. Use \\\
\"Wikimedia import URL\\\" (P4656) for interwiki links\""}]}], 
                 "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
           "\"reference URL\"", "http://www.wikidata.org/entity/P854"},
          "ExternalIdentifierURL"], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"URL", "[", 
           
           TemplateBox[{
            "\"https://ncdc.gov.ng/diseases/sitreps/?cat=14&name=An%20update%\
20of%20COVID-19%20outbreak%20in%20Nigeria\""},
            "URLArgument"], "]"}], "}"}]}], "\[RightAssociation]"}], "}"}]}], 
     "}"}]}], "}"}],
  Short[#, 5]& ]], "Output",
 CellChangeTimes->{
  3.798543704798045*^9, {3.798543856552866*^9, 3.7985438786948223`*^9}, {
   3.7985439095998707`*^9, 3.798543916295252*^9}, {3.798543951797491*^9, 
   3.798544006966312*^9}, 3.7985440635562563`*^9, 3.798544102053095*^9, {
   3.7985441917857037`*^9, 3.798544224076453*^9}, {3.798545662908031*^9, 
   3.798545676252144*^9}, 3.79855950772156*^9, 3.79856147234435*^9, 
   3.798561617738882*^9},
 CellLabel->
  "Out[52]//Short=",ExpressionUUID->"a02f6ea9-f9fd-4fa1-ba6e-e5de888a7e6e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"get", " ", "data", " ", "for", " ", 
    RowBox[{"no", ".", " ", "of"}], " ", "cases", " ", "and", " ", "deaths"}],
    " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"casesAndDeathsInNigeria", " ", "=", " ", 
    RowBox[{
     RowBox[{"Association", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"#", " ", "\[Rule]", " ", 
         RowBox[{"WikidataData", "[", 
          RowBox[{
           TemplateBox[{
             RowBox[{"ExternalIdentifier", "[", 
               RowBox[{"\"WikidataID\"", ",", "\"Q87718451\"", ",", 
                 RowBox[{"\[LeftAssociation]", 
                   
                   RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"2020 COVID-19 pandemic in Nigeria\""}], 
                   "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
             "\"2020 COVID-19 pandemic in Nigeria\"", 
             "http://www.wikidata.org/entity/Q87718451"},
            "ExternalIdentifierURL"], ",", " ", "#", ",", "\n", 
           RowBox[{"Method", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"\"\<StatementFormat\>\"", " ", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"\"\<Association\>\"", ",", " ", 
                RowBox[{"\"\<IncludeQualifiers\>\"", "\[Rule]", "True"}], ",",
                 " ", 
                RowBox[{"\"\<IncludeReferences\>\"", "\[Rule]", "False"}]}], 
               "}"}]}], "}"}]}]}], "]"}]}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{
           RowBox[{"ExternalIdentifier", "[", 
             RowBox[{"\"WikidataID\"", ",", "\"P1603\"", ",", 
               RowBox[{"\[LeftAssociation]", 
                 RowBox[{
                   RowBox[{"\"Label\"", "\[Rule]", "\"number of cases\""}], 
                   ",", 
                   
                   RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"cumulative number of confirmed, probable and suspected \
occurrences\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
           "\"number of cases\"", "http://www.wikidata.org/entity/P1603"},
          "ExternalIdentifierURL"], ",", "  ", 
         TemplateBox[{
           RowBox[{"ExternalIdentifier", "[", 
             RowBox[{"\"WikidataID\"", ",", "\"P1120\"", ",", 
               RowBox[{"\[LeftAssociation]", 
                 RowBox[{
                   RowBox[{"\"Label\"", "\[Rule]", "\"number of deaths\""}], 
                   ",", 
                   
                   RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"Total (cumulative) number of people who died since \
start as a direct result of an event or cause\""}]}], 
                 "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
           "\"number of deaths\"", "http://www.wikidata.org/entity/P1120"},
          "ExternalIdentifierURL"]}], "}"}]}], "\[IndentingNewLine]", "]"}], "/.", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a_Association", " ", "/;", " ", 
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], "<", "2"}]}], ")"}], " ", 
      "\[Rule]", " ", "Nothing"}]}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.7985447874908667`*^9, 3.798544826166315*^9}, {
   3.798544884447329*^9, 3.798544889667006*^9}, {3.7985450033855047`*^9, 
   3.798545022641119*^9}, 3.798545368121129*^9, {3.798545458441375*^9, 
   3.798545476979721*^9}, {3.798545514224079*^9, 3.798545532171706*^9}, {
   3.798545680934461*^9, 3.798545693654133*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"1a78227a-723d-4ba4-9429-b21981a88c42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "data"}], " ", "*)"}], "\n", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"Flatten", "@", "#"}], "]"}], "&"}], ",", " ", 
      RowBox[{"Values", "/@", "casesAndDeathsInNigeria"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{";;", ",", " ", ";;"}], "}"}]}], "]"}], ",", "\n", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", " ", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Number of Covid-19 cases and deaths in Nigeria\>\""}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.798544834977453*^9, 3.7985449856532784`*^9}, {
  3.798545504052247*^9, 3.798545504230433*^9}, {3.798545555451539*^9, 
  3.7985456231158648`*^9}, {3.79854569707358*^9, 3.798545699733856*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"854785be-67f3-4c59-89b4-a260423f6032"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw90L9LAmEcx/GH/oIQAqGGLvoDpDnoqdCu2rSt7UIEMa4UBxFKrCEIAn+A
RWByIdzs0CgiDQUN0V8g4iAYISJNDfn99Hw6OO553XC8P2c5bjQ+p5SyZrc8
Z9cktv25+XdUWl6vho31gbjs0Z1DcfeN7jniyTetEuIVK2K8nBQXs7Q6Frce
6A7cf/23Kw5MaX0qTts7xvMZsZeme7CzaBuf5NAbpht59Lr0+xl67+hxAb3P
9O2FOPpFv1yiP7jL71+hf4u2r9Gfov0b9NfopRL6R/Sggv6FPboq/tigxzX8
/ySt7sVrVTpUx942PW1g75D2PewN7Bv/PGLvOj1oYl+JLvv66DzYrtBPvv4F
X5B/pQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQSfgp3fODIgAJOKK4z/wR5IJFXA+QwOQHzoDCpf
SdENxhcA8ZtK4XwREF/oC5wvAeIXebjD+DIg/qIiOF8FxE+S9oDxNUD8Sa5w
vhbY/nw43xDE/zQTzjcGu+cInG8K4ge9g/PNwO6T8ITxLUH8TU5wvg2I/ygH
zrcHu386nO8Adv9rON8FxL9k7wXju4H4TFkwfoMniG80BS7vC/bfPjg/EOy/
FzC+QyjYf0LeUP4BMP+TDYzvEA72z0S4fCTYfVY+UP6DRLD7+mD8A8kOAK24
XAI=
         "]]}}, {{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7933956*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Number of Covid-19 cases and deaths in Nigeria\"", 
       TraditionalForm], 
     PlotRange -> {{3.7933956*^9, 3.798234*^9}, {0, 3163.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{
         RowBox[{"ExternalIdentifier", "[", 
           RowBox[{"\"WikidataID\"", ",", "\"P1603\"", ",", 
             RowBox[{"\[LeftAssociation]", 
               RowBox[{
                 RowBox[{"\"Label\"", "\[Rule]", "\"number of cases\""}], ",", 
                 
                 RowBox[{
                  "\"Description\"", "\[Rule]", 
                   "\"cumulative number of confirmed, probable and suspected \
occurrences\""}]}], "\[RightAssociation]"}]}], "]"}], 
         FormBox["\"Wikidata\"", TraditionalForm], 
         FormBox["\"number of cases\"", TraditionalForm], 
         "http://www.wikidata.org/entity/P1603"}, "ExternalIdentifierURL"], 
       TemplateBox[{
         RowBox[{"ExternalIdentifier", "[", 
           RowBox[{"\"WikidataID\"", ",", "\"P1120\"", ",", 
             RowBox[{"\[LeftAssociation]", 
               RowBox[{
                 RowBox[{"\"Label\"", "\[Rule]", "\"number of deaths\""}], 
                 ",", 
                 
                 RowBox[{
                  "\"Description\"", "\[Rule]", 
                   "\"Total (cumulative) number of people who died since \
start as a direct result of an event or cause\""}]}], 
               "\[RightAssociation]"}]}], "]"}], 
         FormBox["\"Wikidata\"", TraditionalForm], 
         FormBox["\"number of deaths\"", TraditionalForm], 
         "http://www.wikidata.org/entity/P1120"}, "ExternalIdentifierURL"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.798544857600659*^9, 3.798544939759014*^9}, {
   3.79854498039657*^9, 3.7985449862121487`*^9}, 3.798545434428244*^9, {
   3.7985455051112747`*^9, 3.79854557212893*^9}, {3.798545604956835*^9, 
   3.798545630546034*^9}, 3.7985595181609507`*^9, 3.798561474924707*^9, 
   3.798561620888216*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"5a25b66f-41b5-4aa4-9779-9bef3f20ac3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"with", " ", "Wikidata"}], ",", " ", 
    RowBox[{"properties", " ", "have", " ", "properties", " ", 
     RowBox[{"too", ".", " ", "this"}], " ", "is", " ", "great", " ", "for", 
     " ", "building", " ", "a", " ", "custom", " ", "knowledge", " ", "graph",
      " ", "for", " ", "a", " ", "given", " ", "topic"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"WikidataData", "[", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"P1603\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              RowBox[{"\"Label\"", "\[Rule]", "\"number of cases\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"cumulative number of confirmed, probable and suspected \
occurrences\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"number of cases\"", "http://www.wikidata.org/entity/P1603"},
     "ExternalIdentifierURL"], ",", " ", "\"\<NonIdentifierProperties\>\""}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.7985431884659986`*^9, 3.79854318941918*^9}, {
   3.798543238297576*^9, 3.798543276386415*^9}, {3.798543363796445*^9, 
   3.7985433643091803`*^9}, {3.798543526009624*^9, 3.7985435266200457`*^9}, {
   3.798545758004409*^9, 3.7985458144136477`*^9}, 3.798545899427846*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"03c7d746-71a6-4588-98c9-be9a693ad382"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P1629\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"subject item of this property\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"relationship represented by the property\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"subject item of this property\"", 
     "http://www.wikidata.org/entity/P1629"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P31\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"instance of\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"that class of which this subject is a particular example \
and member\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"instance of\"", "http://www.wikidata.org/entity/P31"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P1659\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"see also\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"used to indicate another property that might provide \
additional information about the Wikidata-property\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", "\"see also\"", 
     "http://www.wikidata.org/entity/P1659"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P1855\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{
              "\"Label\"", "\[Rule]", "\"Wikidata property example\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"example where this Wikidata property is used; target item \
is one that would use this property, with qualifier the property being \
described given the associated value\""}]}], "\[RightAssociation]"}]}], "]"}],
      "\"Wikidata\"", "\"Wikidata property example\"", 
     "http://www.wikidata.org/entity/P1855"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P2302\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"property constraint\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"constraint applicable to this Wikidata property\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"property constraint\"", "http://www.wikidata.org/entity/P2302"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P2875\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"property usage tracking category\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"category tracking a Wikidata property in sister \
projects\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"property usage tracking category\"", 
     "http://www.wikidata.org/entity/P2875"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P3254\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"property proposal discussion\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               
               "\"URL of the page (or page section) on which the creation of \
the property was discussed\""}]}], "\[RightAssociation]"}]}], "]"}], 
     "\"Wikidata\"", "\"property proposal discussion\"", 
     "http://www.wikidata.org/entity/P3254"},
    "ExternalIdentifierURL"]}], "}"}]], "Output",
 CellChangeTimes->{{3.798543261552981*^9, 3.798543278255651*^9}, 
   3.798543365218142*^9, 3.7985435277173243`*^9, 3.7985595532765512`*^9, 
   3.798561475265152*^9, 3.798561621700204*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"f5645502-bfb0-414c-a492-ec9f9a5c0e5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"example", " ", "property", " ", "of", " ", "a", " ", "property"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"WikidataData", "[", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"P1603\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              RowBox[{"\"Label\"", "\[Rule]", "\"number of cases\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"cumulative number of confirmed, probable and suspected \
occurrences\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"number of cases\"", "http://www.wikidata.org/entity/P1603"},
     "ExternalIdentifierURL"], ",", " ", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"P1659\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              RowBox[{"\"Label\"", "\[Rule]", "\"see also\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"used to indicate another property that might provide \
additional information about the Wikidata-property\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", "\"see also\"", 
      "http://www.wikidata.org/entity/P1659"},
     "ExternalIdentifierURL"]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.798545833778915*^9, 3.79854587225504*^9}, 
   3.798545905920177*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"b567dd33-007a-4e1f-becf-333ecca10e3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P8049\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"number of hospitalized cases\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"number of cases that are hospitalized\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"number of hospitalized cases\"", 
     "http://www.wikidata.org/entity/P8049"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P8204\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"tabular case data\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"tabular data on Wikimedia Commons of confirmed cases, \
recoveries, deaths, etc. due to a medical event; corresponds to P8011, P1603, \
P8049, P8010, P1120. Do not delete such statements.\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"tabular case data\"", "http://www.wikidata.org/entity/P8204"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P1120\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"number of deaths\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"Total (cumulative) number of people who died since start as \
a direct result of an event or cause\""}]}], "\[RightAssociation]"}]}], "]"}],
      "\"Wikidata\"", "\"number of deaths\"", 
     "http://www.wikidata.org/entity/P1120"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P1193\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"prevalence\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"portion of a population with a given disease\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", "\"prevalence\"",
      "http://www.wikidata.org/entity/P1193"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P2844\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"incidence\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"probability of occurrence of a given condition in a \
population within a specified period of time\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", "\"incidence\"", 
     "http://www.wikidata.org/entity/P2844"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P8011\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"number of clinical tests\""}],
              ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"cumulative number of clinical tests\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"number of clinical tests\"", "http://www.wikidata.org/entity/P8011"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P8010\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"number of recoveries\""}], 
             ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"number of cases that recovered from disease\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"number of recoveries\"", "http://www.wikidata.org/entity/P8010"},
    "ExternalIdentifierURL"]}], "}"}]], "Output",
 CellChangeTimes->{{3.798545834349739*^9, 3.798545872674337*^9}, 
   3.798559554248769*^9, 3.798561475551242*^9, 3.798561622533647*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"5996eb24-6665-4b73-b13e-9dab02e1f304"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "see", " ", "info", " ", "on", " ", "a", " ", "given", " ", "data", " ", 
      RowBox[{"collection", ".", " ", "this"}], " ", "shows", " ", "the", " ",
       "braoder", " ", "context", " ", "of", " ", "the", " ", "data"}], " ", 
     "-", " ", 
     RowBox[{
     "it", " ", "could", " ", "be", " ", "subset", " ", "of", " ", "a", " ", 
      "bigger", " ", "dataset"}]}], ",", " ", 
    RowBox[{
     RowBox[{"and", "/", "or"}], " ", "have", " ", 
     RowBox[{"it", "'"}], "s", " ", "own", " ", 
     RowBox[{"parts", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"WikidataData", "[", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q83873577\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in the United States\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral outbreak in the United States\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in the United States\"", 
      "http://www.wikidata.org/entity/Q83873577"},
     "ExternalIdentifierURL"], ",", " ", "\"\<Dataset\>\""}], "]"}]}]], "Code",
 CellChangeTimes->{{3.798391718245682*^9, 3.798391763607583*^9}, {
   3.7983918011400127`*^9, 3.798391868529909*^9}, 3.7985459985386333`*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"40679cf5-30d1-436d-95a2-5d8faef8cd8b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> Association[ExternalIdentifier["WikidataID", "P18", 
         Association[
         "Label" -> "image", "Description" -> 
          "image of relevant illustration of the subject; if available, use \
more specific properties (sample: coat of arms image, locator map, flag \
image, signature image, logo image, collage image); only images which exist \
on Wikimedia Commons are acceptable"]] -> {
         URL[
         "http://commons.wikimedia.org/wiki/Special:FilePath/Donald%20Trump%\
20Coronavirus%20briefing.jpg"]}, ExternalIdentifier["WikidataID", "P31", 
         Association[
         "Label" -> "instance of", "Description" -> 
          "that class of which this subject is a particular example and \
member"]] -> {
         ExternalIdentifier["WikidataID", "Q3241045", 
          Association[
          "Label" -> "disease outbreak", "Description" -> 
           "sudden increase in occurrences of a disease in a particular time \
and place"]], 
         ExternalIdentifier["WikidataID", "Q216227", 
          Association[
          "Label" -> "state of emergency", "Description" -> 
           "legal declaration or de facto acts by a government allowing \
assumption of extraordinary powers"]]}, 
       ExternalIdentifier["WikidataID", "P580", 
         Association[
         "Label" -> "start time", "Description" -> 
          "time an item begins to exist or a statement starts being valid"]] -> {
         DateObject[{2020, 1, 21}, "Day", "Gregorian", 0.]}, 
       ExternalIdentifier["WikidataID", "P828", 
         Association[
         "Label" -> "has cause", "Description" -> 
          "underlying cause, thing that ultimately resulted in this effect"]] -> {
         ExternalIdentifier["WikidataID", "Q82069695", 
          Association[
          "Label" -> "SARS-CoV-2", "Description" -> 
           "strain of virus causing the ongoing pandemic of coronavirus \
disease 2019 (COVID-19)"]], 
         ExternalIdentifier["WikidataID", "Q84263196", 
          Association[
          "Label" -> "COVID-19", "Description" -> 
           "zoonotic respiratory syndrome and infectious disease in humans, \
caused by SARS coronavirus 2"]]}, ExternalIdentifier["WikidataID", "P361", 
         Association[
         "Label" -> "part of", "Description" -> 
          "object of which the subject is a part (if this subject is already \
part of object A which is a part of object B, then please only make the \
subject part of object A). Inverse property of \"has part\" (P527, see also \
\"has parts of the class\" (P2670))."]] -> {
         ExternalIdentifier["WikidataID", "Q83741704", 
          Association[
          "Label" -> "COVID-19 pandemic by country and territory", 
           "Description" -> 
           "details regarding the 2019\[Dash]20 coronavirus pandemic by \
country and territory"]], 
         ExternalIdentifier["WikidataID", "Q86695115", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in North America", "Description" -> 
           "viral outbreak in North America"]]}, 
       ExternalIdentifier["WikidataID", "P373", 
         Association[
         "Label" -> "Commons category", "Description" -> 
          "name of the Wikimedia Commons category containing files related to \
this item (without the prefix \"Category:\")"]] -> {
        "COVID-19 pandemic in the United States"}, 
       ExternalIdentifier["WikidataID", "P276", 
         Association[
         "Label" -> "location", "Description" -> 
          "location of the item, physical object or event is within. In case \
of an administrative entity use P131. In case of a distinct terrain feature \
use P706."]] -> {
         ExternalIdentifier["WikidataID", "Q30", 
          Association[
          "Label" -> "United States of America", "Description" -> 
           "country in North America"]]}, 
       ExternalIdentifier["WikidataID", "P527", 
         Association[
         "Label" -> "has part", "Description" -> 
          "part of this subject; inverse property of \"part of\" (P361). See \
also \"has parts of the class\" (P2670)."]] -> {
         ExternalIdentifier["WikidataID", "Q87660693", 
          Association[
          "Label" -> "COVID-19 pandemic in Puerto Rico", "Description" -> 
           "Details of ongoing pandemic in Puerto Rico"]], 
         ExternalIdentifier["WikidataID", "Q87742116", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Louisiana", "Description" -> 
           "pandemic in Louisiana, United States"]], 
         ExternalIdentifier["WikidataID", "Q87414741", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in New York", "Description" -> 
           "ongoing viral pandemic in New York state, United States"]], 
         ExternalIdentifier["WikidataID", "Q87743879", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Connecticut", "Description" -> 
           "pandemic in Connecticut, United States"]], 
         ExternalIdentifier["WikidataID", "Q87745202", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Nevada", "Description" -> 
           "pandemic in Nevada, United States"]], 
         ExternalIdentifier["WikidataID", "Q87409953", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Washington", "Description" -> 
           "viral ongoing pandemic in Washington state, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746160", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Oklahoma", "Description" -> 
           "pandemic in Oklahoma, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746032", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in South Dakota", "Description" -> 
           "pandemic in South Dakota, United States"]], 
         ExternalIdentifier["WikidataID", "Q87742765", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Texas", "Description" -> 
           "pandemic in Texas, United States"]], 
         ExternalIdentifier["WikidataID", "Q87742103", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Florida", "Description" -> 
           "pandemic in Florida, United States"]], 
         ExternalIdentifier["WikidataID", "Q87816112", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in American Samoa", 
           "Description" -> "American Samoa"]], 
         ExternalIdentifier["WikidataID", "Q87742107", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Georgia", "Description" -> 
           "pandemic in Georgia, United States"]], 
         ExternalIdentifier["WikidataID", "Q87663590", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in New Jersey", "Description" -> 
           "Details of ongoing viral pandemic in New Jersey"]], 
         ExternalIdentifier["WikidataID", "Q87599914", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Massachusetts", "Description" -> 
           "ongoing viral outbreak in Massachusetts, United States"]], 
         ExternalIdentifier["WikidataID", "Q87742718", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Minnesota", "Description" -> 
           "pandemic in Minnesota, United States"]], 
         ExternalIdentifier["WikidataID", "Q87743903", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Utah", "Description" -> 
           "pandemic in Utah, United States"]], 
         ExternalIdentifier["WikidataID", "Q87742125", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Pennsylvania", "Description" -> 
           "pandemic in Pennsylvania, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746397", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Alaska", "Description" -> 
           "pandemic in Alaska, United States"]], 
         ExternalIdentifier["WikidataID", "Q87742750", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Kansas", "Description" -> 
           "pandemic in Kansas, United States"]], 
         ExternalIdentifier["WikidataID", "Q87743852", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Tennessee", "Description" -> 
           "pandemic in Tennessee, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746177", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Hawaii", "Description" -> 
           "pandemic in Hawaii, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746410", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in North Dakota", "Description" -> 
           "pandemic in North Dakota, United States"]], 
         ExternalIdentifier["WikidataID", "Q87730011", 
          Association[
          "Label" -> 
           "COVID-19 pandemic in the United States Virgin Islands"]], 
         ExternalIdentifier["WikidataID", "Q87742754", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Michigan", "Description" -> 
           "2020 pandemic in Michigan, United States"]], 
         ExternalIdentifier["WikidataID", "Q87743873", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Ohio", "Description" -> 
           "pandemic in Ohio, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746043", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Montana", "Description" -> 
           "pandemic in Montana, United States"]], 
         ExternalIdentifier["WikidataID", "Q87745216", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Arkansas", "Description" -> 
           "pandemic in Arkansas, United States"]], 
         ExternalIdentifier["WikidataID", "Q87745208", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Nebraska", "Description" -> 
           "pandemic in Nebraska, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746132", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in New Hampshire", "Description" -> 
           "pandemic in New Hampshire, United States"]], 
         ExternalIdentifier["WikidataID", "Q87745981", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Kentucky", "Description" -> 
           "pandemic in Kentucky, United States"]], 
         ExternalIdentifier["WikidataID", "Q87742131", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Washington, D.C.", 
           "Description" -> "pandemic in Washington, D.C., United States"]], 
         ExternalIdentifier["WikidataID", "Q87743899", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Indiana", "Description" -> 
           "pandemic in Indiana, United States"]], 
         ExternalIdentifier["WikidataID", "Q87743905", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Iowa", "Description" -> 
           "pandemic in Iowa, United States"]], 
         ExternalIdentifier["WikidataID", "Q87742118", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Maryland", "Description" -> 
           "pandemic in Maryland, United States"]], 
         ExternalIdentifier["WikidataID", "Q87743900", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in South Carolina", 
           "Description" -> "pandemic in South Carolina, United States"]], 
         ExternalIdentifier["WikidataID", "Q87816426", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in the Northern Mariana Islands",
            "Description" -> "pandemic in Northern Mariana Islands"]], 
         ExternalIdentifier["WikidataID", "Q87769115", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Guam", "Description" -> 
           "pandemic in Guam, United States"]], 
         ExternalIdentifier["WikidataID", "Q87742748", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Illinois", "Description" -> 
           "pandemic in Illinois, United States"]], 
         ExternalIdentifier["WikidataID", "Q87743890", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Rhode Island", "Description" -> 
           "pandemic in Rhode Island, United States"]], 
         ExternalIdentifier["WikidataID", "Q87743872", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Wisconsin", "Description" -> 
           "pandemic in Wisconsin, United States"]], 
         ExternalIdentifier["WikidataID", "Q87455852", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in California", "Description" -> 
           "public health event"]], 
         ExternalIdentifier["WikidataID", "Q87746304", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Maine", "Description" -> 
           "pandemic in Maine, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746018", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in New Mexico", "Description" -> 
           "pandemic in New Mexico, United States"]], 
         ExternalIdentifier["WikidataID", "Q87651920", 
          Association["Label" -> "2020 COVID-19 pandemic in Oregon"]], 
         ExternalIdentifier["WikidataID", "Q87742089", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Virginia", "Description" -> 
           "pandemic in Virginia, United States"]], 
         ExternalIdentifier["WikidataID", "Q87816110", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in West Virginia", "Description" -> 
           "pandemic in West Virginia, United States"]], 
         ExternalIdentifier["WikidataID", "Q87742745", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Delaware", "Description" -> 
           "pandemic in Delaware, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746165", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Mississippi", "Description" -> 
           "pandemic in Mississippi, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746024", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Alabama", "Description" -> 
           "pandemic in Alabama, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746168", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Idaho", "Description" -> 
           "pandemic in Idaho, United States"]], 
         ExternalIdentifier["WikidataID", "Q87743878", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in North Carolina", 
           "Description" -> "pandemic in North Carolina, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746028", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Arizona", "Description" -> 
           "pandemic in Arizona, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746277", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Vermont", "Description" -> 
           "pandemic in Vermont, United States"]], 
         ExternalIdentifier["WikidataID", "Q87746359", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Wyoming", "Description" -> 
           "pandemic in Wyoming, United States"]], 
         ExternalIdentifier["WikidataID", "Q87742736", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Colorado", "Description" -> 
           "Ongoing COVID-19 viral pandemic in Colorado, United States"]], 
         ExternalIdentifier["WikidataID", "Q89490207", 
          Association[
          "Label" -> "COVID-19 pandemic on USS Theodore Roosevelt", 
           "Description" -> 
           "2020 coronavirus pandemic on the aircraft carrier USS Theodore \
Roosevelt (CVN-71)"]], 
         ExternalIdentifier["WikidataID", "Q89819517", 
          Association[
          "Label" -> 
           "2020 COVID-19 pandemic in the Guantanamo Bay Naval Base"]], 
         ExternalIdentifier["WikidataID", "Q87746176", 
          Association[
          "Label" -> "2020 COVID-19 pandemic in Missouri", "Description" -> 
           "pandemic in Missouri, United States"]]}, 
       ExternalIdentifier["WikidataID", "P17", 
         Association[
         "Label" -> "country", "Description" -> 
          "sovereign state of this item (not to be used for human beings)"]] -> {
         ExternalIdentifier["WikidataID", "Q30", 
          Association[
          "Label" -> "United States of America", "Description" -> 
           "country in North America"]]}, 
       ExternalIdentifier["WikidataID", "P856", 
         Association[
         "Label" -> "official website", "Description" -> 
          "URL of the official homepage of an item (current or former) [if \
the homepage changes, add an additional statement with preferred rank. Do not \
remove the former URL]"]] -> {
         URL["https://coronavirus.gov/"]}, 
       ExternalIdentifier["WikidataID", "P910", 
         Association[
         "Label" -> "topic's main category", "Description" -> 
          "main Wikimedia category"]] -> {
         ExternalIdentifier["WikidataID", "Q87568950", 
          Association[
          "Label" -> 
           "Category:2020 coronavirus pandemic in the United States", 
           "Description" -> "Wikimedia category"]]}, 
       ExternalIdentifier["WikidataID", "P973", 
         Association[
         "Label" -> "described at URL", "Description" -> 
          "item is described at the following URL"]] -> {
         URL["https://www.cdc.gov/coronavirus/2019-ncov/cases-in-us.html"], 
         URL["https://www.worldometers.info/coronavirus/country/us/"]}, 
       ExternalIdentifier["WikidataID", "P7153", 
         Association[
         "Label" -> "significant place", "Description" -> 
          "significant or notable places associated with the subject"]] -> {
         ExternalIdentifier["WikidataID", "Q392599", 
          Association[
          "Label" -> "Everett", "Description" -> 
           "city in Washington, United States of America"]], 
         ExternalIdentifier["WikidataID", "Q110739", 
          Association[
          "Label" -> "Santa Clara County", "Description" -> 
           "county in California, United States"]]}, 
       ExternalIdentifier["WikidataID", "P8011", 
         Association[
         "Label" -> "number of clinical tests", "Description" -> 
          "cumulative number of clinical tests"]] -> {8.005589*^6}, 
       ExternalIdentifier["WikidataID", "P8010", 
         Association[
         "Label" -> "number of recoveries", "Description" -> 
          "number of cases that recovered from disease"]] -> CompressedData["
1:eJxTTMoPSmVkYGAwZoACp8UOYHpBBYQOPwihm7dC6OA9YLoh8AiE/nscIr7+
DJh26LsIpg9EXYOIB92EqFtzC0JzPYLIM72HqA/7CKYD1kDoC45fIPT/P2B6
xj9GRxB9gokZTEu0coFpF0YBML1CRghM62QKg2mFmxB9N3ZA1DMkpEPsjbgM
sdf4KoR/8i6EvncfQp94DrF39Qcw/SEGYu8LE1YwLXAWQmsEcIPpBi9+MH3m
PcT+Brs3YH0KrVD3/2GAuOcrG8ScOg6Ie5kh7mfwWQkJn0sbIfZ/gYSLwi+I
foZvvyC0AK8jACa2WM0=
        "], ExternalIdentifier["WikidataID", "P8045", 
         Association[
         "Label" -> "organized response related to outbreak", "Description" -> 
          "specific action taken or system used as a reaction to an \
outbreak"]] -> {
         ExternalIdentifier["WikidataID", "Q87945071", 
          Association[
          "Label" -> 
           "U.S. state and local government response to the 2020 coronavirus \
pandemic"]]}, ExternalIdentifier["WikidataID", "P1120", 
         Association[
         "Label" -> "number of deaths", "Description" -> 
          "Total (cumulative) number of people who died since start as a \
direct result of an event or cause"]] -> CompressedData["
1:eJxVz08og2EcwPHHfSRJK5fRclyTCyFvi9uSlAultVJuk5KL1nIhpx3k4DRx
WA4cFInytlLUypvISd42GaZ5DeWoft/fDu9z+fR7nuf3ryuZmpxrMsbETeP0
WNiH9pTGMXRTGMiis4jRNE7v4PGJmBm8FO3xW9HausfQoxiquL5+ibEKeWuv
3KffxdxZlTzvQ8w2e/y/wNa2L9GL1cWF3m8xeqr+oVP8YZ7QC/1X3sif5d5k
ZnTvpLqk80X0fRSHNjGxjvO7mM8zf/s18wbvMFzy123UMd1qUDXYWcPIJ3vt
sd/EBnuY/l/9P6z1ttnr4EnMtVT13RvBAeLaEe4fonuOqzZeFbBUpF7cIe54
IA6URfembPnqmrCvn1V4Zu9lT+vWrX8RW3UJ
        "], ExternalIdentifier["WikidataID", "P1424", 
         Association[
         "Label" -> "topic's main template", "Description" -> 
          "primary infobox or navigational template of this subject"]] -> {
         ExternalIdentifier["WikidataID", "Q89388402", 
          Association[
          "Label" -> 
           "Template:2020 coronavirus pandemic in the United States", 
           "Description" -> "Wikimedia template"]]}, 
       ExternalIdentifier["WikidataID", "P1542", 
         Association[
         "Label" -> "has effect", "Description" -> "effect of this cause"]] -> {
         ExternalIdentifier["WikidataID", "Q90840954", 
          Association[
          "Label" -> 
           "Impact of the 2019\[Dash]20 coronavirus pandemic on abortion in \
the United States"]]}, ExternalIdentifier["WikidataID", "P1603", 
         Association[
         "Label" -> "number of cases", "Description" -> 
          "cumulative number of confirmed, probable and suspected \
occurrences"]] -> CompressedData["
1:eJyd0k8og2EcB/BnKKUmZS3WWu+wGWOGkYOxEQeRP42Uy5r8iTLlIv96V3Ih
HFw2lwlxUXYgykEOwkEiIaUlZCu1w3tRknx/D/WKi/fy6Xl+z/P7Pc/vffQe
b0uXgjHmZV+f0fG7WnJllRz2k7EhsidMHkdhuP8VBt2PUGAJzk97H5RwckYF
y71pkJkOsG5yI4vGgpvXbYSDbyaaZ7kOuRRXN+cjbhUsMM5uhd4t0ndfBNvu
bLD+ogTqqgWel/F8JlJs5uM0hzyu+qHw+7wUIpOXyGeRDF5B61oM7kfO4Xx8
Is4hsVQ42K2Ge9Ma2O7Xkul6eDZthDut2XT+sgCv3wQHCqlfgaccp+xe31r+
p+j8wwaZLqUZdd3leVBdVQg1evoPyz5SqimGjbskcy1gvxg5oXxHO6R1FAbN
7zDcqaA+hXRw5CaD9ovjiNduU72XWRu/f6xSZsoc1m3eSvC6IgnrVqIplC9C
fZ46zISn6wae38P70cHN4/euk9l7Se8wulgAq810jj4DvbuxCXLXXur8AEYW
gUw=
        "], ExternalIdentifier["WikidataID", "P1660", 
         Association[
         "Label" -> "has index case", "Description" -> 
          "initial patient in the population of an epidemiological \
investigation"]] -> {
         ExternalIdentifier["WikidataID", "Q89703948", 
          Association[
          "Label" -> "Patrick Jones", "Description" -> 
           "first federal inmate to die in the 2020 COVID-19 pandemic in the \
United States"]], 
         ExternalIdentifier["WikidataID", "Q90136425", 
          Association[
          "Label" -> "Frank Gabrin", "Description" -> 
           "first ER physician to die in the 2020 COVID-19 pandemic in the \
United States"]]}, ExternalIdentifier["WikidataID", "P1846", 
         Association[
         "Label" -> "distribution map", "Description" -> 
          
          "distribution of item on a mapped area (for  range map of taxa, use \
(P181).)"]] -> {
         URL[
         "http://commons.wikimedia.org/wiki/Special:FilePath/COVID-19%\
20Outbreak%20Cases%20in%20the%20United%20States%20%28Density%29.svg"]}, 
       ExternalIdentifier["WikidataID", "P2184", 
         Association[
         "Label" -> "history of topic", "Description" -> 
          "historical development of an item's topic"]] -> {
         ExternalIdentifier["WikidataID", "Q87952372", 
          Association[
          "Label" -> 
           "timeline of the 2020 coronavirus pandemic in the United States", 
           "Description" -> "timeline"]]}, 
       ExternalIdentifier["WikidataID", "P2572", 
         Association[
         "Label" -> "hashtag", "Description" -> 
          "hashtag associated with this entity. Format: do not include the \
\"#\" symbol"]] -> {"CoronavirusUSA"}, 
       ExternalIdentifier["WikidataID", "P3457", 
         Association[
         "Label" -> "case fatality rate", "Description" -> 
          "proportion of patients who die of a particular medical condition \
out of all who have this condition within a given time frame"]] -> \
CompressedData["
1:eJxTTMoPSmVkYGAwBOKlfg7CiYcX238Q8wj4I7HYPmz+6rU34pfZvwncIdf6
eqP9ybJ986X019prxvQf+qqxxr7TMeHpBaXV9pZbTgBlVtn/qsvaUzJ5hf2q
j5d8kwRW2O/y5GHSbl9mXy2yzv1h1RI4PeeIwoaijIX2IFMDd8yD6pthL61/
V4Wtcaq99X3/3ul5i+wrX6oZcqxZA6dnzQSBlfba7WI3z31fbC/JEsanu2mu
PZAT/HjpbDgNMX+i/Z+VIIdMgNrTB6ch7u2Cuq8NTkPc1wLVvxGqfwHUfR1Q
+9bCabCzZFbZd+c8/73y4yL7CIjBUHfOhNMQc6fY3/4JNgjqv0lwGuK/HjgN
AG2Rv4w=
        "], ExternalIdentifier["WikidataID", "P3479", 
         Association[
         "Label" -> "Omni topic ID", "Description" -> 
          "identifier for a topic, used by Omni and Aftonbladet"]] -> {
         ExternalIdentifier[
          ExternalIdentifier["WikidataID", "P3479", 
           Association[
           "Label" -> "Omni topic ID", "Description" -> 
            "identifier for a topic, used by Omni and Aftonbladet"]], 
          "d73a4655-3455-4719-9206-6561ff18cf18"]}, 
       ExternalIdentifier["WikidataID", "P3984", 
         Association[
         "Label" -> "subreddit", "Description" -> 
          "name of the Reddit forum associated to this subject"]] -> {
         ExternalIdentifier[
          ExternalIdentifier["WikidataID", "P3984", 
           Association[
           "Label" -> "subreddit", "Description" -> 
            "name of the Reddit forum associated to this subject"]], 
          "CoronavirusUS"]}], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 27], 
     "Meta" -> Association["ID" -> 43271996549225], "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 27], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 27, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P18\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"image\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"image of relevant illustration of the subject; if \
available, use more specific properties (sample: coat of arms image, locator \
map, flag image, signature image, logo image, collage image); only images \
which exist on Wikimedia Commons are acceptable\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"image\"", "http://www.wikidata.org/entity/P18"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P18", 
                   Association[
                   "Label" -> "image", "Description" -> 
                    "image of relevant illustration of the subject; if \
available, use more specific properties (sample: coat of arms image, locator \
map, flag image, signature image, logo image, collage image); only images \
which exist on Wikimedia Commons are acceptable"]]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    URL[
                    "http://commons.wikimedia.org/wiki/Special:FilePath/\
Donald%20Trump%20Coronavirus%20briefing.jpg"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    URL[
                    "http://commons.wikimedia.org/wiki/Special:FilePath/\
Donald%20Trump%20Coronavirus%20briefing.jpg"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P18", 
                    Association[
                    "Label" -> "image", "Description" -> 
                    "image of relevant illustration of the subject; if \
available, use more specific properties (sample: coat of arms image, locator \
map, flag image, signature image, logo image, collage image); only images \
which exist on Wikimedia Commons are acceptable"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P18", 
                   Association[
                   "Label" -> "image", "Description" -> 
                    "image of relevant illustration of the subject; if \
available, use more specific properties (sample: coat of arms image, locator \
map, flag image, signature image, logo image, collage image); only images \
which exist on Wikimedia Commons are acceptable"]]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P31\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"instance of\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"that class of which this subject is a particular \
example and member\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"instance of\"", "http://www.wikidata.org/entity/P31"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P31", 
                   Association[
                   "Label" -> "instance of", "Description" -> 
                    "that class of which this subject is a particular example \
and member"]]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q3241045", 
                    Association[
                    "Label" -> "disease outbreak", "Description" -> 
                    
                    "sudden increase in occurrences of a disease in a \
particular time and place"]], 
                    ExternalIdentifier["WikidataID", "Q216227", 
                    Association[
                    "Label" -> "state of emergency", "Description" -> 
                    "legal declaration or de facto acts by a government \
allowing assumption of extraordinary powers"]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q3241045", 
                    Association[
                    "Label" -> "disease outbreak", "Description" -> 
                    "sudden increase in occurrences of a disease in a \
particular time and place"]], 
                    ExternalIdentifier["WikidataID", "Q216227", 
                    Association[
                    "Label" -> "state of emergency", "Description" -> 
                    "legal declaration or de facto acts by a government \
allowing assumption of extraordinary powers"]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P31", 
                    Association[
                    "Label" -> "instance of", "Description" -> 
                    "that class of which this subject is a particular example \
and member"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P31", 
                   Association[
                   "Label" -> "instance of", "Description" -> 
                    "that class of which this subject is a particular example \
and member"]]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P580\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"start time\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"time an item begins to exist or a statement starts \
being valid\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"start time\"", "http://www.wikidata.org/entity/P580"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P580", 
                   Association[
                   "Label" -> "start time", "Description" -> 
                    "time an item begins to exist or a statement starts being \
valid"]]]}, "Item", False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    DateObject[{2020, 1, 21}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    DateObject[{2020, 1, 21}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P580", 
                    Association[
                    "Label" -> "start time", "Description" -> 
                    "time an item begins to exist or a statement starts being \
valid"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P580", 
                   Association[
                   "Label" -> "start time", "Description" -> 
                    "time an item begins to exist or a statement starts being \
valid"]]]}, "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P828\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"has cause\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"underlying cause, thing that ultimately resulted in \
this effect\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"has cause\"", "http://www.wikidata.org/entity/P828"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P828", 
                   Association[
                   "Label" -> "has cause", "Description" -> 
                    "underlying cause, thing that ultimately resulted in this \
effect"]]]}, "Item", False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q82069695", 
                    Association[
                    "Label" -> "SARS-CoV-2", "Description" -> 
                    "strain of virus causing the ongoing pandemic of \
coronavirus disease 2019 (COVID-19)"]], 
                    ExternalIdentifier["WikidataID", "Q84263196", 
                    Association[
                    "Label" -> "COVID-19", "Description" -> 
                    "zoonotic respiratory syndrome and infectious disease in \
humans, caused by SARS coronavirus 2"]]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q82069695", 
                    Association[
                    "Label" -> "SARS-CoV-2", "Description" -> 
                    "strain of virus causing the ongoing pandemic of \
coronavirus disease 2019 (COVID-19)"]], 
                    ExternalIdentifier["WikidataID", "Q84263196", 
                    Association[
                    "Label" -> "COVID-19", "Description" -> 
                    "zoonotic respiratory syndrome and infectious disease in \
humans, caused by SARS coronavirus 2"]]}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P828", 
                    Association[
                    "Label" -> "has cause", "Description" -> 
                    "underlying cause, thing that ultimately resulted in this \
effect"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P828", 
                   Association[
                   "Label" -> "has cause", "Description" -> 
                    "underlying cause, thing that ultimately resulted in this \
effect"]]]}, "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P361\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"part of\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"object of which the subject is a part (if this subject \
is already part of object A which is a part of object B, then please only \
make the subject part of object A). Inverse property of \\\"has part\\\" \
(P527, see also \\\"has parts of the class\\\" (P2670)).\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"part of\"", "http://www.wikidata.org/entity/P361"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P361", 
                   Association[
                   "Label" -> "part of", "Description" -> 
                    "object of which the subject is a part (if this subject \
is already part of object A which is a part of object B, then please only \
make the subject part of object A). Inverse property of \"has part\" (P527, \
see also \"has parts of the class\" (P2670))."]]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q83741704", 
                    Association[
                    "Label" -> "COVID-19 pandemic by country and territory", 
                    "Description" -> 
                    "details regarding the 2019\[Dash]20 coronavirus pandemic \
by country and territory"]], 
                    ExternalIdentifier["WikidataID", "Q86695115", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in North America", 
                    "Description" -> "viral outbreak in North America"]]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q83741704", 
                    Association[
                    "Label" -> "COVID-19 pandemic by country and territory", 
                    "Description" -> 
                    "details regarding the 2019\[Dash]20 coronavirus pandemic \
by country and territory"]], 
                    ExternalIdentifier["WikidataID", "Q86695115", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in North America", 
                    "Description" -> "viral outbreak in North America"]]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P361", 
                    Association[
                    "Label" -> "part of", "Description" -> 
                    "object of which the subject is a part (if this subject \
is already part of object A which is a part of object B, then please only \
make the subject part of object A). Inverse property of \"has part\" (P527, \
see also \"has parts of the class\" (P2670))."]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P361", 
                   Association[
                   "Label" -> "part of", "Description" -> 
                    "object of which the subject is a part (if this subject \
is already part of object A which is a part of object B, then please only \
make the subject part of object A). Inverse property of \"has part\" (P527, \
see also \"has parts of the class\" (P2670))."]]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P373\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"Commons category\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"name of the Wikimedia Commons category containing \
files related to this item (without the prefix \\\"Category:\\\")\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"Commons category\"", 
                   "http://www.wikidata.org/entity/P373"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P373", 
                   Association[
                   "Label" -> "Commons category", "Description" -> 
                    "name of the Wikimedia Commons category containing files \
related to this item (without the prefix \"Category:\")"]]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"COVID-19 pandemic in the United States"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"COVID-19 pandemic in the United States"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P373", 
                    Association[
                    "Label" -> "Commons category", "Description" -> 
                    "name of the Wikimedia Commons category containing files \
related to this item (without the prefix \"Category:\")"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P373", 
                   Association[
                   "Label" -> "Commons category", "Description" -> 
                    "name of the Wikimedia Commons category containing files \
related to this item (without the prefix \"Category:\")"]]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P276\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"location\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"location of the item, physical object or event is \
within. In case of an administrative entity use P131. In case of a distinct \
terrain feature use P706.\""}]}], "\[RightAssociation]"}]}], "]"}], 
                   "\"Wikidata\"", "\"location\"", 
                   "http://www.wikidata.org/entity/P276"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P276", 
                   Association[
                   "Label" -> "location", "Description" -> 
                    "location of the item, physical object or event is \
within. In case of an administrative entity use P131. In case of a distinct \
terrain feature use P706."]]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q30", 
                    Association[
                    "Label" -> "United States of America", "Description" -> 
                    "country in North America"]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q30", 
                    Association[
                    "Label" -> "United States of America", "Description" -> 
                    "country in North America"]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P276", 
                    Association[
                    "Label" -> "location", "Description" -> 
                    "location of the item, physical object or event is \
within. In case of an administrative entity use P131. In case of a distinct \
terrain feature use P706."]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P276", 
                   Association[
                   "Label" -> "location", "Description" -> 
                    "location of the item, physical object or event is \
within. In case of an administrative entity use P131. In case of a distinct \
terrain feature use P706."]]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P527\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"has part\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"part of this subject; inverse property of \\\"part \
of\\\" (P361). See also \\\"has parts of the class\\\" (P2670).\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"has part\"", "http://www.wikidata.org/entity/P527"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P527", 
                   Association[
                   "Label" -> "has part", "Description" -> 
                    "part of this subject; inverse property of \"part of\" \
(P361). See also \"has parts of the class\" (P2670)."]]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 58], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 58], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P527", 
                    Association[
                    "Label" -> "has part", "Description" -> 
                    "part of this subject; inverse property of \"part of\" \
(P361). See also \"has parts of the class\" (P2670)."]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P527", 
                   Association[
                   "Label" -> "has part", "Description" -> 
                    "part of this subject; inverse property of \"part of\" \
(P361). See also \"has parts of the class\" (P2670)."]]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P17\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"country\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"sovereign state of this item (not to be used for human \
beings)\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"country\"", "http://www.wikidata.org/entity/P17"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P17", 
                   Association[
                   "Label" -> "country", "Description" -> 
                    "sovereign state of this item (not to be used for human \
beings)"]]]}, "Item", False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q30", 
                    Association[
                    "Label" -> "United States of America", "Description" -> 
                    "country in North America"]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q30", 
                    Association[
                    "Label" -> "United States of America", "Description" -> 
                    "country in North America"]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P17", 
                    Association[
                    "Label" -> "country", "Description" -> 
                    "sovereign state of this item (not to be used for human \
beings)"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P17", 
                   Association[
                   "Label" -> "country", "Description" -> 
                    "sovereign state of this item (not to be used for human \
beings)"]]]}, "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P856\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"official website\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"URL of the official homepage of an item (current or \
former) [if the homepage changes, add an additional statement with preferred \
rank. Do not remove the former URL]\""}]}], "\[RightAssociation]"}]}], "]"}], 
                   "\"Wikidata\"", "\"official website\"", 
                   "http://www.wikidata.org/entity/P856"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P856", 
                   Association[
                   "Label" -> "official website", "Description" -> 
                    "URL of the official homepage of an item (current or \
former) [if the homepage changes, add an additional statement with preferred \
rank. Do not remove the former URL]"]]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    URL["https://coronavirus.gov/"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    URL["https://coronavirus.gov/"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P856", 
                    Association[
                    "Label" -> "official website", "Description" -> 
                    "URL of the official homepage of an item (current or \
former) [if the homepage changes, add an additional statement with preferred \
rank. Do not remove the former URL]"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P856", 
                   Association[
                   "Label" -> "official website", "Description" -> 
                    "URL of the official homepage of an item (current or \
former) [if the homepage changes, add an additional statement with preferred \
rank. Do not remove the former URL]"]]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P910\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", "\"topic's main category\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"main Wikimedia category\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"topic's main category\"", 
                   "http://www.wikidata.org/entity/P910"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P910", 
                   Association[
                   "Label" -> "topic's main category", "Description" -> 
                    "main Wikimedia category"]]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q87568950", 
                    Association[
                    "Label" -> 
                    "Category:2020 coronavirus pandemic in the United States",
                     "Description" -> "Wikimedia category"]]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q87568950", 
                    Association[
                    "Label" -> 
                    "Category:2020 coronavirus pandemic in the United States",
                     "Description" -> "Wikimedia category"]]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P910", 
                    Association[
                    "Label" -> "topic's main category", "Description" -> 
                    "main Wikimedia category"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P910", 
                   Association[
                   "Label" -> "topic's main category", "Description" -> 
                    "main Wikimedia category"]]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P973\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"described at URL\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"item is described at the following URL\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"described at URL\"", 
                   "http://www.wikidata.org/entity/P973"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P973", 
                   Association[
                   "Label" -> "described at URL", "Description" -> 
                    "item is described at the following URL"]]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    URL[
                    "https://www.cdc.gov/coronavirus/2019-ncov/cases-in-us.\
html"], 
                    URL[
                    "https://www.worldometers.info/coronavirus/country/us/"]},
                    ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    URL[
                    "https://www.cdc.gov/coronavirus/2019-ncov/cases-in-us.\
html"], 
                    URL[
                    "https://www.worldometers.info/coronavirus/country/us/"]},
                     ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P973", 
                    Association[
                    "Label" -> "described at URL", "Description" -> 
                    "item is described at the following URL"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P973", 
                   Association[
                   "Label" -> "described at URL", "Description" -> 
                    "item is described at the following URL"]]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P7153\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"significant place\""}],
                     ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"significant or notable places associated with the \
subject\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"significant place\"", 
                   "http://www.wikidata.org/entity/P7153"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P7153", 
                   Association[
                   "Label" -> "significant place", "Description" -> 
                    "significant or notable places associated with the \
subject"]]]}, "Item", False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q392599", 
                    Association[
                    "Label" -> "Everett", "Description" -> 
                    "city in Washington, United States of America"]], 
                    ExternalIdentifier["WikidataID", "Q110739", 
                    Association[
                    "Label" -> "Santa Clara County", "Description" -> 
                    "county in California, United States"]]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q392599", 
                    Association[
                    "Label" -> "Everett", "Description" -> 
                    "city in Washington, United States of America"]], 
                    ExternalIdentifier["WikidataID", "Q110739", 
                    Association[
                    "Label" -> "Santa Clara County", "Description" -> 
                    "county in California, United States"]]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P7153", 
                    Association[
                    "Label" -> "significant place", "Description" -> 
                    "significant or notable places associated with the \
subject"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P7153", 
                   Association[
                   "Label" -> "significant place", "Description" -> 
                    "significant or notable places associated with the \
subject"]]]}, "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P8011\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", "\"number of clinical tests\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"cumulative number of clinical tests\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"number of clinical tests\"", 
                   "http://www.wikidata.org/entity/P8011"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P8011", 
                   Association[
                   "Label" -> "number of clinical tests", "Description" -> 
                    "cumulative number of clinical tests"]]]}, "Item", False],
                "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{8.005589*^6}, ShowStringCharacters -> False], 
                  Style[
                   Style[{8.005589*^6}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P8011", 
                    Association[
                    "Label" -> "number of clinical tests", "Description" -> 
                    "cumulative number of clinical tests"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P8011", 
                   Association[
                   "Label" -> "number of clinical tests", "Description" -> 
                    "cumulative number of clinical tests"]]]}, "Item", False],
                "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P8010\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", "\"number of recoveries\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"number of cases that recovered from disease\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"number of recoveries\"", 
                   "http://www.wikidata.org/entity/P8010"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P8010", 
                   Association[
                   "Label" -> "number of recoveries", "Description" -> 
                    "number of cases that recovered from disease"]]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 51], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 51], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P8010", 
                    Association[
                    "Label" -> "number of recoveries", "Description" -> 
                    "number of cases that recovered from disease"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P8010", 
                   Association[
                   "Label" -> "number of recoveries", "Description" -> 
                    "number of cases that recovered from disease"]]]}, "Item",
                 False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P8045\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"organized response related to outbreak\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"specific action taken or system used as a reaction to \
an outbreak\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"organized response related to outbreak\"", 
                   "http://www.wikidata.org/entity/P8045"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P8045", 
                   Association[
                   "Label" -> "organized response related to outbreak", 
                    "Description" -> 
                    "specific action taken or system used as a reaction to an \
outbreak"]]]}, "Item", False], "Mouse"], ImageSize -> {{60, Full}, Automatic},
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q87945071", 
                    Association[
                    "Label" -> 
                    "U.S. state and local government response to the 2020 \
coronavirus pandemic"]]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q87945071", 
                    Association[
                    "Label" -> 
                    "U.S. state and local government response to the 2020 \
coronavirus pandemic"]]}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P8045", 
                    Association[
                    "Label" -> "organized response related to outbreak", 
                    "Description" -> 
                    "specific action taken or system used as a reaction to an \
outbreak"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P8045", 
                   Association[
                   "Label" -> "organized response related to outbreak", 
                    "Description" -> 
                    "specific action taken or system used as a reaction to an \
outbreak"]]]}, "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P1120\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"number of deaths\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"Total (cumulative) number of people who died since \
start as a direct result of an event or cause\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"number of deaths\"", 
                   "http://www.wikidata.org/entity/P1120"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P1120", 
                   Association[
                   "Label" -> "number of deaths", "Description" -> 
                    "Total (cumulative) number of people who died since start \
as a direct result of an event or cause"]]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 76], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 76], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P1120", 
                    Association[
                    "Label" -> "number of deaths", "Description" -> 
                    "Total (cumulative) number of people who died since start \
as a direct result of an event or cause"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P1120", 
                   Association[
                   "Label" -> "number of deaths", "Description" -> 
                    "Total (cumulative) number of people who died since start \
as a direct result of an event or cause"]]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P1424\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", "\"topic's main template\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"primary infobox or navigational template of this \
subject\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"topic's main template\"", 
                   "http://www.wikidata.org/entity/P1424"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P1424", 
                   Association[
                   "Label" -> "topic's main template", "Description" -> 
                    "primary infobox or navigational template of this \
subject"]]]}, "Item", False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q89388402", 
                    Association[
                    "Label" -> 
                    "Template:2020 coronavirus pandemic in the United States",
                     "Description" -> "Wikimedia template"]]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q89388402", 
                    Association[
                    "Label" -> 
                    "Template:2020 coronavirus pandemic in the United States",
                     "Description" -> "Wikimedia template"]]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P1424", 
                    Association[
                    "Label" -> "topic's main template", "Description" -> 
                    "primary infobox or navigational template of this \
subject"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P1424", 
                   Association[
                   "Label" -> "topic's main template", "Description" -> 
                    "primary infobox or navigational template of this \
subject"]]]}, "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P1542\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"has effect\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"effect of this cause\""}]}], "\[RightAssociation]"}]}],
                     "]"}], "\"Wikidata\"", "\"has effect\"", 
                   "http://www.wikidata.org/entity/P1542"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P1542", 
                   Association[
                   "Label" -> "has effect", "Description" -> 
                    "effect of this cause"]]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q90840954", 
                    Association[
                    "Label" -> 
                    "Impact of the 2019\[Dash]20 coronavirus pandemic on \
abortion in the United States"]]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q90840954", 
                    Association[
                    "Label" -> 
                    "Impact of the 2019\[Dash]20 coronavirus pandemic on \
abortion in the United States"]]}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P1542", 
                    Association[
                    "Label" -> "has effect", "Description" -> 
                    "effect of this cause"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P1542", 
                   Association[
                   "Label" -> "has effect", "Description" -> 
                    "effect of this cause"]]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P1603\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"number of cases\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"cumulative number of confirmed, probable and suspected \
occurrences\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"number of cases\"", 
                   "http://www.wikidata.org/entity/P1603"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P1603", 
                   Association[
                   "Label" -> "number of cases", "Description" -> 
                    "cumulative number of confirmed, probable and suspected \
occurrences"]]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 111], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 111], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P1603", 
                    Association[
                    "Label" -> "number of cases", "Description" -> 
                    "cumulative number of confirmed, probable and suspected \
occurrences"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P1603", 
                   Association[
                   "Label" -> "number of cases", "Description" -> 
                    "cumulative number of confirmed, probable and suspected \
occurrences"]]]}, "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}],
              BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 27, 1], {1, 27 - -20 + 1}], Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 27, 1], {1, 27 - -20 + 1}], Appearance -> None],
                     " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    27, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    27, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 27, 1], {1, 27 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 27, 1], {1, 27 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
      ImageSizeCache->{1062., {347.134033203125, 352.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1062., {347.134033203125, 352.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.798391720724388*^9, 3.7983917655071373`*^9}, 
   3.798543390808502*^9, 3.79854601822313*^9, 3.798559556908349*^9, 
   3.798561476971034*^9, 3.79856162587446*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"206f5011-f9c0-4a67-9bd6-043f10f0410b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "list", " ", "of", " ", "countries", " ", "for", " ", "which", " ", 
     "there", " ", "is", " ", "Wikidata", " ", "coverage", " ", "on", " ", 
     "Covid"}], "-", 
    RowBox[{"19", " ", "pandemic"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"covidPandemicCountries", " ", "=", " ", 
     RowBox[{"WikidataData", "[", 
      RowBox[{
       TemplateBox[{
         RowBox[{"ExternalIdentifier", "[", 
           RowBox[{"\"WikidataID\"", ",", "\"Q83741704\"", ",", 
             RowBox[{"\[LeftAssociation]", 
               RowBox[{
                 
                 RowBox[{
                  "\"Label\"", "\[Rule]", 
                   "\"COVID-19 pandemic by country and territory\""}], ",", 
                 
                 RowBox[{
                  "\"Description\"", "\[Rule]", 
                   "\"details regarding the 2019\[Dash]20 coronavirus \
pandemic by country and territory\""}]}], "\[RightAssociation]"}]}], "]"}], 
         "\"Wikidata\"", "\"COVID-19 pandemic by country and territory\"", 
         "http://www.wikidata.org/entity/Q83741704"},
        "ExternalIdentifierURL"], ",", " ", 
       TemplateBox[{
         RowBox[{"ExternalIdentifier", "[", 
           RowBox[{"\"WikidataID\"", ",", "\"P527\"", ",", 
             RowBox[{"\[LeftAssociation]", 
               RowBox[{
                 RowBox[{"\"Label\"", "\[Rule]", "\"has part\""}], ",", 
                 
                 RowBox[{
                  "\"Description\"", "\[Rule]", 
                   "\"part of this subject; inverse property of \\\"part of\\\
\" (P361). See also \\\"has parts of the class\\\" (P2670).\""}]}], 
               "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
         "\"has part\"", "http://www.wikidata.org/entity/P527"},
        "ExternalIdentifierURL"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Short", "[", 
    RowBox[{"covidPandemicCountries", ",", ".2"}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.798546031078271*^9, 3.79854610822469*^9}, {
  3.798546226612793*^9, 3.798546281780479*^9}, {3.7985464960673018`*^9, 
  3.7985465671347027`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"11581f65-329d-410a-ac24-6833c354a1d7"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q83872271\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2019\[Dash]20 coronavirus pandemic in mainland China\""}], 
              ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral outbreak in mainland China\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2019\[Dash]20 coronavirus pandemic in mainland China\"", 
      "http://www.wikidata.org/entity/Q83872271"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q83872291\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"COVID-19 pandemic in Japan\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral outbreak in Japan\""}]}], "\[RightAssociation]"}]}], 
        "]"}], "\"Wikidata\"", "\"COVID-19 pandemic in Japan\"", 
      "http://www.wikidata.org/entity/Q83872291"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q83872398\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2019\[Dash]20 COVID-19 outbreak in South Korea\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral outbreak in South Korea\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2019\[Dash]20 COVID-19 outbreak in South Korea\"", 
      "http://www.wikidata.org/entity/Q83872398"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q83873057\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"COVID-19 pandemic in Vietnam\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral outbreak in Vietnam\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"COVID-19 pandemic in Vietnam\"", 
      "http://www.wikidata.org/entity/Q83873057"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q83873387\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Singapore\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"details of ongoing viral outbreak in Singapore\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in Singapore\"", 
      "http://www.wikidata.org/entity/Q83873387"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q83873548\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Australia\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral outbreak in Australia\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in Australia\"", 
      "http://www.wikidata.org/entity/Q83873548"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q83873556\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Malaysia\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral outbreak in Malaysia\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in Malaysia\"", 
      "http://www.wikidata.org/entity/Q83873556"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q83873566\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Thailand\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral outbreak in Thailand\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in Thailand\"", 
      "http://www.wikidata.org/entity/Q83873566"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q83873573\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2019\[Dash]20 coronavirus outbreak in Nepal\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral outbreak in Nepal\""}]}], "\[RightAssociation]"}]}], 
        "]"}], "\"Wikidata\"", 
      "\"2019\[Dash]20 coronavirus outbreak in Nepal\"", 
      "http://www.wikidata.org/entity/Q83873573"},
     "ExternalIdentifierURL"], ",", 
    RowBox[{"\[LeftSkeleton]", "178", "\[RightSkeleton]"}], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q87250913\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Georgia\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"details of ongoing viral pandemic in Georgia\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in Georgia\"", 
      "http://www.wikidata.org/entity/Q87250913"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q87250930\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Cameroon\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral pandemic in Cameroon\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in Cameroon\"", 
      "http://www.wikidata.org/entity/Q87250930"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q87250948\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"COVID-19 pandemic in Slovenia\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"details of ongoing viral pandemic in Slovenia\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"COVID-19 pandemic in Slovenia\"", 
      "http://www.wikidata.org/entity/Q87250948"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q87343682\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Tunisia\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral outbreak in Tunisia\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in Tunisia\"", 
      "http://www.wikidata.org/entity/Q87343682"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q87412028\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Brunei\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"details of ongoing outbreak in Brunei\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in Brunei\"", 
      "http://www.wikidata.org/entity/Q87412028"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q87454162\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Oman\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral pandemic in Oman\""}]}], "\[RightAssociation]"}]}], 
        "]"}], "\"Wikidata\"", "\"2020 COVID-19 pandemic in Oman\"", 
      "http://www.wikidata.org/entity/Q87454162"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q87473205\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Turkey\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"details of ongoing viral outbreak in Turkey\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in Turkey\"", 
      "http://www.wikidata.org/entity/Q87473205"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q87477841\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"COVID-19 pandemic in Panama\""}], ",", 
              RowBox[{
               "\"Description\"", "\[Rule]", 
                "\"viral outbreak in Panama\""}]}], "\[RightAssociation]"}]}],
         "]"}], "\"Wikidata\"", "\"COVID-19 pandemic in Panama\"", 
      "http://www.wikidata.org/entity/Q87477841"},
     "ExternalIdentifierURL"], ",", 
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q87480220\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 COVID-19 pandemic in Bolivia\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"viral pandemic in Bolivia\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 COVID-19 pandemic in Bolivia\"", 
      "http://www.wikidata.org/entity/Q87480220"},
     "ExternalIdentifierURL"]}], "}"}],
  Short[#, 0.2]& ]], "Output",
 CellChangeTimes->{{3.798546262215719*^9, 3.798546283631195*^9}, {
   3.7985465393470087`*^9, 3.798546568572549*^9}, 3.798559565451976*^9, 
   3.7985614789269*^9, 3.7985616292244053`*^9},
 CellLabel->
  "Out[59]//Short=",ExpressionUUID->"8dbc7411-e4bc-4523-8e39-d60b2d81eabe"]
}, Open  ]],

Cell["\<\
Responses to the outbreak differ from one country to another. Also, the \
absence of data for a particular country does not suggest that no precautions \
were put in place.\
\>", "Text",
 CellChangeTimes->{{3.798546942766765*^9, 
  3.79854697829884*^9}},ExpressionUUID->"c02d98e3-3590-4475-8233-\
c6490dcb6164"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WikidataData", "[", 
  RowBox[{
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q87186365\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"2020 COVID-19 pandemic in the Republic of Ireland\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"details of ongoing viral outbreak in the Republic of \
Ireland\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"2020 COVID-19 pandemic in the Republic of Ireland\"", 
     "http://www.wikidata.org/entity/Q87186365"},
    "ExternalIdentifierURL"], ",", "  ", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P8045\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"organized response related to outbreak\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"specific action taken or system used as a reaction to an \
outbreak\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"organized response related to outbreak\"", 
     "http://www.wikidata.org/entity/P8045"},
    "ExternalIdentifierURL"]}], "]"}]], "Code",
 CellChangeTimes->{{3.798546734577189*^9, 3.798546808652699*^9}, {
  3.798546906418603*^9, 3.7985469506587687`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"2a30e187-8c35-49e8-a6be-35f312df79d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q93623431\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"2020 Ireland COVID-19 social distancing\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"COVID-19 countermeasure in Ireland\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"2020 Ireland COVID-19 social distancing\"", 
     "http://www.wikidata.org/entity/Q93623431"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q93623429\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"2020 Ireland COVID-19 closing of educational \
institutions\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"COVID-19 countermeasure in Ireland\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"2020 Ireland COVID-19 closing of educational institutions\"", 
     "http://www.wikidata.org/entity/Q93623429"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q93623435\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"2020 Ireland COVID-19 closing of non-essential \
businesses\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"COVID-19 countermeasure in Ireland\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"2020 Ireland COVID-19 closing of non-essential businesses\"", 
     "http://www.wikidata.org/entity/Q93623435"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q93623433\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"2020 Ireland COVID-19 lockdown\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"COVID-19 countermeasure in Ireland\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"2020 Ireland COVID-19 lockdown\"", 
     "http://www.wikidata.org/entity/Q93623433"},
    "ExternalIdentifierURL"]}], "}"}]], "Output",
 CellChangeTimes->{{3.7985467365091352`*^9, 3.7985467755761414`*^9}, 
   3.798546818789535*^9, 3.798546951333263*^9, 3.7985595711472597`*^9, 
   3.798561479447639*^9, 3.798561629738806*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"1cf05203-d5c3-4ec3-a6e4-13ed09502441"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "see", " ", "when", " ", "a", " ", "particular", " ", "measure", " ", 
    "was", " ", "announced", " ", "and", " ", "enacted"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"WikidataData", "[", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q93623431\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"2020 Ireland COVID-19 social distancing\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"COVID-19 countermeasure in Ireland\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"2020 Ireland COVID-19 social distancing\"", 
      "http://www.wikidata.org/entity/Q93623431"},
     "ExternalIdentifierURL"], ",", " ", "\"\<Dataset\>\""}], "]"}]}]], "Code",
 CellChangeTimes->{{3.798546324305773*^9, 3.7985464140745163`*^9}, {
  3.7985464722063313`*^9, 3.7985464726960573`*^9}, {3.7985465918139467`*^9, 
  3.7985465924681063`*^9}, {3.7985468250967484`*^9, 3.798546891277136*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"55ad6394-6835-486d-8e35-f5db3e73af49"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> Association[ExternalIdentifier["WikidataID", "P31", 
         Association[
         "Label" -> "instance of", "Description" -> 
          "that class of which this subject is a particular example and \
member"]] -> {
         ExternalIdentifier["WikidataID", "Q30314010", 
          Association[
          "Label" -> "social distancing", "Description" -> 
           "reduction of human social interaction in an effort to prevent the \
spread of infectious disease"]]}, ExternalIdentifier["WikidataID", "P6949", 
         Association[
         "Label" -> "announcement date", "Description" -> 
          "time of the first public presentation of a subject by the creator, \
of information by the media"]] -> {
         DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, 
       ExternalIdentifier["WikidataID", "P580", 
         Association[
         "Label" -> "start time", "Description" -> 
          "time an item begins to exist or a statement starts being valid"]] -> {
         DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, 
       ExternalIdentifier["WikidataID", "P828", 
         Association[
         "Label" -> "has cause", "Description" -> 
          "underlying cause, thing that ultimately resulted in this effect"]] -> {
         ExternalIdentifier["WikidataID", "Q89277307"]}, 
       ExternalIdentifier["WikidataID", "P1001", 
         Association[
         "Label" -> "applies to jurisdiction", "Description" -> 
          "the item (an institution, law, public office ...) or statement \
belongs to or has power over or applies to the value (a territorial \
jurisdiction: a country, state, municipality, ...)"]] -> {
         ExternalIdentifier["WikidataID", "Q27", 
          Association[
          "Label" -> "Ireland", "Description" -> 
           "sovereign state in northwestern Europe covering five-sixths of \
the island of Ireland"]]}], "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Vector[TypeSystem`AnyType, 1], 5], "Meta" -> 
     Association["ID" -> 43276291516527], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 5, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Vector[TypeSystem`AnyType, 1], 5], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 5, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P31\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"instance of\""}], ",", 
                    RowBox[{"\"Description\"", "\[Rule]", 
                    "\"that class of which this subject is a particular \
example and member\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"instance of\"", "http://www.wikidata.org/entity/P31"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P31", 
                   Association[
                   "Label" -> "instance of", "Description" -> 
                    "that class of which this subject is a particular example \
and member"]]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q30314010", 
                    Association[
                    "Label" -> "social distancing", "Description" -> 
                    "reduction of human social interaction in an effort to \
prevent the spread of infectious disease"]]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q30314010", 
                    Association[
                    "Label" -> "social distancing", "Description" -> 
                    "reduction of human social interaction in an effort to \
prevent the spread of infectious disease"]]}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P31", 
                    Association[
                    "Label" -> "instance of", "Description" -> 
                    "that class of which this subject is a particular example \
and member"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P31", 
                   Association[
                   "Label" -> "instance of", "Description" -> 
                    "that class of which this subject is a particular example \
and member"]]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P6949\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"announcement date\""}],
                     ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"time of the first public presentation of a subject by \
the creator, of information by the media\""}]}], "\[RightAssociation]"}]}], 
                    "]"}], "\"Wikidata\"", "\"announcement date\"", 
                   "http://www.wikidata.org/entity/P6949"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P6949", 
                   Association[
                   "Label" -> "announcement date", "Description" -> 
                    "time of the first public presentation of a subject by \
the creator, of information by the media"]]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P6949", 
                    Association[
                    "Label" -> "announcement date", "Description" -> 
                    "time of the first public presentation of a subject by \
the creator, of information by the media"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P6949", 
                   Association[
                   "Label" -> "announcement date", "Description" -> 
                    "time of the first public presentation of a subject by \
the creator, of information by the media"]]]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P580\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"start time\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"time an item begins to exist or a statement starts \
being valid\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"start time\"", "http://www.wikidata.org/entity/P580"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P580", 
                   Association[
                   "Label" -> "start time", "Description" -> 
                    "time an item begins to exist or a statement starts being \
valid"]]]}, "Item", False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P580", 
                    Association[
                    "Label" -> "start time", "Description" -> 
                    "time an item begins to exist or a statement starts being \
valid"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P580", 
                   Association[
                   "Label" -> "start time", "Description" -> 
                    "time an item begins to exist or a statement starts being \
valid"]]]}, "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P828\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"has cause\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"underlying cause, thing that ultimately resulted in \
this effect\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"has cause\"", "http://www.wikidata.org/entity/P828"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P828", 
                   Association[
                   "Label" -> "has cause", "Description" -> 
                    "underlying cause, thing that ultimately resulted in this \
effect"]]]}, "Item", False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q89277307"]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q89277307"]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P828", 
                    Association[
                    "Label" -> "has cause", "Description" -> 
                    "underlying cause, thing that ultimately resulted in this \
effect"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P828", 
                   Association[
                   "Label" -> "has cause", "Description" -> 
                    "underlying cause, thing that ultimately resulted in this \
effect"]]]}, "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"P1001\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", "\"applies to jurisdiction\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"the item (an institution, law, public office ...) or \
statement belongs to or has power over or applies to the value (a territorial \
jurisdiction: a country, state, municipality, ...)\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"applies to jurisdiction\"", 
                   "http://www.wikidata.org/entity/P1001"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P1001", 
                   Association[
                   "Label" -> "applies to jurisdiction", "Description" -> 
                    "the item (an institution, law, public office ...) or \
statement belongs to or has power over or applies to the value (a territorial \
jurisdiction: a country, state, municipality, ...)"]]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q27", 
                    Association[
                    "Label" -> "Ireland", "Description" -> 
                    "sovereign state in northwestern Europe covering \
five-sixths of the island of Ireland"]]}, ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q27", 
                    Association[
                    "Label" -> "Ireland", "Description" -> 
                    "sovereign state in northwestern Europe covering \
five-sixths of the island of Ireland"]]}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "P1001", 
                    Association[
                    "Label" -> "applies to jurisdiction", "Description" -> 
                    "the item (an institution, law, public office ...) or \
statement belongs to or has power over or applies to the value (a territorial \
jurisdiction: a country, state, municipality, ...)"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "P1001", 
                   Association[
                   "Label" -> "applies to jurisdiction", "Description" -> 
                    "the item (an institution, law, public office ...) or \
statement belongs to or has power over or applies to the value (a territorial \
jurisdiction: a country, state, municipality, ...)"]]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
      ImageSizeCache->{370., {98.634033203125, 104.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{370., {98.634033203125, 104.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.798546348513185*^9, 3.7985464150845823`*^9}, 
   3.7985464734266863`*^9, 3.798546593078557*^9, 3.798546841066003*^9, {
   3.7985468727030983`*^9, 3.798546892240899*^9}, 3.7985595738198643`*^9, 
   3.798561480030079*^9, 3.798561630913453*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"2fa0bfdd-0346-4839-a8f2-1b5ee15fb0df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WikidataData", "[", 
  RowBox[{
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"Q93623431\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"2020 Ireland COVID-19 social distancing\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"COVID-19 countermeasure in Ireland\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"2020 Ireland COVID-19 social distancing\"", 
     "http://www.wikidata.org/entity/Q93623431"},
    "ExternalIdentifierURL"], ",", " ", "\"\<NonIdentifierProperties\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.798548182831276*^9, 3.798548183583647*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"c9651b25-be6b-43ad-9e0e-be2e49c01c75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P580\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"start time\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"time an item begins to exist or a statement starts being \
valid\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"start time\"", "http://www.wikidata.org/entity/P580"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P828\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"has cause\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"underlying cause, thing that ultimately resulted in this \
effect\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"has cause\"", "http://www.wikidata.org/entity/P828"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P1001\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"applies to jurisdiction\""}], 
             ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"the item (an institution, law, public office ...) or \
statement belongs to or has power over or applies to the value (a territorial \
jurisdiction: a country, state, municipality, ...)\""}]}], 
           "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"applies to jurisdiction\"", "http://www.wikidata.org/entity/P1001"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P31\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"instance of\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"that class of which this subject is a particular example \
and member\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
     "\"instance of\"", "http://www.wikidata.org/entity/P31"},
    "ExternalIdentifierURL"], ",", 
   TemplateBox[{
     RowBox[{"ExternalIdentifier", "[", 
       RowBox[{"\"WikidataID\"", ",", "\"P6949\"", ",", 
         RowBox[{"\[LeftAssociation]", 
           RowBox[{
             RowBox[{"\"Label\"", "\[Rule]", "\"announcement date\""}], ",", 
             
             RowBox[{"\"Description\"", "\[Rule]", 
               "\"time of the first public presentation of a subject by the \
creator, of information by the media\""}]}], "\[RightAssociation]"}]}], "]"}],
      "\"Wikidata\"", "\"announcement date\"", 
     "http://www.wikidata.org/entity/P6949"},
    "ExternalIdentifierURL"]}], "}"}]], "Output",
 CellChangeTimes->{3.798548184357767*^9, 3.798559576026606*^9, 
  3.798561631744857*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"033f5f7b-2d28-4c23-9b52-4edb2b08e719"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "responses", " ", "of", " ", "countries", " ", "for", " ", "which", " ", 
    "this", " ", "data", " ", "is", " ", "available"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"covidPandemicResponses", " ", "=", " ", 
    RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"#", " ", "\[Rule]", " ", 
           RowBox[{"WikidataData", "[", 
            RowBox[{"#", ",", " ", 
             TemplateBox[{
               RowBox[{"ExternalIdentifier", "[", 
                 RowBox[{"\"WikidataID\"", ",", "\"P8045\"", ",", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"organized response related to outbreak\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"specific action taken or system used as a reaction to \
an outbreak\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
               "\"organized response related to outbreak\"", 
               "http://www.wikidata.org/entity/P8045"},
              "ExternalIdentifierURL"]}], "]"}]}], "]"}], "&"}], "@", 
        "covidPandemicCountries"}], " ", "//", " ", "Association"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "}"}]}], "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.798547178422851*^9, 3.7985473039453983`*^9}, {
  3.798547365829199*^9, 3.798547417361822*^9}, {3.798547542331337*^9, 
  3.79854754958601*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"c4908c34-6d39-4e02-b972-bae473fda647"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Sweden", " ", "has", " ", "so", " ", "far", " ", "has", " ", "the", " ", 
     "highest", " ", "number", " ", "of", " ", "distinct", " ", "responses"}],
     ",", " ", 
    RowBox[{"followed", " ", "by", " ", "Jordan", " ", "and", " ", "New", " ", 
     RowBox[{"Zealand", "."}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ReverseSortBy", "[", "Length", "]"}], "@", 
     "covidPandemicResponses"}], " ", "//", " ", 
    RowBox[{
     RowBox[{"Dataset", "[", 
      RowBox[{"#", ",", " ", 
       RowBox[{"MaxItems", "\[Rule]", "5"}]}], "]"}], "&"}]}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Sweden", "'"}], "s", " ", "responses"}], " ", "*)"}], "\n", 
   RowBox[{"%", "[", "1", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.798547310199916*^9, 3.7985473647642183`*^9}, {
   3.798547420011537*^9, 3.798547441932295*^9}, {3.798547744825639*^9, 
   3.798547763399928*^9}, {3.798547888827173*^9, 3.7985479281576643`*^9}, {
   3.7985479713430433`*^9, 3.7985480843274107`*^9}, {3.7985481512942467`*^9, 
   3.798548153597508*^9}, 3.798549777903466*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"f7ebb62e-9dc1-41ec-9b86-31c33dee4919"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> Association[ExternalIdentifier["WikidataID", "Q84081576", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Sweden", "Description" -> 
          "viral outbreak in Sweden"]] -> {
         ExternalIdentifier["WikidataID", "Q93670215", 
          Association[
          "Label" -> "2020 Sweden COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Sweden"]], 
         ExternalIdentifier["WikidataID", "Q93670218", 
          Association[
          "Label" -> "2020 Sweden COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Sweden"]], 
         ExternalIdentifier["WikidataID", "Q87722315", 
          Association[
          "Label" -> 
           "Regulation prohibiting public meetings and public events", 
           "Description" -> "Swedish regulation prohibiting large meetings"]], 
         ExternalIdentifier["WikidataID", "Q88286009", 
          Association[
          "Label" -> 
           "Law regarding temporary closure of school activities in the event \
of extraordinary events in peacetime", "Description" -> 
           "Swedish law regarding closure of schools"]], 
         ExternalIdentifier["WikidataID", "Q88807745", 
          Association[
          "Label" -> "special rules for restaurants and pubs", "Description" -> 
           "measure in Sweden against covid-19 that for example only allows \
seated guests"]], 
         ExternalIdentifier["WikidataID", "Q88810165", 
          Association[
          "Label" -> "prohibition of non-essential visits to Sweden", 
           "Description" -> 
           "temporary measure against the covid-19 pandemia"]], 
         ExternalIdentifier["WikidataID", "Q88812834", 
          Association[
          "Label" -> "travel advice against travelling to any country", 
           "Description" -> 
           "temporary measure by Sweden against the covid-19 pandemia"]], 
         ExternalIdentifier["WikidataID", "Q89211754", 
          Association[
          "Label" -> "limited purchase of pharmaceuticals", "Description" -> 
           "countermeasure by the Swedish government against the covid-19 \
pandemia"]], 
         ExternalIdentifier["WikidataID", "Q89212931", 
          Association[
          "Label" -> 
           "general prohibition to visit special housing for elderly", 
           "Description" -> 
           "countermeasure by the Swedish government against the covid-19 \
pandemia"]], 
         ExternalIdentifier["WikidataID", "Q89285002", 
          Association[
          "Label" -> 
           "classification of the coronavirus as an illness that is dangerous \
to society", "Description" -> "decision by the Swedish Government"]], 
         ExternalIdentifier["WikidataID", "Q89285724", 
          Association[
          "Label" -> "increased testing for Covid 19", "Description" -> 
           "task given to the Public Health Agency of Sweden by the Swedish \
Government"]], 
         ExternalIdentifier["WikidataID", "Q89371649", 
          Association[
          "Label" -> 
           "recommendation to implement remote learning in upper secondary \
schools and above", "Description" -> 
           "countermeasure by the Public Health Agency in Sweden against the \
covid-19 pandemia"]]}, ExternalIdentifier["WikidataID", "Q87589148", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Jordan", "Description" -> 
          "viral pandemic in Jordan"]] -> {
         ExternalIdentifier["WikidataID", "Q93623566", 
          Association[
          "Label" -> "2020 Jordan COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Jordan"]], 
         ExternalIdentifier["WikidataID", "Q93623571", 
          Association[
          "Label" -> 
           "2020 Jordan COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Jordan"]], 
         ExternalIdentifier["WikidataID", "Q93623568", 
          Association[
          "Label" -> "2020 Jordan COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Jordan"]], 
         ExternalIdentifier["WikidataID", "Q93623574", 
          Association[
          "Label" -> "2020 Jordan COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Jordan"]], 
         ExternalIdentifier["WikidataID", "Q93623578", 
          Association[
          "Label" -> 
           "2020 Jordan COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Jordan"]], 
         ExternalIdentifier["WikidataID", "Q93623583", 
          Association[
          "Label" -> "2020 Jordan COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Jordan"]], 
         ExternalIdentifier["WikidataID", "Q93623580", 
          Association[
          "Label" -> "2020 Jordan COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Jordan"]], 
         ExternalIdentifier["WikidataID", "Q93623606", 
          Association[
          "Label" -> 
           "2020 Jordan COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in Jordan"]]}, 
       ExternalIdentifier["WikidataID", "Q87250803", 
         Association[
         "Label" -> "COVID-19 pandemic in New Zealand", "Description" -> 
          "ongoing coronavirus pandemic in New Zealand"]] -> {
         ExternalIdentifier["WikidataID", "Q93662534", 
          Association[
          "Label" -> "2020 New Zealand COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in New Zealand"]], 
         ExternalIdentifier["WikidataID", "Q93662535", 
          Association[
          "Label" -> "2020 New Zealand COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in New Zealand"]], 
         ExternalIdentifier["WikidataID", "Q93662539", 
          Association[
          "Label" -> 
           "2020 New Zealand COVID-19 declaration of public health emergency",
            "Description" -> "COVID-19 countermeasure in New Zealand"]], 
         ExternalIdentifier["WikidataID", "Q93662537", 
          Association[
          "Label" -> "2020 New Zealand COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in New Zealand"]], 
         ExternalIdentifier["WikidataID", "Q93662543", 
          Association[
          "Label" -> 
           "2020 New Zealand COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in New Zealand"]], 
         ExternalIdentifier["WikidataID", "Q93662540", 
          Association[
          "Label" -> "2020 New Zealand COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in New Zealand"]], 
         ExternalIdentifier["WikidataID", "Q93662544", 
          Association[
          "Label" -> 
           "2020 New Zealand COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in New Zealand"]]}, 
       ExternalIdentifier["WikidataID", "Q87652010", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Venezuela", "Description" -> 
          "viral outbreak in Venezuela"]] -> {
         ExternalIdentifier["WikidataID", "Q93671174", 
          Association[
          "Label" -> "2020 Venezuela COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Venezuela"]], 
         ExternalIdentifier["WikidataID", "Q93671173", 
          Association[
          "Label" -> "2020 Venezuela COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Venezuela"]], 
         ExternalIdentifier["WikidataID", "Q93671186", 
          Association[
          "Label" -> 
           "2020 Venezuela COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in Venezuela"]], 
         ExternalIdentifier["WikidataID", "Q93671190", 
          Association[
          "Label" -> "2020 Venezuela COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Venezuela"]], 
         ExternalIdentifier["WikidataID", "Q93671194", 
          Association[
          "Label" -> "2020 Venezuela COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Venezuela"]], 
         ExternalIdentifier["WikidataID", "Q93671193", 
          Association[
          "Label" -> 
           "2020 Venezuela COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Venezuela"]]}, 
       ExternalIdentifier["WikidataID", "Q87589123", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Paraguay", "Description" -> 
          "viral pandemic in Paraguay"]] -> {
         ExternalIdentifier["WikidataID", "Q93668015", 
          Association[
          "Label" -> "2020 Paraguay COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Paraguay"]], 
         ExternalIdentifier["WikidataID", "Q93668012", 
          Association[
          "Label" -> 
           "2020 Paraguay COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Paraguay"]], 
         ExternalIdentifier["WikidataID", "Q93668019", 
          Association[
          "Label" -> "2020 Paraguay COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Paraguay"]], 
         ExternalIdentifier["WikidataID", "Q93668020", 
          Association[
          "Label" -> "2020 Paraguay COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Paraguay"]], 
         ExternalIdentifier["WikidataID", "Q93668027", 
          Association[
          "Label" -> "2020 Paraguay COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Paraguay"]], 
         ExternalIdentifier["WikidataID", "Q93668025", 
          Association[
          "Label" -> "2020 Paraguay COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Paraguay"]]}, 
       ExternalIdentifier["WikidataID", "Q87563855", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Dominican Republic", 
          "Description" -> "viral pandemic in the Dominican Republic"]] -> {
         ExternalIdentifier["WikidataID", "Q93622471", 
          Association[
          "Label" -> 
           "2020 Dominican Republic COVID-19 declaration of public health \
emergency", "Description" -> 
           "COVID-19 countermeasure in Dominican Republic"]], 
         ExternalIdentifier["WikidataID", "Q93622474", 
          Association[
          "Label" -> "2020 Dominican Republic COVID-19 flight ban", 
           "Description" -> "COVID-19 countermeasure in Dominican Republic"]], 
         ExternalIdentifier["WikidataID", "Q93622473", 
          Association[
          "Label" -> "2020 Dominican Republic COVID-19 travel ban", 
           "Description" -> "COVID-19 countermeasure in Dominican Republic"]], 
         ExternalIdentifier["WikidataID", "Q93622478", 
          Association[
          "Label" -> 
           "2020 Dominican Republic COVID-19 closing of non-essential \
businesses", "Description" -> 
           "COVID-19 countermeasure in Dominican Republic"]], 
         ExternalIdentifier["WikidataID", "Q93622477", 
          Association[
          "Label" -> 
           "2020 Dominican Republic COVID-19 closing of educational \
institutions", "Description" -> 
           "COVID-19 countermeasure in Dominican Republic"]], 
         ExternalIdentifier["WikidataID", "Q93622498", 
          Association[
          "Label" -> "2020 Dominican Republic COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Dominican Republic"]]}, 
       ExternalIdentifier["WikidataID", "Q87483673", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Colombia", "Description" -> 
          "viral pandemic in Colombia"]] -> {
         ExternalIdentifier["WikidataID", "Q92639068", 
          Association[
          "Label" -> "2020 Colombia COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Colombia"]], 
         ExternalIdentifier["WikidataID", "Q93622132", 
          Association[
          "Label" -> 
           "2020 Colombia COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Colombia"]], 
         ExternalIdentifier["WikidataID", "Q93622150", 
          Association[
          "Label" -> "2020 Colombia COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Colombia"]], 
         ExternalIdentifier["WikidataID", "Q93622151", 
          Association[
          "Label" -> "2020 Colombia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Colombia"]], 
         ExternalIdentifier["WikidataID", "Q93622154", 
          Association[
          "Label" -> 
           "2020 Colombia COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Colombia"]], 
         ExternalIdentifier["WikidataID", "Q93622156", 
          Association[
          "Label" -> "2020 Colombia COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Colombia"]]}, 
       ExternalIdentifier["WikidataID", "Q87193778", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Serbia", "Description" -> 
          "details of ongoing viral outbreak in Serbia"]] -> {
         ExternalIdentifier["WikidataID", "Q93669647", 
          Association[
          "Label" -> "2020 Serbia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Serbia"]], 
         ExternalIdentifier["WikidataID", "Q93669645", 
          Association[
          "Label" -> 
           "2020 Serbia COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Serbia"]], 
         ExternalIdentifier["WikidataID", "Q93669651", 
          Association[
          "Label" -> "2020 Serbia COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Serbia"]], 
         ExternalIdentifier["WikidataID", "Q93669649", 
          Association[
          "Label" -> 
           "2020 Serbia COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Serbia"]], 
         ExternalIdentifier["WikidataID", "Q93669654", 
          Association[
          "Label" -> "2020 Serbia COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Serbia"]], 
         ExternalIdentifier["WikidataID", "Q93669653", 
          Association[
          "Label" -> "2020 Serbia COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Serbia"]]}, 
       ExternalIdentifier["WikidataID", "Q87119811", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Hungary", "Description" -> 
          "viral outbreak in Hungary"]] -> {
         ExternalIdentifier["WikidataID", "Q93623070", 
          Association[
          "Label" -> "2020 Hungary COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Hungary"]], 
         ExternalIdentifier["WikidataID", "Q93623073", 
          Association[
          "Label" -> 
           "2020 Hungary COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Hungary"]], 
         ExternalIdentifier["WikidataID", "Q93623077", 
          Association[
          "Label" -> "2020 Hungary COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Hungary"]], 
         ExternalIdentifier["WikidataID", "Q93623083", 
          Association[
          "Label" -> 
           "2020 Hungary COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Hungary"]], 
         ExternalIdentifier["WikidataID", "Q93623086", 
          Association[
          "Label" -> 
           "2020 Hungary COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in Hungary"]], 
         ExternalIdentifier["WikidataID", "Q93623084", 
          Association[
          "Label" -> "2020 Hungary COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Hungary"]]}, 
       ExternalIdentifier["WikidataID", "Q87070975", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Israel", "Description" -> 
          "viral outbreak in Israel"]] -> {
         ExternalIdentifier["WikidataID", "Q93623463", 
          Association[
          "Label" -> "2020 Israel COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Israel"]], 
         ExternalIdentifier["WikidataID", "Q93623467", 
          Association[
          "Label" -> "2020 Israel COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Israel"]], 
         ExternalIdentifier["WikidataID", "Q93623470", 
          Association[
          "Label" -> "2020 Israel COVID-19 stay-at-home order", "Description" -> 
           "COVID-19 countermeasure in Israel"]], 
         ExternalIdentifier["WikidataID", "Q93623468", 
          Association[
          "Label" -> 
           "2020 Israel COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Israel"]], 
         ExternalIdentifier["WikidataID", "Q93623473", 
          Association[
          "Label" -> 
           "2020 Israel COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in Israel"]], 
         ExternalIdentifier["WikidataID", "Q93623476", 
          Association[
          "Label" -> "2020 Israel COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Israel"]]}, 
       ExternalIdentifier["WikidataID", "Q87975745", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Fiji", "Description" -> 
          "details of ongoing viral pandemic in Fiji"]] -> {
         ExternalIdentifier["WikidataID", "Q93622542", 
          Association[
          "Label" -> "2020 Fiji COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Fiji"]], 
         ExternalIdentifier["WikidataID", "Q93622543", 
          Association[
          "Label" -> "2020 Fiji COVID-19 closing of educational institutions",
            "Description" -> "COVID-19 countermeasure in Fiji"]], 
         ExternalIdentifier["WikidataID", "Q93622547", 
          Association[
          "Label" -> "2020 Fiji COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Fiji"]], 
         ExternalIdentifier["WikidataID", "Q93622545", 
          Association[
          "Label" -> "2020 Fiji COVID-19 closing of non-essential businesses",
            "Description" -> "COVID-19 countermeasure in Fiji"]], 
         ExternalIdentifier["WikidataID", "Q93622549", 
          Association[
          "Label" -> "2020 Fiji COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Fiji"]]}, 
       ExternalIdentifier["WikidataID", "Q87814953", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Syria", "Description" -> 
          "viral pandemic in Syria"]] -> {
         ExternalIdentifier["WikidataID", "Q93670234", 
          Association[
          "Label" -> 
           "2020 Syria COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Syria"]], 
         ExternalIdentifier["WikidataID", "Q93670232", 
          Association[
          "Label" -> "2020 Syria COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Syria"]], 
         ExternalIdentifier["WikidataID", "Q93670238", 
          Association[
          "Label" -> "2020 Syria COVID-19 travel restrictions", "Description" -> 
           "COVID-19 countermeasure in Syria"]], 
         ExternalIdentifier["WikidataID", "Q93670241", 
          Association[
          "Label" -> "2020 Syria COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Syria"]], 
         ExternalIdentifier["WikidataID", "Q93670294", 
          Association[
          "Label" -> "2020 Syria COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Syria"]]}, 
       ExternalIdentifier["WikidataID", "Q87660365", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Uruguay", "Description" -> 
          "viral pandemic in Uruguay"]] -> {
         ExternalIdentifier["WikidataID", "Q93671040", 
          Association[
          "Label" -> "2020 Uruguay COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Uruguay"]], 
         ExternalIdentifier["WikidataID", "Q93671091", 
          Association[
          "Label" -> "2020 Uruguay COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Uruguay"]], 
         ExternalIdentifier["WikidataID", "Q93671089", 
          Association[
          "Label" -> 
           "2020 Uruguay COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Uruguay"]], 
         ExternalIdentifier["WikidataID", "Q93671093", 
          Association[
          "Label" -> "2020 Uruguay COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Uruguay"]], 
         ExternalIdentifier["WikidataID", "Q93671098", 
          Association[
          "Label" -> "2020 Uruguay COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Uruguay"]]}, 
       ExternalIdentifier["WikidataID", "Q87480220", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Bolivia", "Description" -> 
          "viral pandemic in Bolivia"]] -> {
         ExternalIdentifier["WikidataID", "Q93622035", 
          Association[
          "Label" -> "2020 Bolivia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Bolivia"]], 
         ExternalIdentifier["WikidataID", "Q93622039", 
          Association[
          "Label" -> "2020 Bolivia COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Bolivia"]], 
         ExternalIdentifier["WikidataID", "Q93622037", 
          Association[
          "Label" -> "2020 Bolivia COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Bolivia"]], 
         ExternalIdentifier["WikidataID", "Q93622040", 
          Association[
          "Label" -> "2020 Bolivia COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Bolivia"]], 
         ExternalIdentifier["WikidataID", "Q93622044", 
          Association[
          "Label" -> 
           "2020 Bolivia COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Bolivia"]]}, 
       ExternalIdentifier["WikidataID", "Q87473205", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Turkey", "Description" -> 
          "details of ongoing viral outbreak in Turkey"]] -> {
         ExternalIdentifier["WikidataID", "Q93670434", 
          Association[
          "Label" -> "2020 Turkey COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Turkey"]], 
         ExternalIdentifier["WikidataID", "Q93670432", 
          Association[
          "Label" -> "2020 Turkey COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Turkey"]], 
         ExternalIdentifier["WikidataID", "Q93670438", 
          Association[
          "Label" -> "2020 Turkey COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Turkey"]], 
         ExternalIdentifier["WikidataID", "Q93670437", 
          Association[
          "Label" -> 
           "2020 Turkey COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in Turkey"]], 
         ExternalIdentifier["WikidataID", "Q93670440", 
          Association[
          "Label" -> 
           "2020 Turkey COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Turkey"]]}, 
       ExternalIdentifier["WikidataID", "Q87245450", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Lebanon", "Description" -> 
          "viral outbreak in Lebanon"]] -> {
         ExternalIdentifier["WikidataID", "Q93623922", 
          Association[
          "Label" -> "2020 Lebanon COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Lebanon"]], 
         ExternalIdentifier["WikidataID", "Q93623920", 
          Association[
          "Label" -> 
           "2020 Lebanon COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Lebanon"]], 
         ExternalIdentifier["WikidataID", "Q93623926", 
          Association[
          "Label" -> "2020 Lebanon COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Lebanon"]], 
         ExternalIdentifier["WikidataID", "Q93623927", 
          Association[
          "Label" -> "2020 Lebanon COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Lebanon"]], 
         ExternalIdentifier["WikidataID", "Q93623924", 
          Association[
          "Label" -> "2020 Lebanon COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Lebanon"]]}, 
       ExternalIdentifier["WikidataID", "Q87191204", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Chile", "Description" -> 
          "viral outbreak in Chile"]] -> {
         ExternalIdentifier["WikidataID", "Q93622122", 
          Association[
          "Label" -> "2020 Chile COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Chile"]], 
         ExternalIdentifier["WikidataID", "Q93622126", 
          Association[
          "Label" -> "2020 Chile COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Chile"]], 
         ExternalIdentifier["WikidataID", "Q93622125", 
          Association[
          "Label" -> 
           "2020 Chile COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Chile"]], 
         ExternalIdentifier["WikidataID", "Q93622130", 
          Association[
          "Label" -> 
           "2020 Chile COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Chile"]], 
         ExternalIdentifier["WikidataID", "Q93622131", 
          Association[
          "Label" -> "2020 Chile COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Chile"]]}, 
       ExternalIdentifier["WikidataID", "Q87186117", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Saudi Arabia", "Description" -> 
          "details of ongoing viral pandemic in Saudi Arabia"]] -> {
         ExternalIdentifier["WikidataID", "Q93669579", 
          Association[
          "Label" -> "2020 Saudi Arabia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Saudi Arabia"]], 
         ExternalIdentifier["WikidataID", "Q93669582", 
          Association[
          "Label" -> "2020 Saudi Arabia COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Saudi Arabia"]], 
         ExternalIdentifier["WikidataID", "Q93669583", 
          Association[
          "Label" -> 
           "2020 Saudi Arabia COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Saudi Arabia"]], 
         ExternalIdentifier["WikidataID", "Q93669581", 
          Association[
          "Label" -> "2020 Saudi Arabia COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Saudi Arabia"]], 
         ExternalIdentifier["WikidataID", "Q93669586", 
          Association[
          "Label" -> 
           "2020 Saudi Arabia COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in Saudi Arabia"]]}, 
       ExternalIdentifier["WikidataID", "Q86919406", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Czech Republic", 
          "Description" -> 
          "details of ongoing viral pandemic in the Czech Republic"]] -> {
         ExternalIdentifier["WikidataID", "Q93622398", 
          Association[
          "Label" -> "2020 Czech Republic COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Czech Republic"]], 
         ExternalIdentifier["WikidataID", "Q93622403", 
          Association[
          "Label" -> 
           "2020 Czech Republic COVID-19 declaration of public health \
emergency", "Description" -> "COVID-19 countermeasure in Czech Republic"]], 
         ExternalIdentifier["WikidataID", "Q93622400", 
          Association[
          "Label" -> 
           "2020 Czech Republic COVID-19 closing of educational institutions",
            "Description" -> "COVID-19 countermeasure in Czech Republic"]], 
         ExternalIdentifier["WikidataID", "Q93622404", 
          Association[
          "Label" -> "2020 Czech Republic COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Czech Republic"]], 
         ExternalIdentifier["WikidataID", "Q93622426", 
          Association[
          "Label" -> "2020 Czech Republic COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Czech Republic"]]}, 
       ExternalIdentifier["WikidataID", "Q84098939", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Russia", "Description" -> 
          "details of ongoing viral pandemic in Russia in 2020"]] -> {
         ExternalIdentifier["WikidataID", "Q93668843", 
          Association[
          "Label" -> "2020 Russia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Russia"]], 
         ExternalIdentifier["WikidataID", "Q93668846", 
          Association[
          "Label" -> "2020 Russia COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Russia"]], 
         ExternalIdentifier["WikidataID", "Q93668895", 
          Association[
          "Label" -> "2020 Russia COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Russia"]], 
         ExternalIdentifier["WikidataID", "Q93668898", 
          Association[
          "Label" -> 
           "2020 Russia COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Russia"]], 
         ExternalIdentifier["WikidataID", "Q93668901", 
          Association[
          "Label" -> 
           "2020 Russia COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in Russia"]]}, 
       ExternalIdentifier["WikidataID", "Q84055415", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Finland", "Description" -> 
          "viral outbreak in Finland"]] -> {
         ExternalIdentifier["WikidataID", "Q93622563", 
          Association[
          "Label" -> 
           "2020 Finland COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Finland"]], 
         ExternalIdentifier["WikidataID", "Q93622567", 
          Association[
          "Label" -> "2020 Finland COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Finland"]], 
         ExternalIdentifier["WikidataID", "Q93622565", 
          Association[
          "Label" -> "2020 Finland COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Finland"]], 
         ExternalIdentifier["WikidataID", "Q88806641", 
          Association["Label" -> "2020 isolation of Uusimaa"]], 
         ExternalIdentifier["WikidataID", "Q90400101"]}, 
       ExternalIdentifier["WikidataID", "Q89277147", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Samoa", "Description" -> 
          "viral pandemic in Samoa"]] -> {
         ExternalIdentifier["WikidataID", "Q93668967", 
          Association[
          "Label" -> "2020 Samoa COVID-19 travel restrictions", "Description" -> 
           "COVID-19 countermeasure in Samoa"]], 
         ExternalIdentifier["WikidataID", "Q93668970", 
          Association[
          "Label" -> 
           "2020 Samoa COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Samoa"]], 
         ExternalIdentifier["WikidataID", "Q93668973", 
          Association[
          "Label" -> "2020 Samoa COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Samoa"]], 
         ExternalIdentifier["WikidataID", "Q93669502", 
          Association[
          "Label" -> "2020 Samoa COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Samoa"]]}, 
       ExternalIdentifier["WikidataID", "Q88082693", 
         Association["Label" -> "2020 COVID-19 pandemic in Haiti"]] -> {
         ExternalIdentifier["WikidataID", "Q93623018", 
          Association[
          "Label" -> "2020 Haiti COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Haiti"]], 
         ExternalIdentifier["WikidataID", "Q93623023", 
          Association[
          "Label" -> "2020 Haiti COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Haiti"]], 
         ExternalIdentifier["WikidataID", "Q93623020", 
          Association[
          "Label" -> "2020 Haiti COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Haiti"]], 
         ExternalIdentifier["WikidataID", "Q93623042", 
          Association[
          "Label" -> 
           "2020 Haiti COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Haiti"]]}, 
       ExternalIdentifier["WikidataID", "Q87722485", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Azerbaijan", "Description" -> 
          "viral pandemic in Azerbaijan"]] -> {
         ExternalIdentifier["WikidataID", "Q93621771", 
          Association[
          "Label" -> "2020 Azerbaijan COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Azerbaijan"]], 
         ExternalIdentifier["WikidataID", "Q93621768", 
          Association[
          "Label" -> 
           "2020 Azerbaijan COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Azerbaijan"]], 
         ExternalIdentifier["WikidataID", "Q93621772", 
          Association[
          "Label" -> "2020 Azerbaijan COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Azerbaijan"]], 
         ExternalIdentifier["WikidataID", "Q93621788", 
          Association[
          "Label" -> "2020 Azerbaijan COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Azerbaijan"]]}, 
       ExternalIdentifier["WikidataID", "Q87707727", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Saint Lucia", "Description" -> 
          "viral pandemic in Saint Lucia"]] -> {
         ExternalIdentifier["WikidataID", "Q93668914", 
          Association[
          "Label" -> 
           "2020 Saint Lucia COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in Saint Lucia"]], 
         ExternalIdentifier["WikidataID", "Q93668912", 
          Association[
          "Label" -> "2020 Saint Lucia COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Saint Lucia"]], 
         ExternalIdentifier["WikidataID", "Q93668917", 
          Association[
          "Label" -> 
           "2020 Saint Lucia COVID-19 declaration of public health emergency",
            "Description" -> "COVID-19 countermeasure in Saint Lucia"]], 
         ExternalIdentifier["WikidataID", "Q93668963", 
          Association[
          "Label" -> "2020 Saint Lucia COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Saint Lucia"]]}, 
       ExternalIdentifier["WikidataID", "Q87655119", 
         Association["Label" -> "COVID-19 pandemic in Kosovo"]] -> {
         ExternalIdentifier["WikidataID", "Q93623883", 
          Association[
          "Label" -> "2020 Kosovo COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Kosovo"]], 
         ExternalIdentifier["WikidataID", "Q93623886", 
          Association[
          "Label" -> "2020 Kosovo COVID-19 partial lockdown", "Description" -> 
           "COVID-19 countermeasure in Kosovo"]], 
         ExternalIdentifier["WikidataID", "Q93623888", 
          Association[
          "Label" -> 
           "2020 Kosovo COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Kosovo"]], 
         ExternalIdentifier["WikidataID", "Q93623889", 
          Association[
          "Label" -> "2020 Kosovo COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Kosovo"]]}, 
       ExternalIdentifier["WikidataID", "Q87610822", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Jamaica", "Description" -> 
          "viral pandemic in Jamaica"]] -> {
         ExternalIdentifier["WikidataID", "Q93623523", 
          Association[
          "Label" -> "2020 Jamaica COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Jamaica"]], 
         ExternalIdentifier["WikidataID", "Q93623520", 
          Association[
          "Label" -> "2020 Jamaica COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Jamaica"]], 
         ExternalIdentifier["WikidataID", "Q93623526", 
          Association[
          "Label" -> 
           "2020 Jamaica COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Jamaica"]], 
         ExternalIdentifier["WikidataID", "Q93623529", 
          Association[
          "Label" -> "2020 Jamaica COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Jamaica"]]}, 
       ExternalIdentifier["WikidataID", "Q87587763", 
         Association[
         "Label" -> "COVID-19 pandemic in Peru", "Description" -> 
          "ongoing viral pandemic"]] -> {
         ExternalIdentifier["WikidataID", "Q93668096", 
          Association[
          "Label" -> "2020 Peru COVID-19 closing of educational institutions",
            "Description" -> "COVID-19 countermeasure in Peru"]], 
         ExternalIdentifier["WikidataID", "Q93668103", 
          Association[
          "Label" -> "2020 Peru COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Peru"]], 
         ExternalIdentifier["WikidataID", "Q93668100", 
          Association[
          "Label" -> "2020 Peru COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Peru"]], 
         ExternalIdentifier["WikidataID", "Q93668108", 
          Association[
          "Label" -> "2020 Peru COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Peru"]]}, 
       ExternalIdentifier["WikidataID", "Q87250770", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Bosnia and Herzegovina", 
          "Description" -> 
          "details of ongoing viral outbreak in Bosnia and Herzegovina"]] -> {
         ExternalIdentifier["WikidataID", "Q93622045", 
          Association[
          "Label" -> 
           "2020 Bosnia and Herzegovina COVID-19 closing of educational \
institutions", "Description" -> 
           "COVID-19 countermeasure in Bosnia and Herzegovina"]], 
         ExternalIdentifier["WikidataID", "Q93622058", 
          Association[
          "Label" -> 
           "2020 Bosnia and Herzegovina COVID-19 travel restrictions", 
           "Description" -> 
           "COVID-19 countermeasure in Bosnia and Herzegovina"]], 
         ExternalIdentifier["WikidataID", "Q93622060", 
          Association[
          "Label" -> 
           "2020 Bosnia and Herzegovina COVID-19 declaration of public health \
emergency", "Description" -> 
           "COVID-19 countermeasure in Bosnia and Herzegovina"]], 
         ExternalIdentifier["WikidataID", "Q93622061", 
          Association[
          "Label" -> "2020 Bosnia and Herzegovina COVID-19 flight ban", 
           "Description" -> 
           "COVID-19 countermeasure in Bosnia and Herzegovina"]]}, 
       ExternalIdentifier["WikidataID", "Q87235177", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Ukraine", "Description" -> 
          "details of ongoing viral outbreak in Ukraine"]] -> {
         ExternalIdentifier["WikidataID", "Q93670491", 
          Association[
          "Label" -> "2020 Ukraine COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Ukraine"]], 
         ExternalIdentifier["WikidataID", "Q93671019", 
          Association[
          "Label" -> "2020 Ukraine COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Ukraine"]], 
         ExternalIdentifier["WikidataID", "Q93671021", 
          Association[
          "Label" -> "2020 Ukraine COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Ukraine"]], 
         ExternalIdentifier["WikidataID", "Q93671024", 
          Association[
          "Label" -> 
           "2020 Ukraine COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Ukraine"]]}, 
       ExternalIdentifier["WikidataID", "Q87186365", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Republic of Ireland", 
          "Description" -> 
          "details of ongoing viral outbreak in the Republic of Ireland"]] -> {
         ExternalIdentifier["WikidataID", "Q93623431", 
          Association[
          "Label" -> "2020 Ireland COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Ireland"]], 
         ExternalIdentifier["WikidataID", "Q93623429", 
          Association[
          "Label" -> 
           "2020 Ireland COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Ireland"]], 
         ExternalIdentifier["WikidataID", "Q93623435", 
          Association[
          "Label" -> 
           "2020 Ireland COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in Ireland"]], 
         ExternalIdentifier["WikidataID", "Q93623433", 
          Association[
          "Label" -> "2020 Ireland COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Ireland"]]}, 
       ExternalIdentifier["WikidataID", "Q87070999", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Bahrain", "Description" -> 
          "viral pandemic in Bahrain"]] -> {
         ExternalIdentifier["WikidataID", "Q93621798", 
          Association[
          "Label" -> 
           "2020 Bahrain COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Bahrain"]], 
         ExternalIdentifier["WikidataID", "Q93621799", 
          Association[
          "Label" -> "2020 Bahrain COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Bahrain"]], 
         ExternalIdentifier["WikidataID", "Q93621803", 
          Association[
          "Label" -> "2020 Bahrain COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Bahrain"]], 
         ExternalIdentifier["WikidataID", "Q93621801", 
          Association[
          "Label" -> 
           "2020 Bahrain COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in Bahrain"]]}, 
       ExternalIdentifier["WikidataID", "Q86597685", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Denmark", "Description" -> 
          "viral outbreak in Denmark"]] -> {
         ExternalIdentifier["WikidataID", "Q93622445", 
          Association[
          "Label" -> "2020 Denmark COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Denmark"]], 
         ExternalIdentifier["WikidataID", "Q93622462", 
          Association[
          "Label" -> 
           "2020 Denmark COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Denmark"]], 
         ExternalIdentifier["WikidataID", "Q93622467", 
          Association[
          "Label" -> "2020 Denmark COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Denmark"]], 
         ExternalIdentifier["WikidataID", "Q93622465", 
          Association[
          "Label" -> "2020 Denmark COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Denmark"]]}, 
       ExternalIdentifier["WikidataID", "Q84166704", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Spain", "Description" -> 
          "viral outbreak in Spain"]] -> {
         ExternalIdentifier["WikidataID", "Q93670137", 
          Association[
          "Label" -> "2020 Spain COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Spain"]], 
         ExternalIdentifier["WikidataID", "Q93670143", 
          Association[
          "Label" -> 
           "2020 Spain COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in Spain"]], 
         ExternalIdentifier["WikidataID", "Q93670141", 
          Association[
          "Label" -> 
           "2020 Spain COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Spain"]], 
         ExternalIdentifier["WikidataID", "Q93670145", 
          Association[
          "Label" -> 
           "2020 Spain COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Spain"]]}, 
       ExternalIdentifier["WikidataID", "Q84030045", 
         Association[
         "Label" -> 
          "2019\[Dash]20 coronavirus outbreak in the United Arab Emirates", 
          "Description" -> 
          "details of ongoing viral outbreak in the United Arab Emirates"]] -> {
         ExternalIdentifier["WikidataID", "Q93671027", 
          Association[
          "Label" -> "2020 United Arab Emirates COVID-19 curfew", 
           "Description" -> 
           "COVID-19 countermeasure in United Arab Emirates"]], 
         ExternalIdentifier["WikidataID", "Q93671029", 
          Association[
          "Label" -> "2020 United Arab Emirates COVID-19 flight ban", 
           "Description" -> 
           "COVID-19 countermeasure in United Arab Emirates"]], 
         ExternalIdentifier["WikidataID", "Q93671035", 
          Association[
          "Label" -> "2020 United Arab Emirates COVID-19 stay-at-home order", 
           "Description" -> 
           "COVID-19 countermeasure in United Arab Emirates"]], 
         ExternalIdentifier["WikidataID", "Q93671032", 
          Association[
          "Label" -> "2020 United Arab Emirates COVID-19 social distancing", 
           "Description" -> 
           "COVID-19 countermeasure in United Arab Emirates"]]}, 
       ExternalIdentifier["WikidataID", "Q83873548", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Australia", "Description" -> 
          "viral outbreak in Australia"]] -> {
         ExternalIdentifier["WikidataID", "Q93621759", 
          Association[
          "Label" -> "2020 Australia COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Australia"]], 
         ExternalIdentifier["WikidataID", "Q93621756", 
          Association[
          "Label" -> 
           "2020 Australia COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Australia"]], 
         ExternalIdentifier["WikidataID", "Q93621763", 
          Association[
          "Label" -> "2020 Australia COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Australia"]], 
         ExternalIdentifier["WikidataID", "Q93621761", 
          Association[
          "Label" -> "2020 Australia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Australia"]]}, 
       ExternalIdentifier["WikidataID", "Q83873057", 
         Association[
         "Label" -> "COVID-19 pandemic in Vietnam", "Description" -> 
          "viral outbreak in Vietnam"]] -> {
         ExternalIdentifier["WikidataID", "Q93671210", 
          Association[
          "Label" -> 
           "2020 Vietnam COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Vietnam"]], 
         ExternalIdentifier["WikidataID", "Q93671249", 
          Association[
          "Label" -> "2020 Vietnam COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Vietnam"]], 
         ExternalIdentifier["WikidataID", "Q93671254", 
          Association[
          "Label" -> "2020 Vietnam COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Vietnam"]], 
         ExternalIdentifier["WikidataID", "Q93671253", 
          Association[
          "Label" -> 
           "2020 Vietnam COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Vietnam"]]}, 
       ExternalIdentifier["WikidataID", "Q89277064", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Nauru", "Description" -> 
          "viral pandemic in Nauru"]] -> {
         ExternalIdentifier["WikidataID", "Q93631955", 
          Association[
          "Label" -> 
           "2020 Nauru COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Nauru"]], 
         ExternalIdentifier["WikidataID", "Q93631958", 
          Association[
          "Label" -> "2020 Nauru COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Nauru"]], 
         ExternalIdentifier["WikidataID", "Q93631961", 
          Association[
          "Label" -> "2020 Nauru COVID-19 travel restrictions", "Description" -> 
           "COVID-19 countermeasure in Nauru"]]}, 
       ExternalIdentifier["WikidataID", "Q87755488", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Bahamas", "Description" -> 
          "viral pandemic in the Bahamas"]] -> {
         ExternalIdentifier["WikidataID", "Q93621794", 
          Association[
          "Label" -> 
           "2020 The Bahamas COVID-19 closing of non-essential businesses", 
           "Description" -> "COVID-19 countermeasure in The Bahamas"]], 
         ExternalIdentifier["WikidataID", "Q93621792", 
          Association[
          "Label" -> "2020 The Bahamas COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in The Bahamas"]], 
         ExternalIdentifier["WikidataID", "Q93621797", 
          Association[
          "Label" -> "2020 The Bahamas COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in The Bahamas"]]}, 
       ExternalIdentifier["WikidataID", "Q87745903", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Senegal", "Description" -> 
          "COVID-19 outbreak in Senegal"]] -> {
         ExternalIdentifier["WikidataID", "Q93669590", 
          Association[
          "Label" -> "2020 Senegal COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Senegal"]], 
         ExternalIdentifier["WikidataID", "Q93669594", 
          Association[
          "Label" -> 
           "2020 Senegal COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Senegal"]], 
         ExternalIdentifier["WikidataID", "Q93669592", 
          Association[
          "Label" -> 
           "2020 Senegal COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Senegal"]]}, 
       ExternalIdentifier["WikidataID", "Q87733671", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Qatar", "Description" -> 
          "viral pandemic in Qatar"]] -> {
         ExternalIdentifier["WikidataID", "Q93668682", 
          Association[
          "Label" -> 
           "2020 Qatar COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Qatar"]], 
         ExternalIdentifier["WikidataID", "Q93668686", 
          Association[
          "Label" -> "2020 Qatar COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Qatar"]], 
         ExternalIdentifier["WikidataID", "Q93668689", 
          Association[
          "Label" -> "2020 Qatar COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Qatar"]]}, 
       ExternalIdentifier["WikidataID", "Q87704267", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Ivory Coast", "Description" -> 
          "viral pandemic in Ivory Coast"]] -> {
         ExternalIdentifier["WikidataID", "Q93623511", 
          Association[
          "Label" -> "2020 Ivory Coast COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Ivory Coast"]], 
         ExternalIdentifier["WikidataID", "Q93623514", 
          Association[
          "Label" -> "2020 Ivory Coast COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Ivory Coast"]], 
         ExternalIdentifier["WikidataID", "Q93623517", 
          Association[
          "Label" -> 
           "2020 Ivory Coast COVID-19 declaration of public health emergency",
            "Description" -> "COVID-19 countermeasure in Ivory Coast"]]}, 
       ExternalIdentifier["WikidataID", "Q87694131", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Trinidad and Tobago", 
          "Description" -> "viral pandemic in Trinidad and Tobago"]] -> {
         ExternalIdentifier["WikidataID", "Q93670391", 
          Association[
          "Label" -> "2020 Trinidad and Tobago COVID-19 flight ban", 
           "Description" -> 
           "COVID-19 countermeasure in Trinidad and Tobago"]], 
         ExternalIdentifier["WikidataID", "Q93670388", 
          Association[
          "Label" -> "2020 Trinidad and Tobago COVID-19 travel ban", 
           "Description" -> 
           "COVID-19 countermeasure in Trinidad and Tobago"]], 
         ExternalIdentifier["WikidataID", "Q93670431", 
          Association[
          "Label" -> 
           "2020 Trinidad and Tobago COVID-19 closing of educational \
institutions", "Description" -> 
           "COVID-19 countermeasure in Trinidad and Tobago"]]}, 
       ExternalIdentifier["WikidataID", "Q87587760", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Malta", "Description" -> 
          "details of ongoing viral pandemic in Malta"]] -> {
         ExternalIdentifier["WikidataID", "Q93624002", 
          Association[
          "Label" -> 
           "2020 Malta COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Malta"]], 
         ExternalIdentifier["WikidataID", "Q93624000", 
          Association[
          "Label" -> "2020 Malta COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Malta"]], 
         ExternalIdentifier["WikidataID", "Q93624005", 
          Association[
          "Label" -> "2020 Malta COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Malta"]]}, 
       ExternalIdentifier["WikidataID", "Q87486535", 
         Association["Label" -> "2020 COVID-19 pandemic in Bulgaria"]] -> {
         ExternalIdentifier["WikidataID", "Q93622091", 
          Association[
          "Label" -> "2020 Bulgaria COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Bulgaria"]], 
         ExternalIdentifier["WikidataID", "Q93622089", 
          Association[
          "Label" -> 
           "2020 Bulgaria COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Bulgaria"]], 
         ExternalIdentifier["WikidataID", "Q93622094", 
          Association[
          "Label" -> "2020 Bulgaria COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Bulgaria"]]}, 
       ExternalIdentifier["WikidataID", "Q87454162", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Oman", "Description" -> 
          "viral pandemic in Oman"]] -> {
         ExternalIdentifier["WikidataID", "Q93667850", 
          Association[
          "Label" -> "2020 Oman COVID-19 closing of educational institutions",
            "Description" -> "COVID-19 countermeasure in Oman"]], 
         ExternalIdentifier["WikidataID", "Q93667853", 
          Association[
          "Label" -> "2020 Oman COVID-19 closing of non-essential businesses",
            "Description" -> "COVID-19 countermeasure in Oman"]], 
         ExternalIdentifier["WikidataID", "Q93667856", 
          Association[
          "Label" -> "2020 Oman COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Oman"]]}, 
       ExternalIdentifier["WikidataID", "Q87250897", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in North Macedonia", 
          "Description" -> 
          "details of ongoing viral outbreak in North Macedonia"]] -> {
         ExternalIdentifier["WikidataID", "Q93662587", 
          Association[
          "Label" -> "2020 North Macedonia COVID-19 flight ban", 
           "Description" -> "COVID-19 countermeasure in North Macedonia"]], 
         ExternalIdentifier["WikidataID", "Q93662589", 
          Association[
          "Label" -> 
           "2020 North Macedonia COVID-19 declaration of public health \
emergency", "Description" -> "COVID-19 countermeasure in North Macedonia"]], 
         ExternalIdentifier["WikidataID", "Q93662592", 
          Association[
          "Label" -> "2020 North Macedonia COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in North Macedonia"]]}, 
       ExternalIdentifier["WikidataID", "Q87250838", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Lithuania", "Description" -> 
          "details of ongoing viral outbreak in Lithuania"]] -> {
         ExternalIdentifier["WikidataID", "Q93623933", 
          Association[
          "Label" -> 
           "2020 Lithuania COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Lithuania"]], 
         ExternalIdentifier["WikidataID", "Q93623939", 
          Association[
          "Label" -> 
           "2020 Lithuania COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Lithuania"]], 
         ExternalIdentifier["WikidataID", "Q93623942", 
          Association[
          "Label" -> "2020 Lithuania COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Lithuania"]]}, 
       ExternalIdentifier["WikidataID", "Q87250752", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Romania", "Description" -> 
          "details of ongoing viral pandemic im Romania"]] -> {
         ExternalIdentifier["WikidataID", "Q93668835", 
          Association[
          "Label" -> 
           "2020 Romania COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Romania"]], 
         ExternalIdentifier["WikidataID", "Q93668837", 
          Association[
          "Label" -> 
           "2020 Romania COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Romania"]], 
         ExternalIdentifier["WikidataID", "Q93668840", 
          Association[
          "Label" -> "2020 Romania COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Romania"]]}, 
       ExternalIdentifier["WikidataID", "Q87250713", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Ecuador", "Description" -> 
          "Pandemia viral en Ecuador"]] -> {
         ExternalIdentifier["WikidataID", "Q93622502", 
          Association[
          "Label" -> 
           "2020 Ecuador COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Ecuador"]], 
         ExternalIdentifier["WikidataID", "Q93622507", 
          Association[
          "Label" -> "2020 Ecuador COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Ecuador"]], 
         ExternalIdentifier["WikidataID", "Q93622505", 
          Association[
          "Label" -> "2020 Ecuador COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Ecuador"]]}, 
       ExternalIdentifier["WikidataID", "Q87250695", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Poland", "Description" -> 
          "spread of SARS-CoV-2 infections in Poland in during the 2020 \
pandemic"]] -> {
         ExternalIdentifier["WikidataID", "Q93668594", 
          Association[
          "Label" -> "2020 Poland COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Poland"]], 
         ExternalIdentifier["WikidataID", "Q93668598", 
          Association[
          "Label" -> 
           "2020 Poland COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Poland"]], 
         ExternalIdentifier["WikidataID", "Q93668600", 
          Association[
          "Label" -> "2020 Poland COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Poland"]]}, 
       ExternalIdentifier["WikidataID", "Q87250691", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Kuwait", "Description" -> 
          "details of ongoing viral pandemic in Kuwait"]] -> {
         ExternalIdentifier["WikidataID", "Q93623895", 
          Association[
          "Label" -> "2020 Kuwait COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Kuwait"]], 
         ExternalIdentifier["WikidataID", "Q93623892", 
          Association[
          "Label" -> "2020 Kuwait COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Kuwait"]], 
         ExternalIdentifier["WikidataID", "Q93623893", 
          Association[
          "Label" -> "2020 Kuwait COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Kuwait"]]}, 
       ExternalIdentifier["WikidataID", "Q87199320", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the State of Palestine", 
          "Description" -> 
          "details of ongoing viral pandemic in the State of Palestine"]] -> {
         ExternalIdentifier["WikidataID", "Q93667941", 
          Association[
          "Label" -> "2020 Palestine COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Palestine"]], 
         ExternalIdentifier["WikidataID", "Q93667945", 
          Association[
          "Label" -> 
           "2020 Palestine COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Palestine"]], 
         ExternalIdentifier["WikidataID", "Q93667948", 
          Association[
          "Label" -> 
           "2020 Palestine COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Palestine"]]}, 
       ExternalIdentifier["WikidataID", "Q87068864", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Greece", "Description" -> 
          "details of ongoing viral outbreak in Greece"]] -> {
         ExternalIdentifier["WikidataID", "Q93622970", 
          Association[
          "Label" -> 
           "2020 Greece COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Greece"]], 
         ExternalIdentifier["WikidataID", "Q93622973", 
          Association[
          "Label" -> "2020 Greece COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Greece"]], 
         ExternalIdentifier["WikidataID", "Q93622976", 
          Association[
          "Label" -> "2020 Greece COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Greece"]]}, 
       ExternalIdentifier["WikidataID", "Q87066621", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Latvia", "Description" -> 
          "details of ongoing viral outbreak in Latvia"]] -> {
         ExternalIdentifier["WikidataID", "Q93623914", 
          Association[
          "Label" -> 
           "2020 Latvia COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Latvia"]], 
         ExternalIdentifier["WikidataID", "Q93623918", 
          Association[
          "Label" -> "2020 Latvia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Latvia"]], 
         ExternalIdentifier["WikidataID", "Q93623916", 
          Association[
          "Label" -> 
           "2020 Latvia COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Latvia"]]}, 
       ExternalIdentifier["WikidataID", "Q87058723", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Morocco", "Description" -> 
          "viral pandemic in Morocco"]] -> {
         ExternalIdentifier["WikidataID", "Q93631906", 
          Association[
          "Label" -> "2020 Morocco COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Morocco"]], 
         ExternalIdentifier["WikidataID", "Q93631911", 
          Association[
          "Label" -> 
           "2020 Morocco COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Morocco"]], 
         ExternalIdentifier["WikidataID", "Q93631909", 
          Association[
          "Label" -> 
           "2020 Morocco COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Morocco"]]}, 
       ExternalIdentifier["WikidataID", "Q86717788", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Switzerland", "Description" -> 
          "overview about the coronavirus outbreak in Switzerland in 2020"]] -> {
         ExternalIdentifier["WikidataID", "Q93670223", 
          Association[
          "Label" -> "2020 Switzerland COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Switzerland"]], 
         ExternalIdentifier["WikidataID", "Q93670227", 
          Association[
          "Label" -> "2020 Switzerland COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Switzerland"]], 
         ExternalIdentifier["WikidataID", "Q93670224", 
          Association[
          "Label" -> 
           "2020 Switzerland COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Switzerland"]]}, 
       ExternalIdentifier["WikidataID", "Q86675924", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in North Korea", "Description" -> 
          "details of ongoing viral pandemic in North Korea"]] -> {
         ExternalIdentifier["WikidataID", "Q93662581", 
          Association[
          "Label" -> "2020 North Korea COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in North Korea"]], 
         ExternalIdentifier["WikidataID", "Q93662584", 
          Association[
          "Label" -> 
           "2020 North Korea COVID-19 declaration of public health emergency",
            "Description" -> "COVID-19 countermeasure in North Korea"]], 
         ExternalIdentifier["WikidataID", "Q93662585", 
          Association[
          "Label" -> 
           "2020 North Korea COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in North Korea"]]}, 
       ExternalIdentifier["WikidataID", "Q84104992", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Italy", "Description" -> 
          "viral outbreak in Italy"]] -> {
         ExternalIdentifier["WikidataID", "Q93623479", 
          Association[
          "Label" -> 
           "2020 Italy COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Italy"]], 
         ExternalIdentifier["WikidataID", "Q93623509", 
          Association[
          "Label" -> 
           "2020 Italy COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Italy"]], 
         ExternalIdentifier["WikidataID", "Q87348909", 
          Association[
          "Label" -> "2020 Italy coronavirus lockdown", "Description" -> 
           "quarantine in Italy"]]}, 
       ExternalIdentifier["WikidataID", "Q84055514", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in India", "Description" -> 
          "details of ongoing viral pandemic in India in 2020"]] -> {
         ExternalIdentifier["WikidataID", "Q93623124", 
          Association[
          "Label" -> 
           "2020 India COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in India"]], 
         ExternalIdentifier["WikidataID", "Q88580475", 
          Association["Label" -> "2020 India coronavirus lockdown"]], 
         ExternalIdentifier["WikidataID", "Q88323877", 
          Association[
          "Label" -> "closing of educational institutions", "Description" -> 
           "action to reduce virus transmission"]]}, 
       ExternalIdentifier["WikidataID", "Q83873593", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in France", "Description" -> 
          "viral outbreak in France"]] -> {
         ExternalIdentifier["WikidataID", "Q93622914", 
          Association[
          "Label" -> 
           "2020 France COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in France"]], 
         ExternalIdentifier["WikidataID", "Q93622918", 
          Association[
          "Label" -> "2020 France COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in France"]], 
         ExternalIdentifier["WikidataID", "Q93622916", 
          Association[
          "Label" -> "2020 France COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in France"]]}, 
       ExternalIdentifier["WikidataID", "Q83873573", 
         Association[
         "Label" -> "2019\[Dash]20 coronavirus outbreak in Nepal", 
          "Description" -> "viral outbreak in Nepal"]] -> {
         ExternalIdentifier["WikidataID", "Q93631970", 
          Association[
          "Label" -> "2020 Nepal COVID-19 travel restrictions", "Description" -> 
           "COVID-19 countermeasure in Nepal"]], 
         ExternalIdentifier["WikidataID", "Q93631971", 
          Association[
          "Label" -> 
           "2020 Nepal COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Nepal"]], 
         ExternalIdentifier["WikidataID", "Q93631974", 
          Association[
          "Label" -> "2020 Nepal COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Nepal"]]}, 
       ExternalIdentifier["WikidataID", "Q83873387", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Singapore", "Description" -> 
          "details of ongoing viral outbreak in Singapore"]] -> {
         ExternalIdentifier["WikidataID", "Q93669684", 
          Association[
          "Label" -> "2020 Singapore COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Singapore"]], 
         ExternalIdentifier["WikidataID", "Q93669686", 
          Association[
          "Label" -> 
           "2020 Singapore COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Singapore"]], 
         ExternalIdentifier["WikidataID", "Q93669687", 
          Association[
          "Label" -> "2020 Singapore COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Singapore"]]}, 
       ExternalIdentifier["WikidataID", "Q88556836", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Mali", "Description" -> 
          "viral pandemic in Mali"]] -> {
         ExternalIdentifier["WikidataID", "Q93623990", 
          Association[
          "Label" -> "2020 Mali COVID-19 travel restrictions", "Description" -> 
           "COVID-19 countermeasure in Mali"]], 
         ExternalIdentifier["WikidataID", "Q93623997", 
          Association[
          "Label" -> "2020 Mali COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Mali"]]}, 
       ExternalIdentifier["WikidataID", "Q88164033", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Zimbabwe", "Description" -> 
          "viral pandemic in Zimbabwe"]] -> {
         ExternalIdentifier["WikidataID", "Q93671379", 
          Association[
          "Label" -> "2020 Zimbabwe COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Zimbabwe"]], 
         ExternalIdentifier["WikidataID", "Q93671377", 
          Association[
          "Label" -> "2020 Zimbabwe COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Zimbabwe"]]}, 
       ExternalIdentifier["WikidataID", "Q88082639", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Cape Verde", "Description" -> 
          "viral pandemic"]] -> {
         ExternalIdentifier["WikidataID", "Q93622119", 
          Association[
          "Label" -> "2020 Cape Verde COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Cape Verde"]], 
         ExternalIdentifier["WikidataID", "Q93622121", 
          Association[
          "Label" -> "2020 Cape Verde COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Cape Verde"]]}, 
       ExternalIdentifier["WikidataID", "Q88082534", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Angola", "Description" -> 
          "viral pandemic in Angola"]] -> {
         ExternalIdentifier["WikidataID", "Q93621690", 
          Association[
          "Label" -> "2020 Angola COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Angola"]], 
         ExternalIdentifier["WikidataID", "Q93621693", 
          Association[
          "Label" -> 
           "2020 Angola COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Angola"]]}, 
       ExternalIdentifier["WikidataID", "Q87979033", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Mauritius", "Description" -> 
          "viral pandemic in Mauritius"]] -> {
         ExternalIdentifier["WikidataID", "Q93631188", 
          Association[
          "Label" -> "2020 Mauritius COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Mauritius"]], 
         ExternalIdentifier["WikidataID", "Q93631189", 
          Association[
          "Label" -> "2020 Mauritius COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Mauritius"]]}, 
       ExternalIdentifier["WikidataID", "Q87899016", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Gambia", "Description" -> 
          "viral pandemic in the Gambia"]] -> {
         ExternalIdentifier["WikidataID", "Q93622931", 
          Association[
          "Label" -> "2020 Gambia COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Gambia"]], 
         ExternalIdentifier["WikidataID", "Q93622929", 
          Association[
          "Label" -> "2020 Gambia COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Gambia"]]}, 
       ExternalIdentifier["WikidataID", "Q87770645", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Somalia", "Description" -> 
          "viral pandemic in Somalia"]] -> {
         ExternalIdentifier["WikidataID", "Q93669741", 
          Association[
          "Label" -> "2020 Somalia COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Somalia"]], 
         ExternalIdentifier["WikidataID", "Q93669771", 
          Association[
          "Label" -> "2020 Somalia COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Somalia"]]}, 
       ExternalIdentifier["WikidataID", "Q87729501", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Namibia", "Description" -> 
          "viral pandemic in Namibia"]] -> {
         ExternalIdentifier["WikidataID", "Q93631918", 
          Association[
          "Label" -> "2020 Namibia COVID-19 partial lockdown", "Description" -> 
           "COVID-19 countermeasure in Namibia"]], 
         ExternalIdentifier["WikidataID", "Q93631916", 
          Association[
          "Label" -> "2020 Namibia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Namibia"]]}, 
       ExternalIdentifier["WikidataID", "Q87708832", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Mongolia", "Description" -> 
          "details of ongoing viral pandemic in Mongolia"]] -> {
         ExternalIdentifier["WikidataID", "Q93631285", 
          Association[
          "Label" -> 
           "2020 Mongolia COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Mongolia"]], 
         ExternalIdentifier["WikidataID", "Q93631289", 
          Association[
          "Label" -> "2020 Mongolia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Mongolia"]]}, 
       ExternalIdentifier["WikidataID", "Q87708719", 
         Association["Label" -> "2020 COVID-19 pandemic in Aruba"]] -> {
         ExternalIdentifier["WikidataID", "Q93621740", 
          Association[
          "Label" -> "2020 Aruba COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Aruba"]], 
         ExternalIdentifier["WikidataID", "Q93621741", 
          Association[
          "Label" -> 
           "2020 Aruba COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Aruba"]]}, 
       ExternalIdentifier["WikidataID", "Q87705884", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Kenya", "Description" -> 
          "viral pandemic in Kenya"]] -> {
         ExternalIdentifier["WikidataID", "Q93623661", 
          Association[
          "Label" -> "2020 Kenya COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Kenya"]], 
         ExternalIdentifier["WikidataID", "Q93623664", 
          Association[
          "Label" -> "2020 Kenya COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Kenya"]]}, 
       ExternalIdentifier["WikidataID", "Q87666247", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Ghana", "Description" -> 
          "viral pandemic in Ghana"]] -> {
         ExternalIdentifier["WikidataID", "Q93622967", 
          Association[
          "Label" -> "2020 Ghana COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Ghana"]], 
         ExternalIdentifier["WikidataID", "Q93622965", 
          Association[
          "Label" -> "2020 Ghana COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Ghana"]]}, 
       ExternalIdentifier["WikidataID", "Q87665038", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Ethiopia", "Description" -> 
          "details of ongoing viral pandemic in Ethiopia"]] -> {
         ExternalIdentifier["WikidataID", "Q93622533", 
          Association[
          "Label" -> "2020 Ethiopia COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Ethiopia"]], 
         ExternalIdentifier["WikidataID", "Q93622536", 
          Association[
          "Label" -> "2020 Ethiopia COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Ethiopia"]]}, 
       ExternalIdentifier["WikidataID", "Q87664046", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Suriname", "Description" -> 
          "viral pandemic in Suriname"]] -> {
         ExternalIdentifier["WikidataID", "Q93670150", 
          Association[
          "Label" -> "2020 Suriname COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Suriname"]], 
         ExternalIdentifier["WikidataID", "Q93670154", 
          Association[
          "Label" -> "2020 Suriname COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Suriname"]]}, 
       ExternalIdentifier["WikidataID", "Q87662819", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Togo", "Description" -> 
          "viral pandemic in Togo"]] -> {
         ExternalIdentifier["WikidataID", "Q93670372", 
          Association[
          "Label" -> "2020 Togo COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Togo"]], 
         ExternalIdentifier["WikidataID", "Q93670376", 
          Association[
          "Label" -> "2020 Togo COVID-19 partial lockdown", "Description" -> 
           "COVID-19 countermeasure in Togo"]]}, 
       ExternalIdentifier["WikidataID", "Q87250732", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Croatia", "Description" -> 
          "details pf ongoing viral outbreak in Croatia"]] -> {
         ExternalIdentifier["WikidataID", "Q93622386", 
          Association[
          "Label" -> 
           "2020 Croatia COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Croatia"]], 
         ExternalIdentifier["WikidataID", "Q93622387", 
          Association[
          "Label" -> "2020 Croatia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Croatia"]]}, 
       ExternalIdentifier["WikidataID", "Q87235137", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Argentina", "Description" -> 
          "details of ongoing viral outbreak in Argentina"]] -> {
         ExternalIdentifier["WikidataID", "Q93621722", 
          Association[
          "Label" -> "2020 Argentina COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Argentina"]], 
         ExternalIdentifier["WikidataID", "Q93621721", 
          Association[
          "Label" -> "2020 Argentina COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Argentina"]]}, 
       ExternalIdentifier["WikidataID", "Q87204911", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Estonia", "Description" -> 
          "details of ongoing viral outbreak in Estonia"]] -> {
         ExternalIdentifier["WikidataID", "Q93622515", 
          Association[
          "Label" -> 
           "2020 Estonia COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Estonia"]], 
         ExternalIdentifier["WikidataID", "Q93622532", 
          Association[
          "Label" -> "2020 Estonia COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Estonia"]]}, 
       ExternalIdentifier["WikidataID", "Q87121993", 
         Association["Label" -> "2020 COVID-19 pandemic in Iceland"]] -> {
         ExternalIdentifier["WikidataID", "Q93623091", 
          Association[
          "Label" -> "2020 Iceland COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Iceland"]], 
         ExternalIdentifier["WikidataID", "Q93623088", 
          Association[
          "Label" -> 
           "2020 Iceland COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Iceland"]]}, 
       ExternalIdentifier["WikidataID", "Q87116829", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Egypt", "Description" -> 
          "details of ongoing viral pandemic in Egypt"]] -> {
         ExternalIdentifier["WikidataID", "Q93622510", 
          Association[
          "Label" -> "2020 Egypt COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Egypt"]], 
         ExternalIdentifier["WikidataID", "Q93622509", 
          Association[
          "Label" -> "2020 Egypt COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Egypt"]]}, 
       ExternalIdentifier["WikidataID", "Q86913546", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Indonesia", "Description" -> 
          "details of an ongoing pandemic in Indonesia"]] -> {
         ExternalIdentifier["WikidataID", "Q93623153", 
          Association[
          "Label" -> "2020 Indonesia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Indonesia"]], 
         ExternalIdentifier["WikidataID", "Q93623420", 
          Association[
          "Label" -> 
           "2020 Indonesia COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Indonesia"]]}, 
       ExternalIdentifier["WikidataID", "Q86847911", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Austria", "Description" -> 
          "overview about the coronavirus outbreak in Austria in 2020"]] -> {
         ExternalIdentifier["WikidataID", "Q93621766", 
          Association[
          "Label" -> "2020 Austria COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Austria"]], 
         ExternalIdentifier["WikidataID", "Q93621765", 
          Association[
          "Label" -> "2020 Austria COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Austria"]]}, 
       ExternalIdentifier["WikidataID", "Q86756826", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Netherlands", 
          "Description" -> "viral outbreak in the Netherlands"]] -> {
         ExternalIdentifier["WikidataID", "Q93631976", 
          Association[
          "Label" -> 
           "2020 Netherlands COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Netherlands"]], 
         ExternalIdentifier["WikidataID", "Q93631980", 
          Association[
          "Label" -> "2020 Netherlands COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Netherlands"]]}, 
       ExternalIdentifier["WikidataID", "Q86597695", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Brazil", "Description" -> 
          "details of ongoing viral pandemic in Brazil"]] -> {
         ExternalIdentifier["WikidataID", "Q93622066", 
          Association[
          "Label" -> "2020 Brazil COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Brazil"]], 
         ExternalIdentifier["WikidataID", "Q93622064", 
          Association[
          "Label" -> 
           "2020 Brazil COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Brazil"]]}, 
       ExternalIdentifier["WikidataID", "Q84446340", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Belgium", "Description" -> 
          "viral outbreak in Belgium"]] -> {
         ExternalIdentifier["WikidataID", "Q93621827", 
          Association[
          "Label" -> "2020 Belgium COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Belgium"]], 
         ExternalIdentifier["WikidataID", "Q93621825", 
          Association[
          "Label" -> "2020 Belgium COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Belgium"]]}, 
       ExternalIdentifier["WikidataID", "Q84081307", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Taiwan", "Description" -> 
          "viral outbreak in Taiwan"]] -> {
         ExternalIdentifier["WikidataID", "Q93670297", 
          Association[
          "Label" -> 
           "2020 Taiwan COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Taiwan"]], 
         ExternalIdentifier["WikidataID", "Q93670300", 
          Association[
          "Label" -> "2020 Taiwan COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Taiwan"]]}, 
       ExternalIdentifier["WikidataID", "Q83888864", 
         Association[
         "Label" -> "2019\[Dash]20 coronavirus outbreak in Cambodia", 
          "Description" -> "viral outbreak in Cambodia"]] -> {
         ExternalIdentifier["WikidataID", "Q93622103", 
          Association[
          "Label" -> "2020 Cambodia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Cambodia"]], 
         ExternalIdentifier["WikidataID", "Q93622116", 
          Association[
          "Label" -> 
           "2020 Cambodia COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Cambodia"]]}, 
       ExternalIdentifier["WikidataID", "Q88460663", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Myanmar", "Description" -> 
          "viral pandemic in Myanmar"]] -> {
         ExternalIdentifier["WikidataID", "Q93631914", 
          Association[
          "Label" -> "2020 Myanmar COVID-19 partial lockdown", "Description" -> 
           "COVID-19 countermeasure in Myanmar"]]}, 
       ExternalIdentifier["WikidataID", "Q88371105", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Eritrea", "Description" -> 
          "viral pandemic in Eritrea"]] -> {
         ExternalIdentifier["WikidataID", "Q93622513", 
          Association[
          "Label" -> "2020 Eritrea COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Eritrea"]]}, 
       ExternalIdentifier["WikidataID", "Q88263719", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Uganda", "Description" -> 
          "viral pandemic in Uganda"]] -> {
         ExternalIdentifier["WikidataID", "Q93670488", 
          Association[
          "Label" -> "2020 Uganda COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Uganda"]]}, 
       ExternalIdentifier["WikidataID", "Q88137634", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Papua New Guinea", 
          "Description" -> 
          "details of ongoing viral pandemic in Papua New Guinea"]] -> {
         ExternalIdentifier["WikidataID", "Q93667949", 
          Association[
          "Label" -> "2020 Papua New Guinea COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Papua New Guinea"]]}, 
       ExternalIdentifier["WikidataID", "Q88082809", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Niger", "Description" -> 
          "viral outbreak in Niger"]] -> {
         ExternalIdentifier["WikidataID", "Q93662563", 
          Association[
          "Label" -> "2020 Niger COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Niger"]]}, 
       ExternalIdentifier["WikidataID", "Q87976629", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Zambia", "Description" -> 
          "viral pandemic in Zambia"]] -> {
         ExternalIdentifier["WikidataID", "Q93671375", 
          Association[
          "Label" -> "2020 Zambia COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Zambia"]]}, 
       ExternalIdentifier["WikidataID", "Q87906931", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Faroe Islands"]] -> {
         ExternalIdentifier["WikidataID", "Q93622538", 
          Association[
          "Label" -> "2020 Faroe Islands COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Faroe Islands"]]}, 
       ExternalIdentifier["WikidataID", "Q87902950", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Kyrgyzstan", "Description" -> 
          "viral pandemic in Kyrgyzstan"]] -> {
         ExternalIdentifier["WikidataID", "Q93623912", 
          Association[
          "Label" -> 
           "2020 Kyrgyzstan COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Kyrgyzstan"]]}, 
       ExternalIdentifier["WikidataID", "Q87899022", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Djibouti", "Description" -> 
          "viral pandemic in Djibouti"]] -> {
         ExternalIdentifier["WikidataID", "Q93622469", 
          Association[
          "Label" -> "2020 Djibouti COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Djibouti"]]}, 
       ExternalIdentifier["WikidataID", "Q87887813", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Montenegro", "Description" -> 
          "details of ongoing viral pandemic in Montenegro"]] -> {
         ExternalIdentifier["WikidataID", "Q93631904", 
          Association[
          "Label" -> "2020 Montenegro COVID-19 partial lockdown", 
           "Description" -> "COVID-19 countermeasure in Montenegro"]]}, 
       ExternalIdentifier["WikidataID", "Q87743173", 
         Association["Label" -> "2020 COVID-19 pandemic in Northern Cyprus"]] -> {
         ExternalIdentifier["WikidataID", "Q93667732", 
          Association[
          "Label" -> 
           "2020 Turkish Republic of Northern Cyprus COVID-19 closing of \
educational institutions", "Description" -> 
           "COVID-19 countermeasure in Turkish Republic of Northern \
Cyprus"]]}, ExternalIdentifier["WikidataID", "Q87729500", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Seychelles", "Description" -> 
          "viral pandemic in Seychelles"]] -> {
         ExternalIdentifier["WikidataID", "Q93669655", 
          Association[
          "Label" -> "2020 Seychelles COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Seychelles"]]}, 
       ExternalIdentifier["WikidataID", "Q87718451", 
         Association["Label" -> "2020 COVID-19 pandemic in Nigeria"]] -> {
         ExternalIdentifier["WikidataID", "Q93662565", 
          Association[
          "Label" -> "2020 Nigeria COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Nigeria"]]}, 
       ExternalIdentifier["WikidataID", "Q87715843", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Andorra", "Description" -> 
          "details of ongoing viral pandemic in Teil der COVID-19-Pandemie"]] -> {
         ExternalIdentifier["WikidataID", "Q93621687", 
          Association[
          "Label" -> "2020 Andorra COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Andorra"]]}, 
       ExternalIdentifier["WikidataID", "Q87715166", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Bhutan", "Description" -> 
          "viral pandemic in Bhutan"]] -> {
         ExternalIdentifier["WikidataID", "Q93622033", 
          Association[
          "Label" -> "2020 Bhutan COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Bhutan"]]}, 
       ExternalIdentifier["WikidataID", "Q87714704", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Rwanda", "Description" -> 
          "viral pandemic in Rwanda"]] -> {
         ExternalIdentifier["WikidataID", "Q93668904", 
          Association[
          "Label" -> "2020 Rwanda COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in Rwanda"]]}, 
       ExternalIdentifier["WikidataID", "Q87709760", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Cura\[CCedilla]ao", 
          "Description" -> "viral outbreak in Cura\[CCedilla]ao"]] -> {
         ExternalIdentifier["WikidataID", "Q93622393", 
          Association[
          "Label" -> "2020 Cura\[CCedilla]ao COVID-19 flight ban", 
           "Description" -> "COVID-19 countermeasure in Cura\[CCedilla]ao"]]},
        ExternalIdentifier["WikidataID", "Q87706558", 
         Association[
         "Label" -> 
          "2020 COVID-19 pandemic in the Democratic Republic of the Congo", 
          "Description" -> 
          "viral pandemic in the Democratic Republic of the Congo"]] -> {
         ExternalIdentifier["WikidataID", "Q93622442", 
          Association[
          "Label" -> 
           "2020 Democratic Republic of the Congo COVID-19 social distancing",
            "Description" -> 
           "COVID-19 countermeasure in Democratic Republic of the Congo"]]}, 
       ExternalIdentifier["WikidataID", "Q87662895", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Maldives", "Description" -> 
          "viral pandemic in the Maldives"]] -> {
         ExternalIdentifier["WikidataID", "Q93623986", 
          Association[
          "Label" -> 
           "2020 Maldives COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Maldives"]]}, 
       ExternalIdentifier["WikidataID", "Q87659698", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Guyana", "Description" -> 
          "viral pandemic in Guyana"]] -> {
         ExternalIdentifier["WikidataID", "Q93623014", 
          Association[
          "Label" -> "2020 Guyana COVID-19 flight ban", "Description" -> 
           "COVID-19 countermeasure in Guyana"]]}, 
       ExternalIdentifier["WikidataID", "Q87657486", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Sudan", "Description" -> 
          "viral pandemic in Sudan"]] -> {
         ExternalIdentifier["WikidataID", "Q93670149", 
          Association[
          "Label" -> "2020 Sudan COVID-19 travel restrictions", "Description" -> 
           "COVID-19 countermeasure in Sudan"]]}, 
       ExternalIdentifier["WikidataID", "Q87651995", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Kazakhstan", "Description" -> 
          "viral pandemic in Kazakhstan"]] -> {
         ExternalIdentifier["WikidataID", "Q93623624", 
          Association[
          "Label" -> 
           "2020 Kazakhstan COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Kazakhstan"]]}, 
       ExternalIdentifier["WikidataID", "Q87648634", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Armenia", "Description" -> 
          "details of ongoing viral pandemic in Armenia"]] -> {
         ExternalIdentifier["WikidataID", "Q93621738", 
          Association[
          "Label" -> 
           "2020 Armenia COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Armenia"]]}, 
       ExternalIdentifier["WikidataID", "Q87592982", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Moldova", "Description" -> 
          "details of ongoing viral pandemic in Moldova"]] -> {
         ExternalIdentifier["WikidataID", "Q93631280", 
          Association[
          "Label" -> 
           "2020 Moldova COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Moldova"]]}, 
       ExternalIdentifier["WikidataID", "Q87590993", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Cuba", "Description" -> 
          "viral pandemic in Cuba"]] -> {
         ExternalIdentifier["WikidataID", "Q93622391", 
          Association[
          "Label" -> "2020 Cuba COVID-19 travel ban", "Description" -> 
           "COVID-19 countermeasure in Cuba"]]}, 
       ExternalIdentifier["WikidataID", "Q87580938", 
         Association["Label" -> "2020 COVID-19 pandemic in Cyprus"]] -> {
         ExternalIdentifier["WikidataID", "Q93622395", 
          Association[
          "Label" -> "2020 Republic of Cyprus COVID-19 travel restrictions", 
           "Description" -> 
           "COVID-19 countermeasure in Republic of Cyprus"]]}, 
       ExternalIdentifier["WikidataID", "Q87450756", 
         Association["Label" -> "2020 COVID-19 pandemic in Albania"]] -> {
         ExternalIdentifier["WikidataID", "Q93621645", 
          Association[
          "Label" -> "2020 Albania COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Albania"]]}, 
       ExternalIdentifier["WikidataID", "Q87250913", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Georgia", "Description" -> 
          "details of ongoing viral pandemic in Georgia"]] -> {
         ExternalIdentifier["WikidataID", "Q93622934", 
          Association[
          "Label" -> "2020 Georgia COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Georgia"]]}, 
       ExternalIdentifier["WikidataID", "Q87250877", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Monaco", "Description" -> 
          "details of ongoing viral outbreak in Monaco"]] -> {
         ExternalIdentifier["WikidataID", "Q93631284", 
          Association[
          "Label" -> "2020 Monaco COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Monaco"]]}, 
       ExternalIdentifier["WikidataID", "Q87250860", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Luxembourg", "Description" -> 
          "viral outbreak in Luxembourg"]] -> {
         ExternalIdentifier["WikidataID", "Q93623956", 
          Association[
          "Label" -> "2020 Luxembourg COVID-19 travel restrictions", 
           "Description" -> "COVID-19 countermeasure in Luxembourg"]]}, 
       ExternalIdentifier["WikidataID", "Q87250819", 
         Association["Label" -> "2020 COVID-19 pandemic in Liechtenstein"]] -> {
         ExternalIdentifier["WikidataID", "Q93623931", 
          Association[
          "Label" -> "2020 Liechtenstein COVID-19 social distancing", 
           "Description" -> "COVID-19 countermeasure in Liechtenstein"]]}, 
       ExternalIdentifier["WikidataID", "Q87243915", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in South Africa", "Description" -> 
          "details of ongoing viral outbreak in South Africa"]] -> {
         ExternalIdentifier["WikidataID", "Q93669774", 
          Association[
          "Label" -> "2020 South Africa COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in South Africa"]]}, 
       ExternalIdentifier["WikidataID", "Q87222526", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Vatican City", "Description" -> 
          "details of ongoing viral outbreak in Vatican City"]] -> {
         ExternalIdentifier["WikidataID", "Q93671166", 
          Association[
          "Label" -> "2020 Vatican City COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in Vatican City"]]}, 
       ExternalIdentifier["WikidataID", "Q87202921", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Algeria", "Description" -> 
          "viral outbreak in Algeria"]] -> {
         ExternalIdentifier["WikidataID", "Q93621682", 
          Association[
          "Label" -> "2020 Algeria COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Algeria"]]}, 
       ExternalIdentifier["WikidataID", "Q87123561", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in San Marino", "Description" -> 
          "viral outbreak in San Marino"]] -> {
         ExternalIdentifier["WikidataID", "Q93669505", 
          Association[
          "Label" -> "2020 San Marino COVID-19 lockdown", "Description" -> 
           "COVID-19 countermeasure in San Marino"]]}, 
       ExternalIdentifier["WikidataID", "Q86948603", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Portugal", "Description" -> 
          "details of ongoing viral pandemic in Portugal"]] -> {
         ExternalIdentifier["WikidataID", "Q93668611", 
          Association[
          "Label" -> 
           "2020 Portugal COVID-19 declaration of public health emergency", 
           "Description" -> "COVID-19 countermeasure in Portugal"]]}, 
       ExternalIdentifier["WikidataID", "Q86886544", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Norway", "Description" -> 
          "details regarding the 2019\[Dash]20 coronavirus outbreak in \
Norway"]] -> {
         ExternalIdentifier["WikidataID", "Q93667745", 
          Association[
          "Label" -> "2020 Norway COVID-19 social distancing", "Description" -> 
           "COVID-19 countermeasure in Norway"]]}, 
       ExternalIdentifier["WikidataID", "Q86733728", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Iraq", "Description" -> 
          "details of ongoing viral outbreak in Iraq"]] -> {
         ExternalIdentifier["WikidataID", "Q93623427", 
          Association[
          "Label" -> "2020 Iraq COVID-19 closing of educational institutions",
            "Description" -> "COVID-19 countermeasure in Iraq"]]}, 
       ExternalIdentifier["WikidataID", "Q84167106", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the United Kingdom", 
          "Description" -> "viral outbreak in the United Kingdom"]] -> {
         ExternalIdentifier["WikidataID", "Q93671037", 
          Association[
          "Label" -> "2020 United Kingdom COVID-19 curfew", "Description" -> 
           "COVID-19 countermeasure in United Kingdom"]]}, 
       ExternalIdentifier["WikidataID", "Q84055544", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Philippines", 
          "Description" -> "pandemic in the Philippines"]] -> {
         ExternalIdentifier["WikidataID", "Q93668109", 
          Association[
          "Label" -> 
           "2020 Philippines COVID-19 declaration of public health emergency",
            "Description" -> "COVID-19 countermeasure in Philippines"]]}, 
       ExternalIdentifier["WikidataID", "Q83873577", 
         Association[
         "Label" -> "COVID-19 pandemic in the United States", "Description" -> 
          "ongoing coronavirus pandemic in the United States"]] -> {
         ExternalIdentifier["WikidataID", "Q87945071", 
          Association[
          "Label" -> 
           "U.S. state and local government response to the 2020 coronavirus \
pandemic"]]}, ExternalIdentifier["WikidataID", "Q83872291", 
         Association[
         "Label" -> "COVID-19 pandemic in Japan", "Description" -> 
          "viral outbreak in Japan"]] -> {
         ExternalIdentifier["WikidataID", "Q93623531", 
          Association[
          "Label" -> 
           "2020 Japan COVID-19 closing of educational institutions", 
           "Description" -> "COVID-19 countermeasure in Japan"]]}], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 132], 
     "Meta" -> Association["ID" -> 43280586483825, MaxItems -> 5], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 5, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 132], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 132, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q84081576\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"2020 COVID-19 pandemic in Sweden\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"viral outbreak in Sweden\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"2020 COVID-19 pandemic in Sweden\"", 
                   "http://www.wikidata.org/entity/Q84081576"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q84081576", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Sweden", 
                    "Description" -> "viral outbreak in Sweden"]]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 12], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 12], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q84081576", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in Sweden", 
                    "Description" -> "viral outbreak in Sweden"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q84081576", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Sweden", 
                    "Description" -> "viral outbreak in Sweden"]]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q87589148\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"2020 COVID-19 pandemic in Jordan\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"viral pandemic in Jordan\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"2020 COVID-19 pandemic in Jordan\"", 
                   "http://www.wikidata.org/entity/Q87589148"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q87589148", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Jordan", 
                    "Description" -> "viral pandemic in Jordan"]]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 8], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 8], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q87589148", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in Jordan", 
                    "Description" -> "viral pandemic in Jordan"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q87589148", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Jordan", 
                    "Description" -> "viral pandemic in Jordan"]]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q87250803\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"COVID-19 pandemic in New Zealand\""}], ",", 
                    RowBox[{"\"Description\"", "\[Rule]", 
                    "\"ongoing coronavirus pandemic in New Zealand\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"COVID-19 pandemic in New Zealand\"", 
                   "http://www.wikidata.org/entity/Q87250803"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q87250803", 
                   Association[
                   "Label" -> "COVID-19 pandemic in New Zealand", 
                    "Description" -> 
                    "ongoing coronavirus pandemic in New Zealand"]]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 7], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 7], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q87250803", 
                    Association[
                    "Label" -> "COVID-19 pandemic in New Zealand", 
                    "Description" -> 
                    "ongoing coronavirus pandemic in New Zealand"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q87250803", 
                   Association[
                   "Label" -> "COVID-19 pandemic in New Zealand", 
                    "Description" -> 
                    "ongoing coronavirus pandemic in New Zealand"]]]}, "Item",
                 False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q87652010\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"2020 COVID-19 pandemic in Venezuela\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"viral outbreak in Venezuela\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"2020 COVID-19 pandemic in Venezuela\"", 
                   "http://www.wikidata.org/entity/Q87652010"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q87652010", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Venezuela", 
                    "Description" -> "viral outbreak in Venezuela"]]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 6], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 6], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q87652010", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in Venezuela", 
                    "Description" -> "viral outbreak in Venezuela"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q87652010", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Venezuela", 
                    "Description" -> "viral outbreak in Venezuela"]]]}, 
                "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q87589123\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"2020 COVID-19 pandemic in Paraguay\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"viral pandemic in Paraguay\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"2020 COVID-19 pandemic in Paraguay\"", 
                   "http://www.wikidata.org/entity/Q87589123"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q87589123", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Paraguay", 
                    "Description" -> "viral pandemic in Paraguay"]]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 6], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 6], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q87589123", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in Paraguay", 
                    "Description" -> "viral pandemic in Paraguay"]]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q87589123", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Paraguay", 
                    "Description" -> "viral pandemic in Paraguay"]]]}, "Item",
                 False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 5 
                    If[True, 132, 1], {1, 132 - -5 + 1}], Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 5 
                    If[False, 132, 1], {1, 132 - -5 + 1}], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[
                    132, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[
                    132, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[False, 132, 1], {1, 132 - 5 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[True, 132, 1], {1, 132 - 5 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
      ImageSizeCache->{383., {105.634033203125, 111.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{383., {105.634033203125, 111.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.798547284610907*^9, 3.7985473118447723`*^9}, {
   3.798547345877863*^9, 3.798547355780335*^9}, {3.798547422917626*^9, 
   3.79854744239688*^9}, {3.798547753625145*^9, 3.798547764383806*^9}, {
   3.798547892052534*^9, 3.798547928585458*^9}, {3.7985479856282883`*^9, 
   3.798548084894766*^9}, 3.7985481540955257`*^9, 3.7985498139673433`*^9, 
   3.798559586457889*^9, 3.7985614814742804`*^9, 3.798561633299738*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"de1f7f18-5e71-43d0-87ec-f390390e510d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       ExternalIdentifier["WikidataID", "Q93670215", 
        Association[
        "Label" -> "2020 Sweden COVID-19 social distancing", "Description" -> 
         "COVID-19 countermeasure in Sweden"]], 
       ExternalIdentifier["WikidataID", "Q93670218", 
        Association[
        "Label" -> "2020 Sweden COVID-19 travel restrictions", "Description" -> 
         "COVID-19 countermeasure in Sweden"]], 
       ExternalIdentifier["WikidataID", "Q87722315", 
        Association[
        "Label" -> "Regulation prohibiting public meetings and public events",
          "Description" -> "Swedish regulation prohibiting large meetings"]], 
       ExternalIdentifier["WikidataID", "Q88286009", 
        Association[
        "Label" -> 
         "Law regarding temporary closure of school activities in the event \
of extraordinary events in peacetime", "Description" -> 
         "Swedish law regarding closure of schools"]], 
       ExternalIdentifier["WikidataID", "Q88807745", 
        Association[
        "Label" -> "special rules for restaurants and pubs", "Description" -> 
         "measure in Sweden against covid-19 that for example only allows \
seated guests"]], 
       ExternalIdentifier["WikidataID", "Q88810165", 
        Association[
        "Label" -> "prohibition of non-essential visits to Sweden", 
         "Description" -> "temporary measure against the covid-19 pandemia"]], 
       ExternalIdentifier["WikidataID", "Q88812834", 
        Association[
        "Label" -> "travel advice against travelling to any country", 
         "Description" -> 
         "temporary measure by Sweden against the covid-19 pandemia"]], 
       ExternalIdentifier["WikidataID", "Q89211754", 
        Association[
        "Label" -> "limited purchase of pharmaceuticals", "Description" -> 
         "countermeasure by the Swedish government against the covid-19 \
pandemia"]], 
       ExternalIdentifier["WikidataID", "Q89212931", 
        Association[
        "Label" -> "general prohibition to visit special housing for elderly",
          "Description" -> 
         "countermeasure by the Swedish government against the covid-19 \
pandemia"]], 
       ExternalIdentifier["WikidataID", "Q89285002", 
        Association[
        "Label" -> 
         "classification of the coronavirus as an illness that is dangerous \
to society", "Description" -> "decision by the Swedish Government"]], 
       ExternalIdentifier["WikidataID", "Q89285724", 
        Association[
        "Label" -> "increased testing for Covid 19", "Description" -> 
         "task given to the Public Health Agency of Sweden by the Swedish \
Government"]], 
       ExternalIdentifier["WikidataID", "Q89371649", 
        Association[
        "Label" -> 
         "recommendation to implement remote learning in upper secondary \
schools and above", "Description" -> 
         "countermeasure by the Public Health Agency in Sweden against the \
covid-19 pandemia"]]}, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 12, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Vector[TypeSystem`AnyType, 12], "Meta" -> 
     Association["ID" -> 43284881451121], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 12, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Vector[TypeSystem`AnyType, 12], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 12, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q93670215\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"2020 Sweden COVID-19 social distancing\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"COVID-19 countermeasure in Sweden\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"2020 Sweden COVID-19 social distancing\"", 
                   "http://www.wikidata.org/entity/Q93670215"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q93670218\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"2020 Sweden COVID-19 travel restrictions\""}], ",", 
                    RowBox[{"\"Description\"", "\[Rule]", 
                    "\"COVID-19 countermeasure in Sweden\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"2020 Sweden COVID-19 travel restrictions\"", 
                   "http://www.wikidata.org/entity/Q93670218"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q87722315\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"Regulation prohibiting public meetings and public \
events\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"Swedish regulation prohibiting large meetings\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"Regulation prohibiting public meetings and public \
events\"", "http://www.wikidata.org/entity/Q87722315"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q88286009\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"Law regarding temporary closure of school activities \
in the event of extraordinary events in peacetime\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"Swedish law regarding closure of schools\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"Law regarding temporary closure of school activities in \
the event of extraordinary events in peacetime\"", 
                   "http://www.wikidata.org/entity/Q88286009"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q88807745\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"special rules for restaurants and pubs\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"measure in Sweden against covid-19 that for example \
only allows seated guests\""}]}], "\[RightAssociation]"}]}], "]"}], 
                   "\"Wikidata\"", 
                   "\"special rules for restaurants and pubs\"", 
                   "http://www.wikidata.org/entity/Q88807745"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q88810165\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"prohibition of non-essential visits to Sweden\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"temporary measure against the covid-19 pandemia\""}]}],
                     "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"prohibition of non-essential visits to Sweden\"", 
                   "http://www.wikidata.org/entity/Q88810165"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q88812834\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"travel advice against travelling to any country\""}], 
                    ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"temporary measure by Sweden against the covid-19 \
pandemia\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"travel advice against travelling to any country\"", 
                   "http://www.wikidata.org/entity/Q88812834"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q89211754\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"limited purchase of pharmaceuticals\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"countermeasure by the Swedish government against the \
covid-19 pandemia\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"limited purchase of pharmaceuticals\"", 
                   "http://www.wikidata.org/entity/Q89211754"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q89212931\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"general prohibition to visit special housing for \
elderly\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"countermeasure by the Swedish government against the \
covid-19 pandemia\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"general prohibition to visit special housing for \
elderly\"", "http://www.wikidata.org/entity/Q89212931"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q89285002\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    
                    "\"classification of the coronavirus as an illness that \
is dangerous to society\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"decision by the Swedish Government\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"classification of the coronavirus as an illness that is \
dangerous to society\"", "http://www.wikidata.org/entity/Q89285002"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q89285724\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"increased testing for Covid 19\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"task given to the Public Health Agency of Sweden by \
the Swedish Government\""}]}], "\[RightAssociation]"}]}], "]"}], 
                   "\"Wikidata\"", "\"increased testing for Covid 19\"", 
                   "http://www.wikidata.org/entity/Q89285724"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q89371649\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"recommendation to implement remote learning in upper \
secondary schools and above\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"countermeasure by the Public Health Agency in Sweden \
against the covid-19 pandemia\""}]}], "\[RightAssociation]"}]}], "]"}], 
                   "\"Wikidata\"", 
                   "\"recommendation to implement remote learning in upper \
secondary schools and above\"", "http://www.wikidata.org/entity/Q89371649"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
      ImageSizeCache->{621., {207.634033203125, 213.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{621., {207.634033203125, 213.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.798547284610907*^9, 3.7985473118447723`*^9}, {
   3.798547345877863*^9, 3.798547355780335*^9}, {3.798547422917626*^9, 
   3.79854744239688*^9}, {3.798547753625145*^9, 3.798547764383806*^9}, {
   3.798547892052534*^9, 3.798547928585458*^9}, {3.7985479856282883`*^9, 
   3.798548084894766*^9}, 3.7985481540955257`*^9, 3.7985498139673433`*^9, 
   3.798559586457889*^9, 3.7985614814742804`*^9, 3.798561633629332*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"b60efd30-a6c0-4bd1-95bd-97c40d86b482"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "response", " ", "type", " ", "and", " ", "start", " ", "date", " ", 
    "data", " ", "for", " ", "all", " ", "countries"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"covidPandemicResponsesData", " ", "=", " ", 
     RowBox[{"MapAt", "[", 
      RowBox[{"Flatten", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"WikidataData", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"ExternalIdentifier", "[", 
                 RowBox[{"\"WikidataID\"", ",", "\"P31\"", ",", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"instance of\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"that class of which this subject is a particular \
example and member\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
               "\"instance of\"", "http://www.wikidata.org/entity/P31"},
              "ExternalIdentifierURL"], ",", " ", 
             TemplateBox[{
               RowBox[{"ExternalIdentifier", "[", 
                 RowBox[{"\"WikidataID\"", ",", "\"P580\"", ",", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Label\"", "\[Rule]", "\"start time\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"time an item begins to exist or a statement starts \
being valid\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
               "\"start time\"", "http://www.wikidata.org/entity/P580"},
              "ExternalIdentifierURL"]}], "}"}]}], "]"}], "&"}], "/@", 
        "covidPandemicResponses"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{";;", ",", " ", ";;"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"view", " ", "data"}], " ", "*)"}], "\n", 
   RowBox[{"covidPandemicResponsesData", " ", "//", " ", 
    RowBox[{
     RowBox[{"Dataset", "[", 
      RowBox[{"#", ",", " ", 
       RowBox[{"MaxItems", "\[Rule]", "5"}]}], "]"}], "&"}]}]}]}]], "Code",
 CellChangeTimes->{{3.79854844678298*^9, 3.798548524360957*^9}, {
   3.798548989861704*^9, 3.798549095217119*^9}, {3.798549144930046*^9, 
   3.7985491465971107`*^9}, {3.7985491886586*^9, 3.798549189131255*^9}, {
   3.798549238590137*^9, 3.798549310421289*^9}, {3.798549523174906*^9, 
   3.798549528643977*^9}, 3.798549758196412*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"fae9b2f3-b506-4326-8c47-21b82aef6300"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> Association[ExternalIdentifier["WikidataID", "Q83872291", 
         Association[
         "Label" -> "COVID-19 pandemic in Japan", "Description" -> 
          "viral outbreak in Japan"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q83873057", 
         Association[
         "Label" -> "COVID-19 pandemic in Vietnam", "Description" -> 
          "viral outbreak in Vietnam"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 1}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 1}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 2, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 2, 14}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q83873387", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Singapore", "Description" -> 
          "details of ongoing viral outbreak in Singapore"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 1, 23}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q83873548", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Australia", "Description" -> 
          "viral outbreak in Australia"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q83873573", 
         Association[
         "Label" -> "2019\[Dash]20 coronavirus outbreak in Nepal", 
          "Description" -> "viral outbreak in Nepal"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 2}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q83873577", 
         Association[
         "Label" -> "COVID-19 pandemic in the United States", "Description" -> 
          "ongoing coronavirus pandemic in the United States"]] -> {{}}, 
       ExternalIdentifier["WikidataID", "Q83873593", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in France", "Description" -> 
          "viral outbreak in France"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q84167106", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the United Kingdom", 
          "Description" -> "viral outbreak in the United Kingdom"]] -> {{
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q84446340", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Belgium", "Description" -> 
          "viral outbreak in Belgium"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q86597685", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Denmark", "Description" -> 
          "viral outbreak in Denmark"]] -> {{
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q86597695", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Brazil", "Description" -> 
          "details of ongoing viral pandemic in Brazil"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 2, 3}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q86675924", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in North Korea", "Description" -> 
          "details of ongoing viral pandemic in North Korea"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 1, 23}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 1, 30}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 2, 20}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q86717788", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Switzerland", "Description" -> 
          "overview about the coronavirus outbreak in Switzerland in 2020"]] -> \
{{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 2, 28}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q86733728", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Iraq", "Description" -> 
          "details of ongoing viral outbreak in Iraq"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q86756826", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Netherlands", 
          "Description" -> "viral outbreak in the Netherlands"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q86847911", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Austria", "Description" -> 
          "overview about the coronavirus outbreak in Austria in 2020"]] -> {{
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q86886544", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Norway", "Description" -> 
          "details regarding the 2019\[Dash]20 coronavirus outbreak in \
Norway"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q83888864", 
         Association[
         "Label" -> "2019\[Dash]20 coronavirus outbreak in Cambodia", 
          "Description" -> "viral outbreak in Cambodia"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q84030045", 
         Association[
         "Label" -> 
          "2019\[Dash]20 coronavirus outbreak in the United Arab Emirates", 
          "Description" -> 
          "details of ongoing viral outbreak in the United Arab Emirates"]] -> \
{{
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 26}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88307738", 
           Association[
           "Label" -> "stay-at-home order", "Description" -> 
            "type of quarantine"]], 
          DateObject[{2020, 3, 23}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 23}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q84055415", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Finland", "Description" -> 
          "viral outbreak in Finland"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 28}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q1864008", 
           Association[
           "Label" -> "legal act", "Description" -> 
            "juridical fact in which the subject who made it happen acted \
under free will"]], 
          ExternalIdentifier["WikidataID", "Q5370734", 
           Association[
           "Label" -> "emergency procedure", "Description" -> 
            "plan of action to deal with an emergency"]], 
          DateObject[{2020, 4, 4}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q84055514", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in India", "Description" -> 
          "details of ongoing viral pandemic in India in 2020"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q182899", 
           Association[
           "Label" -> "quarantine", "Description" -> 
            "epidemiological intervention of restriction on the movement of \
people and goods, which is intended to prevent the spread of infectious \
disease or pests"]], 
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 22}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q5370734", 
           Association[
           "Label" -> "emergency procedure", "Description" -> 
            "plan of action to deal with an emergency"]]}}, 
       ExternalIdentifier["WikidataID", "Q84055544", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Philippines", 
          "Description" -> "pandemic in the Philippines"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 7}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q84081307", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Taiwan", "Description" -> 
          "viral outbreak in Taiwan"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 2, 2}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q84081576", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Sweden", "Description" -> 
          "viral outbreak in Sweden"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 11}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q428148", 
           Association[
           "Label" -> "regulation", "Description" -> 
            "general term for rules or controls, including delegated \
legislation and self-regulation"]], 
          ExternalIdentifier["WikidataID", "Q2795484", 
           Association[
           "Label" -> "implementing regulation", "Description" -> 
            "regulation on the details of the implementation of a law"]]}, {
          ExternalIdentifier["WikidataID", "Q820655", 
           Association[
           "Label" -> "legislative act", "Description" -> 
            "formal written document that creates law, including acts, \
executive orders, and by-laws"]], 
          DateObject[{2020, 3, 21}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88324058", 
           Association[
           "Label" -> "avoiding crowding", "Description" -> 
            "action to reduce virus transmission"]]}, {
          ExternalIdentifier["WikidataID", "Q88707306", 
           Association[
           "Label" -> "border closure", "Description" -> 
            "action to reduce virus transmission in the community"]], 
          ExternalIdentifier["WikidataID", "Q89211965", 
           Association[
           "Label" -> "decision by the Swedish Government", "Description" -> 
            "formal decisions in government meetings"]]}, {
          ExternalIdentifier["WikidataID", "Q88705465", 
           Association[
           "Label" -> "travel advice as non-pharmaceutical countermeasure", 
            "Description" -> 
            "action to reduce virus transmission in the community"]]}, {
          ExternalIdentifier["WikidataID", "Q207184", 
           Association[
           "Label" -> "press release", "Description" -> 
            "instrument of public relations"]], 
          ExternalIdentifier["WikidataID", "Q1032176", 
           Association[
           "Label" -> "countermeasure", "Description" -> 
            "specific action taken or system used to offset another action"]], 
          ExternalIdentifier["WikidataID", "Q89211965", 
           Association[
           "Label" -> "decision by the Swedish Government", "Description" -> 
            "formal decisions in government meetings"]], 
          DateObject[{2020, 4, 1}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          ExternalIdentifier["WikidataID", "Q89211965", 
           Association[
           "Label" -> "decision by the Swedish Government", "Description" -> 
            "formal decisions in government meetings"]], 
          DateObject[{2020, 4, 1}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89211965", 
           Association[
           "Label" -> "decision by the Swedish Government", "Description" -> 
            "formal decisions in government meetings"]]}, {
          ExternalIdentifier["WikidataID", "Q89211965", 
           Association[
           "Label" -> "decision by the Swedish Government", "Description" -> 
            "formal decisions in government meetings"]], 
          DateObject[{2020, 3, 31}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]]}}, 
       ExternalIdentifier["WikidataID", "Q84098939", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Russia", "Description" -> 
          "details of ongoing viral pandemic in Russia in 2020"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 1, 23}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 30}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q84104992", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Italy", "Description" -> 
          "viral outbreak in Italy"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 1, 31}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 4}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q182899", 
           Association[
           "Label" -> "quarantine", "Description" -> 
            "epidemiological intervention of restriction on the movement of \
people and goods, which is intended to prevent the spread of infectious \
disease or pests"]], 
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 8}, "Day", "Gregorian", 0.], 
          DateObject[{2020, 3, 9}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q84166704", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Spain", "Description" -> 
          "viral outbreak in Spain"]] -> {{
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 11}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87704267", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Ivory Coast", "Description" -> 
          "viral pandemic in Ivory Coast"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 23}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 23}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87705884", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Kenya", "Description" -> 
          "viral pandemic in Kenya"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 22}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 27}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87706558", 
         Association[
         "Label" -> 
          "2020 COVID-19 pandemic in the Democratic Republic of the Congo", 
          "Description" -> 
          "viral pandemic in the Democratic Republic of the Congo"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 22}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87707727", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Saint Lucia", "Description" -> 
          "viral pandemic in Saint Lucia"]] -> {{
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 23}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 23}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87708832", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Mongolia", "Description" -> 
          "details of ongoing viral pandemic in Mongolia"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 1, 27}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 1, 27}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87709760", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Cura\[CCedilla]ao", 
          "Description" -> "viral outbreak in Cura\[CCedilla]ao"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87714704", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Rwanda", "Description" -> 
          "viral pandemic in Rwanda"]] -> {{
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 22}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87715166", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Bhutan", "Description" -> 
          "viral pandemic in Bhutan"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 22}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87715843", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Andorra", "Description" -> 
          "details of ongoing viral pandemic in Teil der COVID-19-Pandemie"]] -> \
{{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87722485", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Azerbaijan", "Description" -> 
          "viral pandemic in Azerbaijan"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 4}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 2}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87729500", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Seychelles", "Description" -> 
          "viral pandemic in Seychelles"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 9}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87729501", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Namibia", "Description" -> 
          "viral pandemic in Namibia"]] -> {{
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 27}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87733671", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Qatar", "Description" -> 
          "viral pandemic in Qatar"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 9}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 9}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 23}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87648634", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Armenia", "Description" -> 
          "details of ongoing viral pandemic in Armenia"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87651995", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Kazakhstan", "Description" -> 
          "viral pandemic in Kazakhstan"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87652010", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Venezuela", "Description" -> 
          "viral outbreak in Venezuela"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87657486", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Sudan", "Description" -> 
          "viral pandemic in Sudan"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87659698", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Guyana", "Description" -> 
          "viral pandemic in Guyana"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87660365", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Uruguay", "Description" -> 
          "viral pandemic in Uruguay"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87662819", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Togo", "Description" -> 
          "viral pandemic in Togo"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87662895", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Maldives", "Description" -> 
          "viral pandemic in the Maldives"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87664046", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Suriname", "Description" -> 
          "viral pandemic in Suriname"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87665038", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Ethiopia", "Description" -> 
          "details of ongoing viral pandemic in Ethiopia"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87666247", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Ghana", "Description" -> 
          "viral pandemic in Ghana"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 22}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87694131", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Trinidad and Tobago", 
          "Description" -> "viral pandemic in Trinidad and Tobago"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 21}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87483673", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Colombia", "Description" -> 
          "viral pandemic in Colombia"]] -> {{
          ExternalIdentifier["WikidataID", "Q182899", 
           Association[
           "Label" -> "quarantine", "Description" -> 
            "epidemiological intervention of restriction on the movement of \
people and goods, which is intended to prevent the spread of infectious \
disease or pests"]], 
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          ExternalIdentifier["WikidataID", "Q88307738", 
           Association[
           "Label" -> "stay-at-home order", "Description" -> 
            "type of quarantine"]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87563855", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Dominican Republic", 
          "Description" -> "viral pandemic in the Dominican Republic"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87587763", 
         Association[
         "Label" -> "COVID-19 pandemic in Peru", "Description" -> 
          "ongoing viral pandemic"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 10}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87587760", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Malta", "Description" -> 
          "details of ongoing viral pandemic in Malta"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 11}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 22}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87589123", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Paraguay", "Description" -> 
          "viral pandemic in Paraguay"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 10}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 10}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87589148", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Jordan", "Description" -> 
          "viral pandemic in Jordan"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 11}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 21}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87590993", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Cuba", "Description" -> 
          "viral pandemic in Cuba"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87592982", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Moldova", "Description" -> 
          "details of ongoing viral pandemic in Moldova"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87610822", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Jamaica", "Description" -> 
          "viral pandemic in Jamaica"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 10}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 21}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87745903", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Senegal", "Description" -> 
          "COVID-19 outbreak in Senegal"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 23}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87755488", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Bahamas", "Description" -> 
          "viral pandemic in the Bahamas"]] -> {{
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87770645", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Somalia", "Description" -> 
          "viral pandemic in Somalia"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87814953", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Syria", "Description" -> 
          "viral pandemic in Syria"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 27}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87887813", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Montenegro", "Description" -> 
          "details of ongoing viral pandemic in Montenegro"]] -> {{
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87899016", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Gambia", "Description" -> 
          "viral pandemic in the Gambia"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87899022", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Djibouti", "Description" -> 
          "viral pandemic in Djibouti"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87902950", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Kyrgyzstan", "Description" -> 
          "viral pandemic in Kyrgyzstan"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87975745", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Fiji", "Description" -> 
          "details of ongoing viral pandemic in Fiji"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 30}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87976629", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Zambia", "Description" -> 
          "viral pandemic in Zambia"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87979033", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Mauritius", "Description" -> 
          "viral pandemic in Mauritius"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q88082534", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Angola", "Description" -> 
          "viral pandemic in Angola"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q86913546", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Indonesia", "Description" -> 
          "details of an ongoing pandemic in Indonesia"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 8}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q86919406", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Czech Republic", 
          "Description" -> 
          "details of ongoing viral pandemic in the Czech Republic"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 3}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 10}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q86948603", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Portugal", "Description" -> 
          "details of ongoing viral pandemic in Portugal"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87058723", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Morocco", "Description" -> 
          "viral pandemic in Morocco"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87066621", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Latvia", "Description" -> 
          "details of ongoing viral outbreak in Latvia"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87068864", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Greece", "Description" -> 
          "details of ongoing viral outbreak in Greece"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 10}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87070975", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Israel", "Description" -> 
          "viral outbreak in Israel"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 11}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 2, 26}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88307738", 
           Association[
           "Label" -> "stay-at-home order", "Description" -> 
            "type of quarantine"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87070999", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Bahrain", "Description" -> 
          "viral pandemic in Bahrain"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 2, 25}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 22}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 26}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 26}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87116829", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Egypt", "Description" -> 
          "details of ongoing viral pandemic in Egypt"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 21}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87119811", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Hungary", "Description" -> 
          "viral outbreak in Hungary"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 6}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 11}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 11}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87123561", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in San Marino", "Description" -> 
          "viral outbreak in San Marino"]] -> {{
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87186117", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Saudi Arabia", "Description" -> 
          "details of ongoing viral pandemic in Saudi Arabia"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 8}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87186365", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Republic of Ireland", 
          "Description" -> 
          "details of ongoing viral outbreak in the Republic of Ireland"]] -> \
{{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 28}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 28}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87191204", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Chile", "Description" -> 
          "viral outbreak in Chile"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 22}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87193778", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Serbia", "Description" -> 
          "details of ongoing viral outbreak in Serbia"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 21}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87199320", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the State of Palestine", 
          "Description" -> 
          "details of ongoing viral pandemic in the State of Palestine"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 5}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 5}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 5}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87202921", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Algeria", "Description" -> 
          "viral outbreak in Algeria"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87204911", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Estonia", "Description" -> 
          "details of ongoing viral outbreak in Estonia"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87222526", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Vatican City", "Description" -> 
          "details of ongoing viral outbreak in Vatican City"]] -> {{
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 10}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87235137", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Argentina", "Description" -> 
          "details of ongoing viral outbreak in Argentina"]] -> {{
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87235177", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Ukraine", "Description" -> 
          "details of ongoing viral outbreak in Ukraine"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 2, 4}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 11}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87243915", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in South Africa", "Description" -> 
          "details of ongoing viral outbreak in South Africa"]] -> {{
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 26}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87245450", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Lebanon", "Description" -> 
          "viral outbreak in Lebanon"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 21}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 26}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250691", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Kuwait", "Description" -> 
          "details of ongoing viral pandemic in Kuwait"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250695", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Poland", "Description" -> 
          "spread of SARS-CoV-2 infections in Poland in during the 2020 \
pandemic"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250713", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Ecuador", "Description" -> 
          "Pandemia viral en Ecuador"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250732", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Croatia", "Description" -> 
          "details pf ongoing viral outbreak in Croatia"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q88082639", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Cape Verde", "Description" -> 
          "viral pandemic"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 26}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q88082809", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Niger", "Description" -> 
          "viral outbreak in Niger"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q88137634", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Papua New Guinea", 
          "Description" -> 
          "details of ongoing viral pandemic in Papua New Guinea"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 1, 30}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q88164033", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Zimbabwe", "Description" -> 
          "viral pandemic in Zimbabwe"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 23}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q88263719", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Uganda", "Description" -> 
          "viral pandemic in Uganda"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q88371105", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Eritrea", "Description" -> 
          "viral pandemic in Eritrea"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q88460663", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Myanmar", "Description" -> 
          "viral pandemic in Myanmar"]] -> {{
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q88556836", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Mali", "Description" -> 
          "viral pandemic in Mali"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q89277064", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Nauru", "Description" -> 
          "viral pandemic in Nauru"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q89277147", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Samoa", "Description" -> 
          "viral pandemic in Samoa"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 1, 28}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 26}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87121993", 
         Association["Label" -> "2020 COVID-19 pandemic in Iceland"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250819", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Liechtenstein"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87450756", 
         Association["Label" -> "2020 COVID-19 pandemic in Albania"]] -> {{
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 10}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87486535", 
         Association["Label" -> "2020 COVID-19 pandemic in Bulgaria"]] -> {{
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87580938", 
         Association["Label" -> "2020 COVID-19 pandemic in Cyprus"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87655119", 
         Association["Label" -> "COVID-19 pandemic in Kosovo"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87708719", 
         Association["Label" -> "2020 COVID-19 pandemic in Aruba"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87718451", 
         Association["Label" -> "2020 COVID-19 pandemic in Nigeria"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 10}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87743173", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Northern Cyprus"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87906931", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in the Faroe Islands"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q88082693", 
         Association["Label" -> "2020 COVID-19 pandemic in Haiti"]] -> {{
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 19}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250752", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Romania", "Description" -> 
          "details of ongoing viral pandemic im Romania"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 11}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250770", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Bosnia and Herzegovina", 
          "Description" -> 
          "details of ongoing viral outbreak in Bosnia and Herzegovina"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 11}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 17}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250803", 
         Association[
         "Label" -> "COVID-19 pandemic in New Zealand", "Description" -> 
          "ongoing coronavirus pandemic in New Zealand"]] -> {{
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 21}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 23}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250838", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Lithuania", "Description" -> 
          "details of ongoing viral outbreak in Lithuania"]] -> {{
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 2, 26}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 12}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250860", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Luxembourg", "Description" -> 
          "viral outbreak in Luxembourg"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250877", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Monaco", "Description" -> 
          "details of ongoing viral outbreak in Monaco"]] -> {{
          ExternalIdentifier["WikidataID", "Q30314010", 
           Association[
           "Label" -> "social distancing", "Description" -> 
            "reduction of human social interaction in an effort to prevent \
the spread of infectious disease"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250897", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in North Macedonia", 
          "Description" -> 
          "details of ongoing viral outbreak in North Macedonia"]] -> {{
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q223625", 
           Association[
           "Label" -> "curfew", "Description" -> 
            "political or police ban on entering public areas such as streets \
or squares"]], 
          DateObject[{2020, 3, 22}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87250913", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Georgia", "Description" -> 
          "details of ongoing viral pandemic in Georgia"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87454162", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Oman", "Description" -> 
          "viral pandemic in Oman"]] -> {{
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 14}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 29}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87473205", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Turkey", "Description" -> 
          "details of ongoing viral outbreak in Turkey"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 2, 29}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 2, 3}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 27}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q89681240", 
           Association["Label" -> "closing of non-essential businesses"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88323877", 
           Association[
           "Label" -> "closing of educational institutions", "Description" -> 
            "action to reduce virus transmission"]], 
          DateObject[{2020, 3, 16}, "Day", "Gregorian", 0.]}}, 
       ExternalIdentifier["WikidataID", "Q87480220", 
         Association[
         "Label" -> "2020 COVID-19 pandemic in Bolivia", "Description" -> 
          "viral pandemic in Bolivia"]] -> {{
          ExternalIdentifier["WikidataID", "Q87745167", 
           Association[
           "Label" -> "travel restriction", "Description" -> "policy"]], 
          DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761394", 
           Association[
           "Label" -> "travel ban", "Description" -> 
            "restriction of all means of travel"]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q88761692", 
           Association[
           "Label" -> "flight ban", "Description" -> 
            "Restriction of air travel, e.g. closure of airports"]], 
          DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q6665312", 
           Association[
           "Label" -> "lockdown", "Description" -> 
            "emergency protocol that prevents people or information from \
leaving an area"]], 
          DateObject[{2020, 3, 21}, "Day", "Gregorian", 0.]}, {
          ExternalIdentifier["WikidataID", "Q7257745", 
           Association[
           "Label" -> "declaration of public health emergency", "Description" -> 
            "The declaration of a public health emergency in response to a \
(public) health crisis."]], 
          DateObject[{2020, 3, 25}, "Day", "Gregorian", 0.]}}], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 4, 
          DirectedInfinity[1], {All}]]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 132], "Meta" -> 
     Association["ID" -> 43289176418471, MaxItems -> 5], "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 4, 
          DirectedInfinity[1], {All}]]], 5, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 132], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     132, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q83872291\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"COVID-19 pandemic in Japan\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"viral outbreak in Japan\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"COVID-19 pandemic in Japan\"", 
                   "http://www.wikidata.org/entity/Q83872291"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83872291", 
                   Association[
                   "Label" -> "COVID-19 pandemic in Japan", "Description" -> 
                    "viral outbreak in Japan"]]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q88323877", 
                    Association[
                    "Label" -> "closing of educational institutions", 
                    "Description" -> "action to reduce virus transmission"]], 
                    DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q88323877", 
                    Association[
                    "Label" -> "closing of educational institutions", 
                    "Description" -> "action to reduce virus transmission"]], 
                    DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83872291", 
                    Association[
                    "Label" -> "COVID-19 pandemic in Japan", "Description" -> 
                    "viral outbreak in Japan"]]], 1}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83872291", 
                   Association[
                   "Label" -> "COVID-19 pandemic in Japan", "Description" -> 
                    "viral outbreak in Japan"]]], 1}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q83873057\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"COVID-19 pandemic in Vietnam\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"viral outbreak in Vietnam\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"COVID-19 pandemic in Vietnam\"", 
                   "http://www.wikidata.org/entity/Q83873057"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873057", 
                   Association[
                   "Label" -> "COVID-19 pandemic in Vietnam", "Description" -> 
                    "viral outbreak in Vietnam"]]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q7257745", 
                    Association[
                    "Label" -> "declaration of public health emergency", 
                    "Description" -> 
                    "The declaration of a public health emergency in response \
to a (public) health crisis."]], 
                    DateObject[{2020, 3, 1}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q7257745", 
                    Association[
                    "Label" -> "declaration of public health emergency", 
                    "Description" -> 
                    "The declaration of a public health emergency in response \
to a (public) health crisis."]], 
                    DateObject[{2020, 3, 1}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873057", 
                    Association[
                    "Label" -> "COVID-19 pandemic in Vietnam", "Description" -> 
                    "viral outbreak in Vietnam"]]], 1}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873057", 
                   Association[
                   "Label" -> "COVID-19 pandemic in Vietnam", "Description" -> 
                    "viral outbreak in Vietnam"]]], 1}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q87745167", 
                    Association[
                    "Label" -> "travel restriction", "Description" -> 
                    "policy"]], 
                    DateObject[{2020, 3, 1}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q87745167", 
                    Association[
                    "Label" -> "travel restriction", "Description" -> 
                    "policy"]], 
                    DateObject[{2020, 3, 1}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873057", 
                    Association[
                    "Label" -> "COVID-19 pandemic in Vietnam", "Description" -> 
                    "viral outbreak in Vietnam"]]], 2}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873057", 
                   Association[
                   "Label" -> "COVID-19 pandemic in Vietnam", "Description" -> 
                    "viral outbreak in Vietnam"]]], 2}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q6665312", 
                    Association[
                    "Label" -> "lockdown", "Description" -> 
                    "emergency protocol that prevents people or information \
from leaving an area"]], 
                    DateObject[{2020, 2, 13}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q6665312", 
                    Association[
                    "Label" -> "lockdown", "Description" -> 
                    "emergency protocol that prevents people or information \
from leaving an area"]], 
                    DateObject[{2020, 2, 13}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873057", 
                    Association[
                    "Label" -> "COVID-19 pandemic in Vietnam", "Description" -> 
                    "viral outbreak in Vietnam"]]], 3}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873057", 
                   Association[
                   "Label" -> "COVID-19 pandemic in Vietnam", "Description" -> 
                    "viral outbreak in Vietnam"]]], 3}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q88323877", 
                    Association[
                    "Label" -> "closing of educational institutions", 
                    "Description" -> "action to reduce virus transmission"]], 
                    DateObject[{2020, 2, 14}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q88323877", 
                    Association[
                    "Label" -> "closing of educational institutions", 
                    "Description" -> "action to reduce virus transmission"]], 
                    DateObject[{2020, 2, 14}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873057", 
                    Association[
                    "Label" -> "COVID-19 pandemic in Vietnam", "Description" -> 
                    "viral outbreak in Vietnam"]]], 4}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873057", 
                   Association[
                   "Label" -> "COVID-19 pandemic in Vietnam", "Description" -> 
                    "viral outbreak in Vietnam"]]], 4}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q83873387\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"2020 COVID-19 pandemic in Singapore\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"details of ongoing viral outbreak in Singapore\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"2020 COVID-19 pandemic in Singapore\"", 
                   "http://www.wikidata.org/entity/Q83873387"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873387", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Singapore", 
                    "Description" -> 
                    "details of ongoing viral outbreak in Singapore"]]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q87745167", 
                    Association[
                    "Label" -> "travel restriction", "Description" -> 
                    "policy"]], 
                    DateObject[{2020, 1, 23}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q87745167", 
                    Association[
                    "Label" -> "travel restriction", "Description" -> 
                    "policy"]], 
                    DateObject[{2020, 1, 23}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873387", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in Singapore", 
                    "Description" -> 
                    "details of ongoing viral outbreak in Singapore"]]], 1}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873387", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Singapore", 
                    "Description" -> 
                    "details of ongoing viral outbreak in Singapore"]]], 1}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q88323877", 
                    Association[
                    "Label" -> "closing of educational institutions", 
                    "Description" -> "action to reduce virus transmission"]], 
                    DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q88323877", 
                    Association[
                    "Label" -> "closing of educational institutions", 
                    "Description" -> "action to reduce virus transmission"]], 
                    DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873387", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in Singapore", 
                    "Description" -> 
                    "details of ongoing viral outbreak in Singapore"]]], 2}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873387", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Singapore", 
                    "Description" -> 
                    "details of ongoing viral outbreak in Singapore"]]], 2}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q30314010", 
                    Association[
                    "Label" -> "social distancing", "Description" -> 
                    "reduction of human social interaction in an effort to \
prevent the spread of infectious disease"]], 
                    DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q30314010", 
                    Association[
                    "Label" -> "social distancing", "Description" -> 
                    "reduction of human social interaction in an effort to \
prevent the spread of infectious disease"]], 
                    DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873387", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in Singapore", 
                    "Description" -> 
                    "details of ongoing viral outbreak in Singapore"]]], 3}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873387", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Singapore", 
                    "Description" -> 
                    "details of ongoing viral outbreak in Singapore"]]], 3}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q83873548\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"2020 COVID-19 pandemic in Australia\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"viral outbreak in Australia\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"2020 COVID-19 pandemic in Australia\"", 
                   "http://www.wikidata.org/entity/Q83873548"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873548", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Australia", 
                    "Description" -> "viral outbreak in Australia"]]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q30314010", 
                    Association[
                    "Label" -> "social distancing", "Description" -> 
                    "reduction of human social interaction in an effort to \
prevent the spread of infectious disease"]], 
                    DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q30314010", 
                    Association[
                    "Label" -> "social distancing", "Description" -> 
                    "reduction of human social interaction in an effort to \
prevent the spread of infectious disease"]], 
                    DateObject[{2020, 3, 13}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873548", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in Australia", 
                    "Description" -> "viral outbreak in Australia"]]], 1}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873548", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Australia", 
                    "Description" -> "viral outbreak in Australia"]]], 1}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q7257745", 
                    Association[
                    "Label" -> "declaration of public health emergency", 
                    "Description" -> 
                    "The declaration of a public health emergency in response \
to a (public) health crisis."]], 
                    DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q7257745", 
                    Association[
                    "Label" -> "declaration of public health emergency", 
                    "Description" -> 
                    "The declaration of a public health emergency in response \
to a (public) health crisis."]], 
                    DateObject[{2020, 2, 27}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873548", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in Australia", 
                    "Description" -> "viral outbreak in Australia"]]], 2}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873548", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Australia", 
                    "Description" -> "viral outbreak in Australia"]]], 2}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q88761394", 
                    Association[
                    "Label" -> "travel ban", "Description" -> 
                    "restriction of all means of travel"]], 
                    DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q88761394", 
                    Association[
                    "Label" -> "travel ban", "Description" -> 
                    "restriction of all means of travel"]], 
                    DateObject[{2020, 3, 20}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873548", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in Australia", 
                    "Description" -> "viral outbreak in Australia"]]], 3}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873548", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Australia", 
                    "Description" -> "viral outbreak in Australia"]]], 3}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q87745167", 
                    Association[
                    "Label" -> "travel restriction", "Description" -> 
                    "policy"]], 
                    DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q87745167", 
                    Association[
                    "Label" -> "travel restriction", "Description" -> 
                    "policy"]], 
                    DateObject[{2020, 3, 15}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873548", 
                    Association[
                    "Label" -> "2020 COVID-19 pandemic in Australia", 
                    "Description" -> "viral outbreak in Australia"]]], 4}, 
                  4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873548", 
                   Association[
                   "Label" -> "2020 COVID-19 pandemic in Australia", 
                    "Description" -> "viral outbreak in Australia"]]], 4}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"ExternalIdentifier", "[", 
                    RowBox[{"\"WikidataID\"", ",", "\"Q83873573\"", ",", 
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"Label\"", "\[Rule]", 
                    "\"2019\[Dash]20 coronavirus outbreak in Nepal\""}], ",", 
                    
                    RowBox[{
                    "\"Description\"", "\[Rule]", 
                    "\"viral outbreak in Nepal\""}]}], 
                    "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
                   "\"2019\[Dash]20 coronavirus outbreak in Nepal\"", 
                   "http://www.wikidata.org/entity/Q83873573"}, 
                  "ExternalIdentifierURL"], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873573", 
                   Association[
                   "Label" -> "2019\[Dash]20 coronavirus outbreak in Nepal", 
                    "Description" -> "viral outbreak in Nepal"]]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q87745167", 
                    Association[
                    "Label" -> "travel restriction", "Description" -> 
                    "policy"]], 
                    DateObject[{2020, 3, 2}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q87745167", 
                    Association[
                    "Label" -> "travel restriction", "Description" -> 
                    "policy"]], 
                    DateObject[{2020, 3, 2}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873573", 
                    Association[
                    "Label" -> "2019\[Dash]20 coronavirus outbreak in Nepal", 
                    "Description" -> "viral outbreak in Nepal"]]], 1}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873573", 
                   Association[
                   "Label" -> "2019\[Dash]20 coronavirus outbreak in Nepal", 
                    "Description" -> "viral outbreak in Nepal"]]], 1}, "Item",
                 False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q88323877", 
                    Association[
                    "Label" -> "closing of educational institutions", 
                    "Description" -> "action to reduce virus transmission"]], 
                    DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q88323877", 
                    Association[
                    "Label" -> "closing of educational institutions", 
                    "Description" -> "action to reduce virus transmission"]], 
                    DateObject[{2020, 3, 18}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873573", 
                    Association[
                    "Label" -> "2019\[Dash]20 coronavirus outbreak in Nepal", 
                    "Description" -> "viral outbreak in Nepal"]]], 2}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873573", 
                   Association[
                   "Label" -> "2019\[Dash]20 coronavirus outbreak in Nepal", 
                    "Description" -> "viral outbreak in Nepal"]]], 2}, "Item",
                 False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    ExternalIdentifier["WikidataID", "Q6665312", 
                    Association[
                    "Label" -> "lockdown", "Description" -> 
                    "emergency protocol that prevents people or information \
from leaving an area"]], 
                    DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    ExternalIdentifier["WikidataID", "Q6665312", 
                    Association[
                    "Label" -> "lockdown", "Description" -> 
                    "emergency protocol that prevents people or information \
from leaving an area"]], 
                    DateObject[{2020, 3, 24}, "Day", "Gregorian", 0.]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    ExternalIdentifier["WikidataID", "Q83873573", 
                    Association[
                    "Label" -> "2019\[Dash]20 coronavirus outbreak in Nepal", 
                    "Description" -> "viral outbreak in Nepal"]]], 3}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  ExternalIdentifier["WikidataID", "Q83873573", 
                   Association[
                   "Label" -> "2019\[Dash]20 coronavirus outbreak in Nepal", 
                    "Description" -> "viral outbreak in Nepal"]]], 3}, "Item",
                 False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 5 
                    If[True, 132, 1], {1, 132 - -5 + 1}], Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 5 
                    If[False, 132, 1], {1, 132 - -5 + 1}], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[
                    132, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[
                    132, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[False, 132, 1], {1, 132 - 5 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[True, 132, 1], {1, 132 - 5 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
      ImageSizeCache->{757., {288.134033203125, 293.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{757., {288.134033203125, 293.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.79854958106043*^9, 3.798549813557283*^9, 
  3.798559634060411*^9, 3.798561527184719*^9, 3.7985616872607117`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"98647bd5-4eaf-4c62-8a03-78e86e9144ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "tally", " ", "of", " ", "responses", " ", "by", " ", "all", " ", 
    "countries"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ReverseSortBy", "[", "Last", "]"}], "@", 
    RowBox[{"Tally", "@", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"Values", "@", "covidPandemicResponsesData"}]}], ",", 
       "_ExternalIdentifier"}], "]"}]}]}], " ", "//", " ", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], "&"}]}]}]], "Code",
 CellChangeTimes->{{3.7985499638134193`*^9, 3.798550177628109*^9}, {
   3.798553694405451*^9, 3.798553694769656*^9}, 3.7985586889519567`*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"b972dd55-394e-4021-96a4-91956cc9ddfe"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q88323877\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               
               RowBox[{
                "\"Label\"", "\[Rule]", 
                 "\"closing of educational institutions\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"action to reduce virus transmission\""}]}], 
             "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"closing of educational institutions\"", 
       "http://www.wikidata.org/entity/Q88323877"},
      "ExternalIdentifierURL"], "56"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q30314010\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"social distancing\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"reduction of human social interaction in an effort to \
prevent the spread of infectious disease\""}]}], "\[RightAssociation]"}]}], 
         "]"}], "\"Wikidata\"", "\"social distancing\"", 
       "http://www.wikidata.org/entity/Q30314010"},
      "ExternalIdentifierURL"], "54"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q87745167\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"travel restriction\""}], 
               ",", 
               RowBox[{"\"Description\"", "\[Rule]", "\"policy\""}]}], 
             "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"travel restriction\"", "http://www.wikidata.org/entity/Q87745167"},
      "ExternalIdentifierURL"], "50"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q7257745\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               
               RowBox[{
                "\"Label\"", "\[Rule]", 
                 "\"declaration of public health emergency\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"The declaration of a public health emergency in response \
to a (public) health crisis.\""}]}], "\[RightAssociation]"}]}], "]"}], 
       "\"Wikidata\"", "\"declaration of public health emergency\"", 
       "http://www.wikidata.org/entity/Q7257745"},
      "ExternalIdentifierURL"], "44"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q88761394\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"travel ban\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"restriction of all means of travel\""}]}], 
             "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"travel ban\"", "http://www.wikidata.org/entity/Q88761394"},
      "ExternalIdentifierURL"], "38"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q88761692\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"flight ban\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"Restriction of air travel, e.g. closure of \
airports\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"flight ban\"", "http://www.wikidata.org/entity/Q88761692"},
      "ExternalIdentifierURL"], "32"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q6665312\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"lockdown\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"emergency protocol that prevents people or information \
from leaving an area\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"",
        "\"lockdown\"", "http://www.wikidata.org/entity/Q6665312"},
      "ExternalIdentifierURL"], "31"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q223625\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"curfew\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"political or police ban on entering public areas such as \
streets or squares\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"curfew\"", "http://www.wikidata.org/entity/Q223625"},
      "ExternalIdentifierURL"], "28"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q89681240\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"closing of non-essential businesses\""}], 
             "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"closing of non-essential businesses\"", 
       "http://www.wikidata.org/entity/Q89681240"},
      "ExternalIdentifierURL"], "16"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q89211965\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               
               RowBox[{
                "\"Label\"", "\[Rule]", 
                 "\"decision by the Swedish Government\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"formal decisions in government meetings\""}]}], 
             "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"decision by the Swedish Government\"", 
       "http://www.wikidata.org/entity/Q89211965"},
      "ExternalIdentifierURL"], "5"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q88307738\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"stay-at-home order\""}], 
               ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", "\"type of quarantine\""}]}], 
             "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"stay-at-home order\"", "http://www.wikidata.org/entity/Q88307738"},
      "ExternalIdentifierURL"], "3"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q182899\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"quarantine\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"epidemiological intervention of restriction on the \
movement of people and goods, which is intended to prevent the spread of \
infectious disease or pests\""}]}], "\[RightAssociation]"}]}], "]"}], 
       "\"Wikidata\"", "\"quarantine\"", 
       "http://www.wikidata.org/entity/Q182899"},
      "ExternalIdentifierURL"], "3"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q5370734\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"emergency procedure\""}], 
               ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"plan of action to deal with an emergency\""}]}], 
             "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"emergency procedure\"", "http://www.wikidata.org/entity/Q5370734"},
      "ExternalIdentifierURL"], "2"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q88707306\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"border closure\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"action to reduce virus transmission in the \
community\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"border closure\"", "http://www.wikidata.org/entity/Q88707306"},
      "ExternalIdentifierURL"], "1"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q88705465\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               
               RowBox[{
                "\"Label\"", "\[Rule]", 
                 "\"travel advice as non-pharmaceutical countermeasure\""}], 
               ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"action to reduce virus transmission in the \
community\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"travel advice as non-pharmaceutical countermeasure\"", 
       "http://www.wikidata.org/entity/Q88705465"},
      "ExternalIdentifierURL"], "1"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q88324058\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"avoiding crowding\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"action to reduce virus transmission\""}]}], 
             "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"avoiding crowding\"", "http://www.wikidata.org/entity/Q88324058"},
      "ExternalIdentifierURL"], "1"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q820655\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"legislative act\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 
                 "\"formal written document that creates law, including acts, \
executive orders, and by-laws\""}]}], "\[RightAssociation]"}]}], "]"}], 
       "\"Wikidata\"", "\"legislative act\"", 
       "http://www.wikidata.org/entity/Q820655"},
      "ExternalIdentifierURL"], "1"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q428148\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"regulation\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"general term for rules or controls, including delegated \
legislation and self-regulation\""}]}], "\[RightAssociation]"}]}], "]"}], 
       "\"Wikidata\"", "\"regulation\"", 
       "http://www.wikidata.org/entity/Q428148"},
      "ExternalIdentifierURL"], "1"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q2795484\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               
               RowBox[{
                "\"Label\"", "\[Rule]", "\"implementing regulation\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"regulation on the details of the implementation of a \
law\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"implementing regulation\"", 
       "http://www.wikidata.org/entity/Q2795484"},
      "ExternalIdentifierURL"], "1"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q207184\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"press release\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"instrument of public relations\""}]}], 
             "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"press release\"", "http://www.wikidata.org/entity/Q207184"},
      "ExternalIdentifierURL"], "1"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q1864008\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"legal act\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"juridical fact in which the subject who made it happen \
acted under free will\""}]}], "\[RightAssociation]"}]}], "]"}], 
       "\"Wikidata\"", "\"legal act\"", 
       "http://www.wikidata.org/entity/Q1864008"},
      "ExternalIdentifierURL"], "1"},
    {
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q1032176\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"countermeasure\""}], ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"specific action taken or system used to offset another \
action\""}]}], "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
       "\"countermeasure\"", "http://www.wikidata.org/entity/Q1032176"},
      "ExternalIdentifierURL"], "1"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Right}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7985499653125343`*^9, 3.798550061834153*^9}, {
   3.798550093055271*^9, 3.798550160252125*^9}, 3.798553695534204*^9, 
   3.7985586897811537`*^9, 3.79855964220789*^9, 3.798561530619475*^9, 
   3.7985616891066217`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"fa819c6e-05d1-477e-bc20-0d8c287620d7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"compare", " ", "start", " ", "dates", " ", "of", " ", "Covid"}], 
    "-", 
    RowBox[{
    "19", " ", "responses", " ", "around", " ", "the", " ", "world"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"responseTimelinePlot", "[", 
    RowBox[{"response_", ",", " ", "plotLabel_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pos", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pos", " ", "=", " ", 
       RowBox[{"Position", "[", 
        RowBox[{"covidPandemicResponsesData", ",", " ", 
         RowBox[{"{", 
          RowBox[{"response", ",", "_"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"KeyMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Capitalize", "@", 
           RowBox[{"StringDelete", "[", 
            RowBox[{
             RowBox[{"#", "@", "\"\<Label\>\""}], ",", " ", 
             RowBox[{"__", "~~", "\"\<in \>\""}]}], "]"}]}], "&"}], ",", " ", 
         RowBox[{"Association", "@", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"pos", "\[LeftDoubleBracket]", 
             RowBox[{";;", ",", " ", "1", ",", " ", "1"}], 
             "\[RightDoubleBracket]"}], " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"Extract", "[", 
              RowBox[{"covidPandemicResponsesData", ",", " ", "pos"}], "]"}], 
             "\[LeftDoubleBracket]", 
             RowBox[{";;", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], 
           "]"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"TimelinePlot", "[", 
       RowBox[{
        RowBox[{"Association", "@", "data"}], ",", " ", 
        RowBox[{"PlotLayout", "\[Rule]", "\"\<VerticalGrouped\>\""}], ",", 
        " ", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", " ", 
        RowBox[{"AspectRatio", "\[Rule]", ".4"}], ",", " ", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", " ", "500"}], "}"}]}], ",", " ", 
        RowBox[{"PlotLabel", "\[Rule]", "plotLabel"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.798558323757661*^9, 3.798558379433257*^9}, {
  3.7985584206289043`*^9, 3.798558601420721*^9}, {3.7985617223535147`*^9, 
  3.798561737484077*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"53fe083b-a8c5-4980-a7ba-3539c38b6757"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"educational", " ", "institutions"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"responseTimelinePlot", "[", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q88323877\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              
              RowBox[{"\"Label\"", "\[Rule]", 
                "\"closing of educational institutions\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"action to reduce virus transmission\""}]}], 
            "\[RightAssociation]"}]}], "]"}], "\"Wikidata\"", 
      "\"closing of educational institutions\"", 
      "http://www.wikidata.org/entity/Q88323877"},
     "ExternalIdentifierURL"], ",", " ", 
    "\"\<Start of closing of educational institutions\>\""}], "]"}]}]], "Code",
 CellChangeTimes->{{3.79855859558349*^9, 3.798558618174584*^9}, {
  3.798558703385157*^9, 3.798558705704958*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"f5b0aeba-b69a-4a77-aca1-0e6857c028d0"],

Cell[BoxData[
 GraphicsBox[{
   {AbsolutePointSize[0], Opacity[0], 
    PointBox[NCache[{{0, -3789075600}, {Rational[1, 2], -3794000400}}, {{
       0, -3789075600}, {0.5, -3794000400}}]], 
    PointBox[NCache[{{Rational[-1, 2], -3789075600}, {
       Rational[3243, 20], -3794000400}}, {{-0.5, -3789075600}, {
       162.15, -3794000400}}]]}, {}, {}, {}, {
    {PointSize[0], Opacity[0], 
     PointBox[NCache[{{0, -3.788921355264*^9}, {
        Rational[3243, 20], -3.794154644736*^9}}, {{0, -3.788921355264*^9}, {
        162.15, -3.794154644736*^9}}]]}, {
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793136400}, {
                0, -3793136400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{155, -3793136400}, 
                Offset[{0, 0}, {0, -3793136400}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {155, -3793136400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {155, -3793136400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {155, -3793136400}]}, {
                 Offset[{-3.2, 0}, {155, -3793136400}], 
                 Offset[{1.5, 3.2}, {155, -3793136400}], 
                 Offset[{1.5, -3.2}, {155, -3793136400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Oman\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {155, -3793136400}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{155, -3.7932792192*^9}, 
               NCache[{
                 Rational[3233, 20], -3.7929935808*^9}, {
                161.65, -3.7929935808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 1164.0485165481196`}, {
           118.7224696157723, 151.37932386526472`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sat 14 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "14", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 14, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[2947, 20], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{147.35, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[2947, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[2947, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[2947, 20], -3793309200}]}, {
                 Offset[{-3.2, 0}, {147.35, -3793309200}], 
                 Offset[{1.5, 3.2}, {147.35, -3793309200}], 
                 Offset[{1.5, -3.2}, {147.35, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Turkey\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[2947, 20], -3793309200}], 
                Offset[{0, 0}, {147.35, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[2947, 20], -3.793463444736*^9}, {
                147.35, -3.793463444736*^9}], {154, -3.793154955264*^9}]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 1110.040884725733}, {
           132.7279719661096, 165.38482621560206`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[2947, 20], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{147.35, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[2947, 20], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[2947, 20], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[2947, 20], -3792963600}]}, {
                 Offset[{-3.2, 0}, {147.35, -3792963600}], 
                 Offset[{1.5, 3.2}, {147.35, -3792963600}], 
                 Offset[{1.5, -3.2}, {147.35, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Lithuania\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[2947, 20], -3792963600}], 
                Offset[{0, 0}, {147.35, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[2947, 20], -3.7931064192*^9}, {
                147.35, -3.7931064192*^9}], {154, -3.7928207808*^9}]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 1116.0930740565993`}, {
           104.71696726543496`, 137.37382151492739`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1397, 10], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{139.7, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1397, 10], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1397, 10], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1397, 10], -3792963600}]}, {
                 Offset[{-3.2, 0}, {139.7, -3792963600}], 
                 Offset[{1.5, 3.2}, {139.7, -3792963600}], 
                 Offset[{1.5, -3.2}, {139.7, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Northern Cyprus\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1397, 10], -3792963600}], 
                Offset[{0, 0}, {139.7, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1397, 10], -3.793117844736*^9}, {
                139.7, -3.793117844736*^9}], 
               NCache[{
                 Rational[2927, 20], -3.792809355264*^9}, {
                146.35, -3.792809355264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 1095.0854422342127`}, {
           104.71696726543496`, 137.37382151492739`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1397, 10], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{139.7, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1397, 10], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1397, 10], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1397, 10], -3793309200}]}, {
                 Offset[{-3.2, 0}, {139.7, -3793309200}], 
                 Offset[{1.5, 3.2}, {139.7, -3793309200}], 
                 Offset[{1.5, -3.2}, {139.7, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Aruba\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1397, 10], -3793309200}], 
                Offset[{0, 0}, {139.7, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1397, 10], -3.7934520192*^9}, {
                139.7, -3.7934520192*^9}], 
               NCache[{
                 Rational[2927, 20], -3.7931663808*^9}, {
                146.35, -3.7931663808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 1056.033252903346}, {
           132.7279719661096, 165.38482621560206`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[2641, 20], -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}, {{132.05, -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[2641, 20], -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[2641, 20], -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[2641, 20], -3793050000}]}, {
                 Offset[{-3.2, 0}, {132.05, -3793050000}], 
                 Offset[{1.5, 3.2}, {132.05, -3793050000}], 
                 Offset[{1.5, -3.2}, {132.05, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Ecuador\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[2641, 20], -3793050000}], 
                Offset[{0, 0}, {132.05, -3793050000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[2641, 20], -3.7931928192*^9}, {
                132.05, -3.7931928192*^9}], 
               NCache[{
                 Rational[1387, 10], -3.7929071808*^9}, {
                138.7, -3.7929071808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 1004.077810411826}, {
           111.71971844063273`, 144.37657269012516`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[622, 5], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{124.4, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[622, 5], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[622, 5], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[622, 5], -3793309200}]}, {
                 Offset[{-3.2, 0}, {124.4, -3793309200}], 
                 Offset[{1.5, 3.2}, {124.4, -3793309200}], 
                 Offset[{1.5, -3.2}, {124.4, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Iceland\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[622, 5], -3793309200}], 
                Offset[{0, 0}, {124.4, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[622, 5], -3.7934520192*^9}, {
                124.4, -3.7934520192*^9}], 
               NCache[{
                 Rational[2621, 20], -3.7931663808*^9}, {
                131.05, -3.7931663808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 948.0179892585729}, {
           132.7279719661096, 165.38482621560206`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[622, 5], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{124.4, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[622, 5], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[622, 5], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[622, 5], -3792963600}]}, {
                 Offset[{-3.2, 0}, {124.4, -3792963600}], 
                 Offset[{1.5, 3.2}, {124.4, -3792963600}], 
                 Offset[{1.5, -3.2}, {124.4, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Poland\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[622, 5], -3792963600}], 
                Offset[{0, 0}, {124.4, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[622, 5], -3.7931064192*^9}, {
                124.4, -3.7931064192*^9}], 
               NCache[{
                 Rational[2621, 20], -3.7928207808*^9}, {
                131.05, -3.7928207808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 948.0179892585729}, {
           104.71696726543496`, 137.37382151492739`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792877200}, {
                0, -3792877200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[467, 4], -3792877200}, 
                 Offset[{0, 0}, {0, -3792877200}]}, {{116.75, -3792877200}, 
                 Offset[{0, 0}, {0, -3792877200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[467, 4], -3792877200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[467, 4], -3792877200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[467, 4], -3792877200}]}, {
                 Offset[{-3.2, 0}, {116.75, -3792877200}], 
                 Offset[{1.5, 3.2}, {116.75, -3792877200}], 
                 Offset[{1.5, -3.2}, {116.75, -3792877200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Bosnia and Herzegovina\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[467, 4], -3792877200}], 
                Offset[{0, 0}, {116.75, -3792877200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[467, 4], -3.793031444736*^9}, {
                116.75, -3.793031444736*^9}], 
               NCache[{
                 Rational[617, 5], -3.792722955264*^9}, {
                123.4, -3.792722955264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 969.0625467670526}, {
           97.7142160902954, 130.37107033978782`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 11 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "11", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 11, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793222800}, {
                0, -3793222800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[467, 4], -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}, {{116.75, -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[467, 4], -3793222800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[467, 4], -3793222800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[467, 4], -3793222800}]}, {
                 Offset[{-3.2, 0}, {116.75, -3793222800}], 
                 Offset[{1.5, 3.2}, {116.75, -3793222800}], 
                 Offset[{1.5, -3.2}, {116.75, -3793222800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Serbia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[467, 4], -3793222800}], 
                Offset[{0, 0}, {116.75, -3793222800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[467, 4], -3.7933656192*^9}, {
                116.75, -3.7933656192*^9}], 
               NCache[{
                 Rational[617, 5], -3.7930799808*^9}, {
                123.4, -3.7930799808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 894.0103574361862}, {
           125.72522079091186`, 158.3820750404043}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sun 15 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "15", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 15, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792877200}, {
                0, -3792877200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1091, 10], -3792877200}, 
                 Offset[{0, 0}, {0, -3792877200}]}, {{109.1, -3792877200}, 
                 Offset[{0, 0}, {0, -3792877200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1091, 10], -3792877200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1091, 10], -3792877200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1091, 10], -3792877200}]}, {
                 Offset[{-3.2, 0}, {109.1, -3792877200}], 
                 Offset[{1.5, 3.2}, {109.1, -3792877200}], 
                 Offset[{1.5, -3.2}, {109.1, -3792877200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Romania\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1091, 10], -3792877200}], 
                Offset[{0, 0}, {109.1, -3792877200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1091, 10], -3.7930200192*^9}, {
                109.1, -3.7930200192*^9}], 
               NCache[{
                 Rational[463, 4], -3.7927343808*^9}, {
                115.75, -3.7927343808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 845.0549149446659}, {
           97.7142160902954, 130.37107033978782`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 11 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "11", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 11, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793222800}, {
                0, -3793222800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1091, 10], -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}, {{109.1, -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1091, 10], -3793222800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1091, 10], -3793222800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1091, 10], -3793222800}]}, {
                 Offset[{-3.2, 0}, {109.1, -3793222800}], 
                 Offset[{1.5, 3.2}, {109.1, -3793222800}], 
                 Offset[{1.5, -3.2}, {109.1, -3793222800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Chile\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1091, 10], -3793222800}], 
                Offset[{0, 0}, {109.1, -3793222800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1091, 10], -3.7933656192*^9}, {
                109.1, -3.7933656192*^9}], 
               NCache[{
                 Rational[463, 4], -3.7930799808*^9}, {
                115.75, -3.7930799808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 840.0027256137995}, {
           125.72522079091186`, 158.3820750404043}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sun 15 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "15", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 15, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[2029, 20], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{101.45, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[2029, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[2029, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[2029, 20], -3793309200}]}, {
                 Offset[{-3.2, 0}, {101.45, -3793309200}], 
                 Offset[{1.5, 3.2}, {101.45, -3793309200}], 
                 Offset[{1.5, -3.2}, {101.45, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Croatia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[2029, 20], -3793309200}], 
                Offset[{0, 0}, {101.45, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[2029, 20], -3.7934520192*^9}, {
                101.45, -3.7934520192*^9}], 
               NCache[{
                 Rational[1081, 10], -3.7931663808*^9}, {
                108.1, -3.7931663808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 785.9950937914127}, {
           132.7279719661096, 165.38482621560206`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[2029, 20], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{101.45, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[2029, 20], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[2029, 20], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[2029, 20], -3792963600}]}, {
                 Offset[{-3.2, 0}, {101.45, -3792963600}], 
                 Offset[{1.5, 3.2}, {101.45, -3792963600}], 
                 Offset[{1.5, -3.2}, {101.45, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The Republic of Ireland\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[2029, 20], -3792963600}], 
                Offset[{0, 0}, {101.45, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[2029, 20], -3.793117844736*^9}, {
                101.45, -3.793117844736*^9}], 
               NCache[{
                 Rational[1081, 10], -3.792809355264*^9}, {
                108.1, -3.792809355264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 856.0472831222793}, {
           104.71696726543496`, 137.37382151492739`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[469, 5], -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}, {{93.8, -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[469, 5], -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[469, 5], -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[469, 5], -3793050000}]}, {
                 Offset[{-3.2, 0}, {93.8, -3793050000}], 
                 Offset[{1.5, 3.2}, {93.8, -3793050000}], 
                 Offset[{1.5, -3.2}, {93.8, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Latvia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[469, 5], -3793050000}], 
                Offset[{0, 0}, {93.8, -3793050000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[469, 5], -3.7931928192*^9}, {
                93.8, -3.7931928192*^9}], 
               NCache[{
                 Rational[2009, 20], -3.7929071808*^9}, {
                100.45, -3.7929071808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 731.9874619690262}, {
           111.71971844063273`, 144.37657269012516`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1723, 20], -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}, {{86.15, -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1723, 20], -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1723, 20], -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1723, 20], -3793050000}]}, {
                 Offset[{-3.2, 0}, {86.15, -3793050000}], 
                 Offset[{1.5, 3.2}, {86.15, -3793050000}], 
                 Offset[{1.5, -3.2}, {86.15, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Morocco\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1723, 20], -3793050000}], 
                Offset[{0, 0}, {86.15, -3793050000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1723, 20], -3.7931928192*^9}, {
                86.15, -3.7931928192*^9}], 
               NCache[{
                 Rational[464, 5], -3.7929071808*^9}, {
                92.8, -3.7929071808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 681.032019477506}, {
           111.71971844063273`, 144.37657269012516`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793136400}, {
                0, -3793136400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[157, 2], -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}, {{78.5, -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[157, 2], -3793136400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[157, 2], -3793136400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[157, 2], -3793136400}]}, {
                 Offset[{-3.2, 0}, {78.5, -3793136400}], 
                 Offset[{1.5, 3.2}, {78.5, -3793136400}], 
                 Offset[{1.5, -3.2}, {78.5, -3793136400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Syria\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[157, 2], -3793136400}], 
                Offset[{0, 0}, {78.5, -3793136400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[157, 2], -3.793290644736*^9}, {
                78.5, -3.793290644736*^9}], 
               NCache[{
                 Rational[1703, 20], -3.792982155264*^9}, {
                85.15, -3.792982155264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 623.9721983242528}, {
           118.7224696157723, 151.37932386526472`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sat 14 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "14", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 14, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792790800}, {
                0, -3792790800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1417, 20], -3792790800}, 
                 Offset[{0, 0}, {0, -3792790800}]}, {{70.85, -3792790800}, 
                 Offset[{0, 0}, {0, -3792790800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1417, 20], -3792790800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1417, 20], -3792790800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1417, 20], -3792790800}]}, {
                 Offset[{-3.2, 0}, {70.85, -3792790800}], 
                 Offset[{1.5, 3.2}, {70.85, -3792790800}], 
                 Offset[{1.5, -3.2}, {70.85, -3792790800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Greece\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1417, 20], -3792790800}], 
                Offset[{0, 0}, {70.85, -3792790800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1417, 20], -3.7929336192*^9}, {
                70.85, -3.7929336192*^9}], 
               NCache[{
                 Rational[155, 2], -3.7926479808*^9}, {
                77.5, -3.7926479808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 569.9645665018661}, {
           90.71146491515583, 123.36831916464826`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 10 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "10", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 10, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793222800}, {
                0, -3793222800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1417, 20], -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}, {{70.85, -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1417, 20], -3793222800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1417, 20], -3793222800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1417, 20], -3793222800}]}, {
                 Offset[{-3.2, 0}, {70.85, -3793222800}], 
                 Offset[{1.5, 3.2}, {70.85, -3793222800}], 
                 Offset[{1.5, -3.2}, {70.85, -3793222800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Senegal\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1417, 20], -3793222800}], 
                Offset[{0, 0}, {70.85, -3793222800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1417, 20], -3.793377044736*^9}, {
                70.85, -3.793377044736*^9}], 
               NCache[{
                 Rational[155, 2], -3.793068555264*^9}, {
                77.5, -3.793068555264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 572.0167558327325}, {
           125.72522079091186`, 158.3820750404043}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sun 15 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "15", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 15, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[316, 5], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{63.2, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[316, 5], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[316, 5], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[316, 5], -3793309200}]}, {
                 Offset[{-3.2, 0}, {63.2, -3793309200}], 
                 Offset[{1.5, 3.2}, {63.2, -3793309200}], 
                 Offset[{1.5, -3.2}, {63.2, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Hungary\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[316, 5], -3793309200}], 
                Offset[{0, 0}, {63.2, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[316, 5], -3.793463444736*^9}, {
                63.2, -3.793463444736*^9}], 
               NCache[{
                 Rational[1397, 20], -3.793154955264*^9}, {
                69.85, -3.793154955264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 519.0091240103459}, {
           132.7279719661096, 165.38482621560206`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[316, 5], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{63.2, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[316, 5], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[316, 5], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[316, 5], -3792963600}]}, {
                 Offset[{-3.2, 0}, {63.2, -3792963600}], 
                 Offset[{1.5, 3.2}, {63.2, -3792963600}], 
                 Offset[{1.5, -3.2}, {63.2, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Jamaica\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[316, 5], -3792963600}], 
                Offset[{0, 0}, {63.2, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[316, 5], -3.7931064192*^9}, {
                63.2, -3.7931064192*^9}], 
               NCache[{
                 Rational[1397, 20], -3.7928207808*^9}, {
                69.85, -3.7928207808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 518.0091240103459}, {
           104.71696726543496`, 137.37382151492739`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793568400}, {
                0, -3793568400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1111, 20], -3793568400}, 
                 Offset[{0, 0}, {0, -3793568400}]}, {{55.55, -3793568400}, 
                 Offset[{0, 0}, {0, -3793568400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1111, 20], -3793568400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1111, 20], -3793568400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1111, 20], -3793568400}]}, {
                 Offset[{-3.2, 0}, {55.55, -3793568400}], 
                 Offset[{1.5, 3.2}, {55.55, -3793568400}], 
                 Offset[{1.5, -3.2}, {55.55, -3793568400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Haiti\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1111, 20], -3793568400}], 
                Offset[{0, 0}, {55.55, -3793568400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1111, 20], -3.7937112192*^9}, {
                55.55, -3.7937112192*^9}], 
               NCache[{
                 Rational[311, 5], -3.7934255808*^9}, {
                62.2, -3.7934255808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 461.9493028570928}, {
           153.7362254915865, 186.39307974107896`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 19 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "19", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 19, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792790800}, {
                0, -3792790800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1111, 20], -3792790800}, 
                 Offset[{0, 0}, {0, -3792790800}]}, {{55.55, -3792790800}, 
                 Offset[{0, 0}, {0, -3792790800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1111, 20], -3792790800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1111, 20], -3792790800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1111, 20], -3792790800}]}, {
                 Offset[{-3.2, 0}, {55.55, -3792790800}], 
                 Offset[{1.5, 3.2}, {55.55, -3792790800}], 
                 Offset[{1.5, -3.2}, {55.55, -3792790800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The Czech Republic\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1111, 20], -3792790800}], 
                Offset[{0, 0}, {55.55, -3792790800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1111, 20], -3.792945044736*^9}, {
                55.55, -3.792945044736*^9}], 
               NCache[{
                 Rational[311, 5], -3.792636555264*^9}, {
                62.2, -3.792636555264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 517.0014921879592}, {
           90.71146491515583, 123.36831916464826`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 10 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "10", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 10, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793222800}, {
                0, -3793222800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1111, 20], -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}, {{55.55, -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1111, 20], -3793222800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1111, 20], -3793222800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1111, 20], -3793222800}]}, {
                 Offset[{-3.2, 0}, {55.55, -3793222800}], 
                 Offset[{1.5, 3.2}, {55.55, -3793222800}], 
                 Offset[{1.5, -3.2}, {55.55, -3793222800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Jordan\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1111, 20], -3793222800}], 
                Offset[{0, 0}, {55.55, -3793222800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1111, 20], -3.7933656192*^9}, {
                55.55, -3.7933656192*^9}], 
               NCache[{
                 Rational[311, 5], -3.7930799808*^9}, {
                62.2, -3.7930799808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 461.9493028570928}, {
           125.72522079091186`, 158.3820750404043}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sun 15 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "15", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 15, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[479, 10], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{47.9, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[479, 10], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[479, 10], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[479, 10], -3792963600}]}, {
                 Offset[{-3.2, 0}, {47.9, -3792963600}], 
                 Offset[{1.5, 3.2}, {47.9, -3792963600}], 
                 Offset[{1.5, -3.2}, {47.9, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Malta\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[479, 10], -3792963600}], 
                Offset[{0, 0}, {47.9, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[479, 10], -3.7931064192*^9}, {
                47.9, -3.7931064192*^9}], 
               NCache[{
                 Rational[1091, 20], -3.7928207808*^9}, {
                54.55, -3.7928207808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 407.9416710347061}, {
           104.71696726543496`, 137.37382151492739`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[479, 10], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{47.9, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[479, 10], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[479, 10], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[479, 10], -3793309200}]}, {
                 Offset[{-3.2, 0}, {47.9, -3793309200}], 
                 Offset[{1.5, 3.2}, {47.9, -3793309200}], 
                 Offset[{1.5, -3.2}, {47.9, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Colombia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[479, 10], -3793309200}], 
                Offset[{0, 0}, {47.9, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[479, 10], -3.7934520192*^9}, {
                47.9, -3.7934520192*^9}], 
               NCache[{
                 Rational[1091, 20], -3.7931663808*^9}, {
                54.55, -3.7931663808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 414.9938603655725}, {
           132.7279719661096, 165.38482621560206`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793395600}, {
                0, -3793395600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[161, 4], -3793395600}, 
                 Offset[{0, 0}, {0, -3793395600}]}, {{40.25, -3793395600}, 
                 Offset[{0, 0}, {0, -3793395600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[161, 4], -3793395600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[161, 4], -3793395600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[161, 4], -3793395600}]}, {
                 Offset[{-3.2, 0}, {40.25, -3793395600}], 
                 Offset[{1.5, 3.2}, {40.25, -3793395600}], 
                 Offset[{1.5, -3.2}, {40.25, -3793395600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The Dominican Republic\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[161, 4], -3793395600}], 
                Offset[{0, 0}, {40.25, -3793395600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[161, 4], -3.793549844736*^9}, {
                40.25, -3.793549844736*^9}], 
               NCache[{
                 Rational[469, 10], -3.793241355264*^9}, {
                46.9, -3.793241355264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 427.98622854318586`}, {
           139.73072314124917`, 172.38757739074163`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 17 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "17", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 17, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[161, 4], -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}, {{40.25, -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[161, 4], -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[161, 4], -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[161, 4], -3793050000}]}, {
                 Offset[{-3.2, 0}, {40.25, -3793050000}], 
                 Offset[{1.5, 3.2}, {40.25, -3793050000}], 
                 Offset[{1.5, -3.2}, {40.25, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Trinidad and Tobago\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[161, 4], -3793050000}], 
                Offset[{0, 0}, {40.25, -3793050000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[161, 4], -3.793204244736*^9}, {
                40.25, -3.793204244736*^9}], 
               NCache[{
                 Rational[469, 10], -3.792895755264*^9}, {
                46.9, -3.792895755264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 411.98622854318586`}, {
           111.71971844063273`, 144.37657269012516`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792790800}, {
                0, -3792790800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[163, 5], -3792790800}, 
                 Offset[{0, 0}, {0, -3792790800}]}, {{32.6, -3792790800}, 
                 Offset[{0, 0}, {0, -3792790800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[163, 5], -3792790800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[163, 5], -3792790800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[163, 5], -3792790800}]}, {
                 Offset[{-3.2, 0}, {32.6, -3792790800}], 
                 Offset[{1.5, 3.2}, {32.6, -3792790800}], 
                 Offset[{1.5, -3.2}, {32.6, -3792790800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Paraguay\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[163, 5], -3792790800}], 
                Offset[{0, 0}, {32.6, -3792790800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[163, 5], -3.792945044736*^9}, {
                32.6, -3.792945044736*^9}], 
               NCache[{
                 Rational[157, 4], -3.792636555264*^9}, {
                39.25, -3.792636555264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 307.9785967207992}, {
           90.71146491515583, 123.36831916464826`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 10 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "10", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 10, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793136400}, {
                0, -3793136400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[163, 5], -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}, {{32.6, -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[163, 5], -3793136400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[163, 5], -3793136400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[163, 5], -3793136400}]}, {
                 Offset[{-3.2, 0}, {32.6, -3793136400}], 
                 Offset[{1.5, 3.2}, {32.6, -3793136400}], 
                 Offset[{1.5, -3.2}, {32.6, -3793136400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Uruguay\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[163, 5], -3793136400}], 
                Offset[{0, 0}, {32.6, -3793136400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[163, 5], -3.793290644736*^9}, {
                32.6, -3.793290644736*^9}], 
               NCache[{
                 Rational[157, 4], -3.792982155264*^9}, {
                39.25, -3.792982155264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 302.9785967207992}, {
           118.7224696157723, 151.37932386526472`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sat 14 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "14", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 14, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793482000}, {
                0, -3793482000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[163, 5], -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}, {{32.6, -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[163, 5], -3793482000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[163, 5], -3793482000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[163, 5], -3793482000}]}, {
                 Offset[{-3.2, 0}, {32.6, -3793482000}], 
                 Offset[{1.5, 3.2}, {32.6, -3793482000}], 
                 Offset[{1.5, -3.2}, {32.6, -3793482000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Russia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[163, 5], -3793482000}], 
                Offset[{0, 0}, {32.6, -3793482000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[163, 5], -3.7936248192*^9}, {
                32.6, -3.7936248192*^9}], 
               NCache[{
                 Rational[157, 4], -3.7933391808*^9}, {
                39.25, -3.7933391808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 299.92640738993276`}, {
           146.73347431638874`, 179.3903285658812}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 18 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "18", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 18, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3791581200}, {
                0, -3791581200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[499, 20], -3791581200}, 
                 Offset[{0, 0}, {0, -3791581200}]}, {{24.95, -3791581200}, 
                 Offset[{0, 0}, {0, -3791581200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[499, 20], -3791581200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[499, 20], -3791581200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[499, 20], -3791581200}]}, {
                 Offset[{-3.2, 0}, {24.95, -3791581200}], 
                 Offset[{1.5, 3.2}, {24.95, -3791581200}], 
                 Offset[{1.5, -3.2}, {24.95, -3791581200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Bahrain\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[499, 20], -3791581200}], 
                Offset[{0, 0}, {24.95, -3791581200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[499, 20], -3.7917240192*^9}, {
                24.95, -3.7917240192*^9}], 
               NCache[{
                 Rational[158, 5], -3.7914383808*^9}, {
                31.6, -3.7914383808*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 
           245.91877556754608`}, {-7.327051537089098, 25.329802712403286`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 25 Feb 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "2", ",", "25", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 2, 25, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792790800}, {
                0, -3792790800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[499, 20], -3792790800}, 
                 Offset[{0, 0}, {0, -3792790800}]}, {{24.95, -3792790800}, 
                 Offset[{0, 0}, {0, -3792790800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[499, 20], -3792790800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[499, 20], -3792790800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[499, 20], -3792790800}]}, {
                 Offset[{-3.2, 0}, {24.95, -3792790800}], 
                 Offset[{1.5, 3.2}, {24.95, -3792790800}], 
                 Offset[{1.5, -3.2}, {24.95, -3792790800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Peru\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[499, 20], -3792790800}], 
                Offset[{0, 0}, {24.95, -3792790800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[499, 20], -3.7929336192*^9}, {
                24.95, -3.7929336192*^9}], 
               NCache[{
                 Rational[158, 5], -3.7926479808*^9}, {
                31.6, -3.7926479808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 245.91877556754605`}, {
           90.71146491515583, 123.36831916464826`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 10 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "10", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 10, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[499, 20], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{24.95, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[499, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[499, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[499, 20], -3793309200}]}, {
                 Offset[{-3.2, 0}, {24.95, -3793309200}], 
                 Offset[{1.5, 3.2}, {24.95, -3793309200}], 
                 Offset[{1.5, -3.2}, {24.95, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Cambodia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[499, 20], -3793309200}], 
                Offset[{0, 0}, {24.95, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[499, 20], -3.7934520192*^9}, {
                24.95, -3.7934520192*^9}], 
               NCache[{
                 Rational[158, 5], -3.7931663808*^9}, {
                31.6, -3.7931663808*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 256.9709648984125}, {
           132.72797196610964`, 165.38482621560203`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793914000}, {
                0, -3793914000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[173, 10], -3793914000}, 
                 Offset[{0, 0}, {0, -3793914000}]}, {{17.3, -3793914000}, 
                 Offset[{0, 0}, {0, -3793914000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[173, 10], -3793914000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[173, 10], -3793914000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[173, 10], -3793914000}]}, {
                 Offset[{-3.2, 0}, {17.3, -3793914000}], 
                 Offset[{1.5, 3.2}, {17.3, -3793914000}], 
                 Offset[{1.5, -3.2}, {17.3, -3793914000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"New Zealand\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[173, 10], -3793914000}], 
                Offset[{0, 0}, {17.3, -3793914000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[173, 10], -3.7940568192*^9}, {
                17.3, -3.7940568192*^9}], 
               NCache[{
                 Rational[479, 20], -3.7937711808*^9}, {
                23.95, -3.7937711808*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 215.96333307602586`}, {
           181.747230192203, 214.4040844416954}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 23 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "23", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 23, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792358800}, {
                0, -3792358800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[173, 10], -3792358800}, 
                 Offset[{0, 0}, {0, -3792358800}]}, {{17.3, -3792358800}, 
                 Offset[{0, 0}, {0, -3792358800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[173, 10], -3792358800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[173, 10], -3792358800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[173, 10], -3792358800}]}, {
                 Offset[{-3.2, 0}, {17.3, -3792358800}], 
                 Offset[{1.5, 3.2}, {17.3, -3792358800}], 
                 Offset[{1.5, -3.2}, {17.3, -3792358800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The State of Palestine\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[173, 10], -3792358800}], 
                Offset[{0, 0}, {17.3, -3792358800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[173, 10], -3.7925016192*^9}, {
                17.3, -3.7925016192*^9}], 
               NCache[{
                 Rational[479, 20], -3.7922159808*^9}, {
                23.95, -3.7922159808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 255.9633330760259}, {
           55.69770903934157, 88.35456328883402}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 5 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "5", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 5, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792877200}, {
                0, -3792877200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[173, 10], -3792877200}, 
                 Offset[{0, 0}, {0, -3792877200}]}, {{17.3, -3792877200}, 
                 Offset[{0, 0}, {0, -3792877200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[173, 10], -3792877200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[173, 10], -3792877200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[173, 10], -3792877200}]}, {
                 Offset[{-3.2, 0}, {17.3, -3792877200}], 
                 Offset[{1.5, 3.2}, {17.3, -3792877200}], 
                 Offset[{1.5, -3.2}, {17.3, -3792877200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Spain\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[173, 10], -3792877200}], 
                Offset[{0, 0}, {17.3, -3792877200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[173, 10], -3.793031444736*^9}, {
                17.3, -3.793031444736*^9}], 
               NCache[{
                 Rational[479, 20], -3.792722955264*^9}, {
                23.95, -3.792722955264*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 191.9111437451594}, {
           97.7142160902954, 130.37107033978782`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 11 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "11", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 11, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3791754000}, {
                0, -3791754000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[173, 10], -3791754000}, 
                 Offset[{0, 0}, {0, -3791754000}]}, {{17.3, -3791754000}, 
                 Offset[{0, 0}, {0, -3791754000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[173, 10], -3791754000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[173, 10], -3791754000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[173, 10], -3791754000}]}, {
                 Offset[{-3.2, 0}, {17.3, -3791754000}], 
                 Offset[{1.5, 3.2}, {17.3, -3791754000}], 
                 Offset[{1.5, -3.2}, {17.3, -3791754000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Iraq\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[173, 10], -3791754000}], 
                Offset[{0, 0}, {17.3, -3791754000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[173, 10], -3.791908244736*^9}, {
                17.3, -3.791908244736*^9}], 
               NCache[{
                 Rational[479, 20], -3.791599755264*^9}, {
                23.95, -3.791599755264*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 191.91114374515936`}, {
           6.678450813190032, 39.335305062682416`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 27 Feb 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "2", ",", "27", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 2, 27, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[173, 10], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{17.3, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[173, 10], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[173, 10], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[173, 10], -3793309200}]}, {
                 Offset[{-3.2, 0}, {17.3, -3793309200}], 
                 Offset[{1.5, 3.2}, {17.3, -3793309200}], 
                 Offset[{1.5, -3.2}, {17.3, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Denmark\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[173, 10], -3793309200}], 
                Offset[{0, 0}, {17.3, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[173, 10], -3.7934520192*^9}, {
                17.3, -3.7934520192*^9}], 
               NCache[{
                 Rational[479, 20], -3.7931663808*^9}, {
                23.95, -3.7931663808*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 197.96333307602586`}, {
           132.72797196610964`, 165.38482621560203`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792618000}, {
                0, -3792618000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[193, 20], -3792618000}, 
                 Offset[{0, 0}, {0, -3792618000}]}, {{9.65, -3792618000}, 
                 Offset[{0, 0}, {0, -3792618000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[193, 20], -3792618000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[193, 20], -3792618000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[193, 20], -3792618000}]}, {
                 Offset[{-3.2, 0}, {9.65, -3792618000}], 
                 Offset[{1.5, 3.2}, {9.65, -3792618000}], 
                 Offset[{1.5, -3.2}, {9.65, -3792618000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Saudi Arabia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[193, 20], -3792618000}], 
                Offset[{0, 0}, {9.65, -3792618000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[193, 20], -3.7927608192*^9}, {
                9.65, -3.7927608192*^9}], 
               NCache[{
                 Rational[163, 10], -3.7924751808*^9}, {
                16.3, -3.7924751808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 160.95570125363923`}, {
           76.70596256481849, 109.36281681431092`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sun 8 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "8", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 8, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793654800}, {
                0, -3793654800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[193, 20], -3793654800}, 
                 Offset[{0, 0}, {0, -3793654800}]}, {{9.65, -3793654800}, 
                 Offset[{0, 0}, {0, -3793654800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[193, 20], -3793654800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[193, 20], -3793654800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[193, 20], -3793654800}]}, {
                 Offset[{-3.2, 0}, {9.65, -3793654800}], 
                 Offset[{1.5, 3.2}, {9.65, -3793654800}], 
                 Offset[{1.5, -3.2}, {9.65, -3793654800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Fiji\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[193, 20], -3793654800}], 
                Offset[{0, 0}, {9.65, -3793654800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[193, 20], -3.793809044736*^9}, {
                9.65, -3.793809044736*^9}], 
               NCache[{
                 Rational[163, 10], -3.793500555264*^9}, {
                16.3, -3.793500555264*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 137.9035119227727}, {
           160.7389766667261, 193.3958309162185}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 20 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "20", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 20, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792099600}, {
                0, -3792099600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[193, 20], -3792099600}, 
                 Offset[{0, 0}, {0, -3792099600}]}, {{9.65, -3792099600}, 
                 Offset[{0, 0}, {0, -3792099600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[193, 20], -3792099600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[193, 20], -3792099600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[193, 20], -3792099600}]}, {
                 Offset[{-3.2, 0}, {9.65, -3792099600}], 
                 Offset[{1.5, 3.2}, {9.65, -3792099600}], 
                 Offset[{1.5, -3.2}, {9.65, -3792099600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Azerbaijan\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[193, 20], -3792099600}], 
                Offset[{0, 0}, {9.65, -3792099600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[193, 20], -3.792253844736*^9}, {
                9.65, -3.792253844736*^9}], 
               NCache[{
                 Rational[163, 10], -3.791945355264*^9}, {
                16.3, -3.791945355264*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 149.9557012536392}, {
           34.68945551386467, 67.34630976335708}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 2 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "2", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 2, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[193, 20], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{9.65, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[193, 20], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[193, 20], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[193, 20], -3792963600}]}, {
                 Offset[{-3.2, 0}, {9.65, -3792963600}], 
                 Offset[{1.5, 3.2}, {9.65, -3792963600}], 
                 Offset[{1.5, -3.2}, {9.65, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The Netherlands\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[193, 20], -3792963600}], 
                Offset[{0, 0}, {9.65, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[193, 20], -3.7931064192*^9}, {
                9.65, -3.7931064192*^9}], 
               NCache[{
                 Rational[163, 10], -3.7928207808*^9}, {
                16.3, -3.7928207808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 176.95570125363923`}, {
           104.71696726543497`, 137.37382151492739`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[193, 20], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{9.65, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[193, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[193, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[193, 20], -3793309200}]}, {
                 Offset[{-3.2, 0}, {9.65, -3793309200}], 
                 Offset[{1.5, 3.2}, {9.65, -3793309200}], 
                 Offset[{1.5, -3.2}, {9.65, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"France\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[193, 20], -3793309200}], 
                Offset[{0, 0}, {9.65, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[193, 20], -3.7934520192*^9}, {
                9.65, -3.7934520192*^9}], 
               NCache[{
                 Rational[163, 10], -3.7931663808*^9}, {
                16.3, -3.7931663808*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 137.9035119227727}, {
           132.72797196610964`, 165.38482621560203`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3791754000}, {
                0, -3791754000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[193, 20], -3791754000}, 
                 Offset[{0, 0}, {0, -3791754000}]}, {{9.65, -3791754000}, 
                 Offset[{0, 0}, {0, -3791754000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[193, 20], -3791754000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[193, 20], -3791754000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[193, 20], -3791754000}]}, {
                 Offset[{-3.2, 0}, {9.65, -3791754000}], 
                 Offset[{1.5, 3.2}, {9.65, -3791754000}], 
                 Offset[{1.5, -3.2}, {9.65, -3791754000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Singapore\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[193, 20], -3791754000}], 
                Offset[{0, 0}, {9.65, -3791754000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[193, 20], -3.791908244736*^9}, {
                9.65, -3.791908244736*^9}], 
               NCache[{
                 Rational[163, 10], -3.791599755264*^9}, {
                16.3, -3.791599755264*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 148.9557012536392}, {
           6.678450813190032, 39.335305062682416`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 27 Feb 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "2", ",", "27", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 2, 27, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3794000400}, {
                0, -3794000400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3794000400}, 
                Offset[{0, 0}, {0, -3794000400}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3794000400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3794000400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3794000400}]}, {
                 Offset[{-3.2, 0}, {2, -3794000400}], 
                 Offset[{1.5, 3.2}, {2, -3794000400}], 
                 Offset[{1.5, -3.2}, {2, -3794000400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Angola\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3794000400}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.794154644736*^9}, 
               NCache[{
                 Rational[173, 20], -3.793846155264*^9}, {
                8.65, -3.793846155264*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 83.89588010038602}, {
           188.74998136734257`, 221.40683561683497`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 24 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "24", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 24, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792704400}, {
                0, -3792704400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3792704400}, 
                Offset[{0, 0}, {0, -3792704400}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3792704400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3792704400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3792704400}]}, {
                 Offset[{-3.2, 0}, {2, -3792704400}], 
                 Offset[{1.5, 3.2}, {2, -3792704400}], 
                 Offset[{1.5, -3.2}, {2, -3792704400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Qatar\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3792704400}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.7928472192*^9}, 
               NCache[{
                 Rational[173, 20], -3.7925615808*^9}, {
                8.65, -3.7925615808*^9}]]}}}},
          
          ImageSizeCache->{{17.1715728752538, 83.89588010038604}, {
           83.70871373995807, 116.36556798945047`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 9 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "9", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 9, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3789075600}, {
                0, -3789075600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3789075600}, 
                Offset[{0, 0}, {0, -3789075600}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3789075600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3789075600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3789075600}]}, {
                 Offset[{-3.2, 0}, {2, -3789075600}], 
                 Offset[{1.5, 3.2}, {2, -3789075600}], 
                 Offset[{1.5, -3.2}, {2, -3789075600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Mongolia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3789075600}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.789229844736*^9}, 
               NCache[{
                 Rational[173, 20], -3.788921355264*^9}, {
                8.65, -3.788921355264*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 
           89.94806943125252}, {-210.40683561671858`, -177.74998136722618`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 27 Jan 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "1", ",", "27", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 1, 27, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792272400}, {
                0, -3792272400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3792272400}, 
                Offset[{0, 0}, {0, -3792272400}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3792272400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3792272400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3792272400}]}, {
                 Offset[{-3.2, 0}, {2, -3792272400}], 
                 Offset[{1.5, 3.2}, {2, -3792272400}], 
                 Offset[{1.5, -3.2}, {2, -3792272400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Italy\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3792272400}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.792426644736*^9}, 
               NCache[{
                 Rational[173, 20], -3.792118155264*^9}, {
                8.65, -3.792118155264*^9}]]}}}},
          
          ImageSizeCache->{{17.1715728752538, 83.89588010038604}, {
           48.69495786420202, 81.35181211369444}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 4 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "4", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 4, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3789594000}, {
                0, -3789594000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3789594000}, 
                Offset[{0, 0}, {0, -3789594000}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3789594000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3789594000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3789594000}]}, {
                 Offset[{-3.2, 0}, {2, -3789594000}], 
                 Offset[{1.5, 3.2}, {2, -3789594000}], 
                 Offset[{1.5, -3.2}, {2, -3789594000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Taiwan\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3789594000}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.7897368192*^9}, 
               NCache[{
                 Rational[173, 20], -3.7894511808*^9}, {
                8.65, -3.7894511808*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 
           83.89588010038602}, {-168.39032856576478`, -135.73347431627238`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sun 2 Feb 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "2", ",", "2", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 2, 2, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3793050000}, 
                Offset[{0, 0}, {0, -3793050000}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3793050000}]}, {
                 Offset[{-3.2, 0}, {2, -3793050000}], 
                 Offset[{1.5, 3.2}, {2, -3793050000}], 
                 Offset[{1.5, -3.2}, {2, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Switzerland\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3793050000}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.7931928192*^9}, 
               NCache[{
                 Rational[173, 20], -3.7929071808*^9}, {
                8.65, -3.7929071808*^9}]]}}}},
          
          ImageSizeCache->{{17.171572875253787`, 100.94806943125255`}, {
           111.71971844063275`, 144.37657269012516`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3791149200}, {
                0, -3791149200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3791149200}, 
                Offset[{0, 0}, {0, -3791149200}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3791149200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3791149200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3791149200}]}, {
                 Offset[{-3.2, 0}, {2, -3791149200}], 
                 Offset[{1.5, 3.2}, {2, -3791149200}], 
                 Offset[{1.5, -3.2}, {2, -3791149200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"North Korea\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3791149200}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.7912920192*^9}, 
               NCache[{
                 Rational[173, 20], -3.7910063808*^9}, {
                8.65, -3.7910063808*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 
           102.94806943125252`}, {-42.34080741290334, -9.683953163410955}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 20 Feb 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "2", ",", "20", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 2, 20, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793482000}, {
                0, -3793482000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3793482000}, 
                Offset[{0, 0}, {0, -3793482000}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3793482000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3793482000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3793482000}]}, {
                 Offset[{-3.2, 0}, {2, -3793482000}], 
                 Offset[{1.5, 3.2}, {2, -3793482000}], 
                 Offset[{1.5, -3.2}, {2, -3793482000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Nepal\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3793482000}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.793636244736*^9}, 
               NCache[{
                 Rational[173, 20], -3.793327755264*^9}, {
                8.65, -3.793327755264*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 83.89588010038602}, {
           146.73347431638877`, 179.39032856588116`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 18 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "18", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 18, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3790630800}, {
                0, -3790630800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3790630800}, 
                Offset[{0, 0}, {0, -3790630800}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3790630800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3790630800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3790630800}]}, {
                 Offset[{-3.2, 0}, {2, -3790630800}], 
                 Offset[{1.5, 3.2}, {2, -3790630800}], 
                 Offset[{1.5, -3.2}, {2, -3790630800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Vietnam\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3790630800}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.7907736192*^9}, 
               NCache[{
                 Rational[173, 20], -3.7904879808*^9}, {
                8.65, -3.7904879808*^9}]]}}}},
          
          ImageSizeCache->{{17.1715728752538, 
           85.94806943125253}, {-84.35731446385715, -51.70046021436475}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 14 Feb 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "2", ",", "14", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 2, 14, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3791754000}, {
                0, -3791754000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3791754000}, 
                Offset[{0, 0}, {0, -3791754000}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3791754000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3791754000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3791754000}]}, {
                 Offset[{-3.2, 0}, {2, -3791754000}], 
                 Offset[{1.5, 3.2}, {2, -3791754000}], 
                 Offset[{1.5, -3.2}, {2, -3791754000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Japan\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3791754000}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.791908244736*^9}, 
               NCache[{
                 Rational[173, 20], -3.791599755264*^9}, {
                8.65, -3.791599755264*^9}]]}}}},
          
          ImageSizeCache->{{17.17157287525381, 83.89588010038602}, {
           6.678450813190032, 39.335305062682416`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 27 Feb 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "2", ",", "27", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 2, 27, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {}}}},
  AspectRatio->0.4,
  Axes->{False, False},
  AxesOrigin->{0, 0},
  Frame->{{True, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Charting`getDateTicks[
       Charting`FindTicks[{-1, 0}, {1, 0}][Automatic], {Automatic}, 
       (Map[DateList, -Reverse[{
           SlotSequence[1]}]]& )[
        SlotSequence[1]], None, 6, {{0.0048, 0}, {0.0024, 0}}, Automatic]& , 
      Automatic}, {None, None}}, {{{{-3.7868256*^9, 
        FormBox["\"Jan\"", TraditionalForm], {0.0048, 0.}}, {-3.789504*^9, 
        FormBox["\"Feb\"", TraditionalForm], {0.0048, 0.}}, {-3.7920096*^9, 
        FormBox["\"Mar\"", TraditionalForm], {0.0048, 0.}}, {-3.794688*^9, 
        FormBox["\"Apr\"", TraditionalForm], {0.0048, 0.}}, {-3.7907136*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.0024, 
        0.}}, {-3.7932192*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.0024, 0.}}}, 
      Automatic}, {None, None}}],
  GridLines->FrontEndValueCache[{{}, (Transpose[{#, 
       Table[
        Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], {
         Length[#]}]}]& )[
      Part[
       Select[
        (Charting`getDateTicks[
         Charting`FindTicks[{-1, 0}, {1, 0}][Automatic], {Automatic}, 
         (Map[DateList, -Reverse[{
             SlotSequence[1]}]]& )[
          SlotSequence[1]], {{None, 
           Scaled[0.05]}, {
           Scaled[0.06], 
           Scaled[0.06]}}, 6, {{0.0048, 0}, {0.0024, 0}}, Automatic]& )[
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
       1]]& }, {{}, {{-3.7868256*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {-3.789504*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {-3.7920096*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {-3.794688*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {-3.79728*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImagePadding->All,
  ImageSize->{Automatic, 500},
  PlotLabel->FormBox[
   "\"Start of closing of educational institutions\"", TraditionalForm],
  PlotRange->{{0, All}, {All, All}},
  PlotRangePadding->{{None, 
     Scaled[0.05]}, {
     Scaled[0.06], 
     Scaled[0.06]}},
  Ticks->{None, {{-3.7868256*^9, 
      FormBox["\"Jan\"", TraditionalForm], {0.0048, 0}}, {-3.789504*^9, 
      FormBox["\"Feb\"", TraditionalForm], {0.0048, 0}}, {-3.7920096*^9, 
      FormBox["\"Mar\"", TraditionalForm], {0.0048, 0}}, {-3.794688*^9, 
      FormBox["\"Apr\"", TraditionalForm], {0.0048, 0}}, {-3.7907136*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0024, 0}}, {-3.7932192*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0024, 0}}}}]], "Output",
 CellChangeTimes->{3.798558619339897*^9, 3.798558712803582*^9, 
  3.7985596469262867`*^9, 3.7985615322242002`*^9, 3.798561690101384*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"10606eb4-3a69-48e4-9675-e326e1033d77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"social", " ", "distancing"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"responseTimelinePlot", "[", 
   RowBox[{
    TemplateBox[{
      RowBox[{"ExternalIdentifier", "[", 
        RowBox[{"\"WikidataID\"", ",", "\"Q30314010\"", ",", 
          RowBox[{"\[LeftAssociation]", 
            RowBox[{
              RowBox[{"\"Label\"", "\[Rule]", "\"social distancing\""}], ",", 
              
              RowBox[{"\"Description\"", "\[Rule]", 
                "\"reduction of human social interaction in an effort to \
prevent the spread of infectious disease\""}]}], "\[RightAssociation]"}]}], 
        "]"}], "\"Wikidata\"", "\"social distancing\"", 
      "http://www.wikidata.org/entity/Q30314010"},
     "ExternalIdentifierURL"], ",", " ", 
    "\"\<Start of closing of social distancing\>\""}], "]"}]}]], "Code",
 CellChangeTimes->{{3.79855859558349*^9, 3.798558618174584*^9}, {
  3.798558703385157*^9, 3.798558705704958*^9}, {3.798558737282316*^9, 
  3.7985587514933157`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"c290ef10-0b0a-4abb-a73d-4f65abefdde9"],

Cell[BoxData[
 GraphicsBox[{
   {AbsolutePointSize[0], Opacity[0], 
    PointBox[NCache[{{0, -3791840400}, {Rational[1, 2], -3794000400}}, {{
       0, -3791840400}, {0.5, -3794000400}}]], 
    PointBox[NCache[{{Rational[-1, 2], -3791840400}, {
       Rational[767, 5], -3794000400}}, {{-0.5, -3791840400}, {
       153.4, -3794000400}}]]}, {}, {}, {}, {
    {PointSize[0], Opacity[0], 
     PointBox[NCache[{{0, -3.79177776*^9}, {
        Rational[767, 5], -3.7940680512*^9}}, {{0, -3.79177776*^9}, {
        153.4, -3.7940680512*^9}}]]}, {
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793136400}, {
                0, -3793136400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[2861, 20], -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}, {{143.05, -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[2861, 20], -3793136400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[2861, 20], -3793136400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[2861, 20], -3793136400}]}, {
                 Offset[{-3.2, 0}, {143.05, -3793136400}], 
                 Offset[{1.5, 3.2}, {143.05, -3793136400}], 
                 Offset[{1.5, -3.2}, {143.05, -3793136400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Monaco\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[2861, 20], -3793136400}], 
                Offset[{0, 0}, {143.05, -3793136400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[2861, 20], -3.79319904*^9}, {
                143.05, -3.79319904*^9}], 
               NCache[{
                 Rational[1529, 10], -3.79307376*^9}, {
                152.9, -3.79307376*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 1177.847168976115}, {
           28.710555823891355`, 61.36741007338378}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sat 14 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "14", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 14, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[2861, 20], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{143.05, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[2861, 20], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[2861, 20], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[2861, 20], -3792963600}]}, {
                 Offset[{-3.2, 0}, {143.05, -3792963600}], 
                 Offset[{1.5, 3.2}, {143.05, -3792963600}], 
                 Offset[{1.5, -3.2}, {143.05, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The Faroe Islands\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[2861, 20], -3792963600}], 
                Offset[{0, 0}, {143.05, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[2861, 20], -3.79302624*^9}, {
                143.05, -3.79302624*^9}], 
               NCache[{
                 Rational[1529, 10], -3.79290096*^9}, {
                152.9, -3.79290096*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 
           1197.3413834480837`}, {-3.291858541640522, 29.364995707851904`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793136400}, {
                0, -3793136400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[661, 5], -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}, {{132.2, -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[661, 5], -3793136400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[661, 5], -3793136400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[661, 5], -3793136400}]}, {
                 Offset[{-3.2, 0}, {132.2, -3793136400}], 
                 Offset[{1.5, 3.2}, {132.2, -3793136400}], 
                 Offset[{1.5, -3.2}, {132.2, -3793136400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Ecuador\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[661, 5], -3793136400}], 
                Offset[{0, 0}, {132.2, -3793136400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[661, 5], -3.79319904*^9}, {132.2, -3.79319904*^9}], 
               NCache[{
                 Rational[2841, 20], -3.79307376*^9}, {
                142.05, -3.79307376*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 1096.8788671508216`}, {
           28.710555823891355`, 61.36741007338378}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sat 14 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "14", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 14, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[661, 5], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{132.2, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[661, 5], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[661, 5], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[661, 5], -3792963600}]}, {
                 Offset[{-3.2, 0}, {132.2, -3792963600}], 
                 Offset[{1.5, 3.2}, {132.2, -3792963600}], 
                 Offset[{1.5, -3.2}, {132.2, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Poland\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[661, 5], -3792963600}], 
                Offset[{0, 0}, {132.2, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[661, 5], -3.79302624*^9}, {132.2, -3.79302624*^9}], 
               NCache[{
                 Rational[2841, 20], -3.79290096*^9}, {
                142.05, -3.79290096*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 
           1096.8788671508216`}, {-3.291858541640522, 29.364995707851904`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[2427, 20], -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}, {{121.35, -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[2427, 20], -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[2427, 20], -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[2427, 20], -3793050000}]}, {
                 Offset[{-3.2, 0}, {121.35, -3793050000}], 
                 Offset[{1.5, 3.2}, {121.35, -3793050000}], 
                 Offset[{1.5, -3.2}, {121.35, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Kuwait\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[2427, 20], -3793050000}], 
                Offset[{0, 0}, {121.35, -3793050000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[2427, 20], -3.79311264*^9}, {
                121.35, -3.79311264*^9}], 
               NCache[{
                 Rational[656, 5], -3.79298736*^9}, {
                131.2, -3.79298736*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 1015.9105653255282`}, {
           12.709348641125416`, 45.36620289061784}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[221, 2], -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}, {{110.5, -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[221, 2], -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[221, 2], -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[221, 2], -3793050000}]}, {
                 Offset[{-3.2, 0}, {110.5, -3793050000}], 
                 Offset[{1.5, 3.2}, {110.5, -3793050000}], 
                 Offset[{1.5, -3.2}, {110.5, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Estonia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[221, 2], -3793050000}], 
                Offset[{0, 0}, {110.5, -3793050000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[221, 2], -3.79311264*^9}, {110.5, -3.79311264*^9}], 
               NCache[{
                 Rational[2407, 20], -3.79298736*^9}, {
                120.35, -3.79298736*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 934.942263500235}, {
           12.709348641125416`, 45.36620289061784}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1993, 20], -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}, {{99.65, -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1993, 20], -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1993, 20], -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1993, 20], -3793050000}]}, {
                 Offset[{-3.2, 0}, {99.65, -3793050000}], 
                 Offset[{1.5, 3.2}, {99.65, -3793050000}], 
                 Offset[{1.5, -3.2}, {99.65, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Algeria\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1993, 20], -3793050000}], 
                Offset[{0, 0}, {99.65, -3793050000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1993, 20], -3.7931176512*^9}, {
                99.65, -3.7931176512*^9}], 
               NCache[{
                 Rational[219, 2], -3.7929823488*^9}, {
                109.5, -3.7929823488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 853.9739616749416}, {
           12.709348641125416`, 45.36620289061784}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793395600}, {
                0, -3793395600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[444, 5], -3793395600}, 
                 Offset[{0, 0}, {0, -3793395600}]}, {{88.8, -3793395600}, 
                 Offset[{0, 0}, {0, -3793395600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[444, 5], -3793395600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[444, 5], -3793395600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[444, 5], -3793395600}]}, {
                 Offset[{-3.2, 0}, {88.8, -3793395600}], 
                 Offset[{1.5, 3.2}, {88.8, -3793395600}], 
                 Offset[{1.5, -3.2}, {88.8, -3793395600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Liechtenstein\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[444, 5], -3793395600}], 
                Offset[{0, 0}, {88.8, -3793395600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[444, 5], -3.79345824*^9}, {88.8, -3.79345824*^9}], 
               NCache[{
                 Rational[1973, 20], -3.79333296*^9}, {
                98.65, -3.79333296*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 773.0056598496483}, {
           76.71417737207275, 109.37103162156518`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 17 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "17", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 17, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[444, 5], -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}, {{88.8, -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[444, 5], -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[444, 5], -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[444, 5], -3793050000}]}, {
                 Offset[{-3.2, 0}, {88.8, -3793050000}], 
                 Offset[{1.5, 3.2}, {88.8, -3793050000}], 
                 Offset[{1.5, -3.2}, {88.8, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Chile\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[444, 5], -3793050000}], 
                Offset[{0, 0}, {88.8, -3793050000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[444, 5], -3.79311264*^9}, {88.8, -3.79311264*^9}], 
               NCache[{
                 Rational[1973, 20], -3.79298736*^9}, {
                98.65, -3.79298736*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 773.0056598496483}, {
           12.709348641125416`, 45.36620289061784}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793222800}, {
                0, -3793222800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[444, 5], -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}, {{88.8, -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[444, 5], -3793222800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[444, 5], -3793222800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[444, 5], -3793222800}]}, {
                 Offset[{-3.2, 0}, {88.8, -3793222800}], 
                 Offset[{1.5, 3.2}, {88.8, -3793222800}], 
                 Offset[{1.5, -3.2}, {88.8, -3793222800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The Republic of Ireland\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[444, 5], -3793222800}], 
                Offset[{0, 0}, {88.8, -3793222800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[444, 5], -3.7932904512*^9}, {
                88.8, -3.7932904512*^9}], 
               NCache[{
                 Rational[1973, 20], -3.7931551488*^9}, {
                98.65, -3.7931551488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 816.499874321617}, {
           44.711763006657286`, 77.36861725614972}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sun 15 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "15", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 15, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793482000}, {
                0, -3793482000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1559, 20], -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}, {{77.95, -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1559, 20], -3793482000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1559, 20], -3793482000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1559, 20], -3793482000}]}, {
                 Offset[{-3.2, 0}, {77.95, -3793482000}], 
                 Offset[{1.5, 3.2}, {77.95, -3793482000}], 
                 Offset[{1.5, -3.2}, {77.95, -3793482000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Mali\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1559, 20], -3793482000}], 
                Offset[{0, 0}, {77.95, -3793482000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1559, 20], -3.79354464*^9}, {
                77.95, -3.79354464*^9}], 
               NCache[{
                 Rational[439, 5], -3.79341936*^9}, {
                87.8, -3.79341936*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 692.037358024355}, {
           92.71538455483869, 125.37223880433112`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 18 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "18", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 18, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793136400}, {
                0, -3793136400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1559, 20], -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}, {{77.95, -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1559, 20], -3793136400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1559, 20], -3793136400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1559, 20], -3793136400}]}, {
                 Offset[{-3.2, 0}, {77.95, -3793136400}], 
                 Offset[{1.5, 3.2}, {77.95, -3793136400}], 
                 Offset[{1.5, -3.2}, {77.95, -3793136400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Saudi Arabia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1559, 20], -3793136400}], 
                Offset[{0, 0}, {77.95, -3793136400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1559, 20], -3.79319904*^9}, {
                77.95, -3.79319904*^9}], 
               NCache[{
                 Rational[439, 5], -3.79307376*^9}, {
                87.8, -3.79307376*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 692.037358024355}, {
           28.710555823891355`, 61.36741007338378}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sat 14 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "14", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 14, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792877200}, {
                0, -3792877200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1559, 20], -3792877200}, 
                 Offset[{0, 0}, {0, -3792877200}]}, {{77.95, -3792877200}, 
                 Offset[{0, 0}, {0, -3792877200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[1559, 20], -3792877200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[1559, 20], -3792877200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[1559, 20], -3792877200}]}, {
                 Offset[{-3.2, 0}, {77.95, -3792877200}], 
                 Offset[{1.5, 3.2}, {77.95, -3792877200}], 
                 Offset[{1.5, -3.2}, {77.95, -3792877200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Hungary\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1559, 20], -3792877200}], 
                Offset[{0, 0}, {77.95, -3792877200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[1559, 20], -3.7929448512*^9}, {
                77.95, -3.7929448512*^9}], 
               NCache[{
                 Rational[439, 5], -3.7928095488*^9}, {
                87.8, -3.7928095488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 
           692.037358024355}, {-19.29306572440646, 13.363788525085965`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 11 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "11", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 11, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793482000}, {
                0, -3793482000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[671, 10], -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}, {{67.1, -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[671, 10], -3793482000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[671, 10], -3793482000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[671, 10], -3793482000}]}, {
                 Offset[{-3.2, 0}, {67.1, -3793482000}], 
                 Offset[{1.5, 3.2}, {67.1, -3793482000}], 
                 Offset[{1.5, -3.2}, {67.1, -3793482000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Uganda\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[671, 10], -3793482000}], 
                Offset[{0, 0}, {67.1, -3793482000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[671, 10], -3.7935496512*^9}, {
                67.1, -3.7935496512*^9}], 
               NCache[{
                 Rational[1539, 20], -3.7934143488*^9}, {
                76.95, -3.7934143488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 611.0690561990616}, {
           92.71538455483869, 125.37223880433112`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 18 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "18", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 18, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[671, 10], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{67.1, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[671, 10], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[671, 10], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[671, 10], -3792963600}]}, {
                 Offset[{-3.2, 0}, {67.1, -3792963600}], 
                 Offset[{1.5, 3.2}, {67.1, -3792963600}], 
                 Offset[{1.5, -3.2}, {67.1, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The Czech Republic\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[671, 10], -3792963600}], 
                Offset[{0, 0}, {67.1, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[671, 10], -3.7930312512*^9}, {
                67.1, -3.7930312512*^9}], 
               NCache[{
                 Rational[1539, 20], -3.7928959488*^9}, {
                76.95, -3.7928959488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 
           639.5632706710303}, {-3.291858541640522, 29.364995707851904`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793136400}, {
                0, -3793136400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[671, 10], -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}, {{67.1, -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[671, 10], -3793136400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[671, 10], -3793136400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[671, 10], -3793136400}]}, {
                 Offset[{-3.2, 0}, {67.1, -3793136400}], 
                 Offset[{1.5, 3.2}, {67.1, -3793136400}], 
                 Offset[{1.5, -3.2}, {67.1, -3793136400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Syria\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[671, 10], -3793136400}], 
                Offset[{0, 0}, {67.1, -3793136400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[671, 10], -3.7932040512*^9}, {
                67.1, -3.7932040512*^9}], 
               NCache[{
                 Rational[1539, 20], -3.7930687488*^9}, {
                76.95, -3.7930687488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 611.0690561990616}, {
           28.710555823891355`, 61.36741007338378}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sat 14 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "14", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 14, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[225, 4], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{56.25, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[225, 4], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[225, 4], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[225, 4], -3793309200}]}, {
                 Offset[{-3.2, 0}, {56.25, -3793309200}], 
                 Offset[{1.5, 3.2}, {56.25, -3793309200}], 
                 Offset[{1.5, -3.2}, {56.25, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"New Zealand\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[225, 4], -3793309200}], 
                Offset[{0, 0}, {56.25, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[225, 4], -3.79337184*^9}, {56.25, -3.79337184*^9}], 
               NCache[{
                 Rational[661, 10], -3.79324656*^9}, {
                66.1, -3.79324656*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 530.1007543737682}, {
           60.71297018930681, 93.36982443879924}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793914000}, {
                0, -3793914000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[225, 4], -3793914000}, 
                 Offset[{0, 0}, {0, -3793914000}]}, {{56.25, -3793914000}, 
                 Offset[{0, 0}, {0, -3793914000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[225, 4], -3793914000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[225, 4], -3793914000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[225, 4], -3793914000}]}, {
                 Offset[{-3.2, 0}, {56.25, -3793914000}], 
                 Offset[{1.5, 3.2}, {56.25, -3793914000}], 
                 Offset[{1.5, -3.2}, {56.25, -3793914000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Zimbabwe\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[225, 4], -3793914000}], 
                Offset[{0, 0}, {56.25, -3793914000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[225, 4], -3.79397664*^9}, {56.25, -3.79397664*^9}], 
               NCache[{
                 Rational[661, 10], -3.79385136*^9}, {
                66.1, -3.79385136*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 530.1007543737682}, {
           172.72142046855194`, 205.3782747180444}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 23 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "23", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 23, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793741200}, {
                0, -3793741200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[225, 4], -3793741200}, 
                 Offset[{0, 0}, {0, -3793741200}]}, {{56.25, -3793741200}, 
                 Offset[{0, 0}, {0, -3793741200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[225, 4], -3793741200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[225, 4], -3793741200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[225, 4], -3793741200}]}, {
                 Offset[{-3.2, 0}, {56.25, -3793741200}], 
                 Offset[{1.5, 3.2}, {56.25, -3793741200}], 
                 Offset[{1.5, -3.2}, {56.25, -3793741200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Egypt\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[225, 4], -3793741200}], 
                Offset[{0, 0}, {56.25, -3793741200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[225, 4], -3.7938088512*^9}, {
                56.25, -3.7938088512*^9}], 
               NCache[{
                 Rational[661, 10], -3.7936735488*^9}, {
                66.1, -3.7936735488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 530.1007543737682}, {
           140.71900610302006`, 173.37586035251252`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sat 21 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "21", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 21, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793482000}, {
                0, -3793482000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[225, 4], -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}, {{56.25, -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[225, 4], -3793482000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[225, 4], -3793482000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[225, 4], -3793482000}]}, {
                 Offset[{-3.2, 0}, {56.25, -3793482000}], 
                 Offset[{1.5, 3.2}, {56.25, -3793482000}], 
                 Offset[{1.5, -3.2}, {56.25, -3793482000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Greece\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[225, 4], -3793482000}], 
                Offset[{0, 0}, {56.25, -3793482000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[225, 4], -3.79354464*^9}, {56.25, -3.79354464*^9}], 
               NCache[{
                 Rational[661, 10], -3.79341936*^9}, {
                66.1, -3.79341936*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 530.1007543737682}, {
           92.71538455483869, 125.37223880433112`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 18 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "18", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 18, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793136400}, {
                0, -3793136400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[225, 4], -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}, {{56.25, -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[225, 4], -3793136400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[225, 4], -3793136400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[225, 4], -3793136400}]}, {
                 Offset[{-3.2, 0}, {56.25, -3793136400}], 
                 Offset[{1.5, 3.2}, {56.25, -3793136400}], 
                 Offset[{1.5, -3.2}, {56.25, -3793136400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Jordan\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[225, 4], -3793136400}], 
                Offset[{0, 0}, {56.25, -3793136400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[225, 4], -3.79319904*^9}, {56.25, -3.79319904*^9}], 
               NCache[{
                 Rational[661, 10], -3.79307376*^9}, {
                66.1, -3.79307376*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 530.1007543737682}, {
           28.710555823891355`, 61.36741007338378}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sat 14 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "14", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 14, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[225, 4], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{56.25, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[225, 4], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[225, 4], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[225, 4], -3792963600}]}, {
                 Offset[{-3.2, 0}, {56.25, -3792963600}], 
                 Offset[{1.5, 3.2}, {56.25, -3792963600}], 
                 Offset[{1.5, -3.2}, {56.25, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Colombia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[225, 4], -3792963600}], 
                Offset[{0, 0}, {56.25, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[225, 4], -3.79302624*^9}, {56.25, -3.79302624*^9}], 
               NCache[{
                 Rational[661, 10], -3.79290096*^9}, {
                66.1, -3.79290096*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 
           530.1007543737682}, {-3.291858541640522, 29.364995707851904`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793827600}, {
                0, -3793827600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[227, 5], -3793827600}, 
                 Offset[{0, 0}, {0, -3793827600}]}, {{45.4, -3793827600}, 
                 Offset[{0, 0}, {0, -3793827600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[227, 5], -3793827600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[227, 5], -3793827600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[227, 5], -3793827600}]}, {
                 Offset[{-3.2, 0}, {45.4, -3793827600}], 
                 Offset[{1.5, 3.2}, {45.4, -3793827600}], 
                 Offset[{1.5, -3.2}, {45.4, -3793827600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Bahrain\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[227, 5], -3793827600}], 
                Offset[{0, 0}, {45.4, -3793827600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[227, 5], -3.79389024*^9}, {45.4, -3.79389024*^9}], 
               NCache[{
                 Rational[221, 4], -3.79376496*^9}, {
                55.25, -3.79376496*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 449.13245254847493`}, {
           156.720213285786, 189.37706753527846`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sun 22 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "22", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 22, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792877200}, {
                0, -3792877200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[227, 5], -3792877200}, 
                 Offset[{0, 0}, {0, -3792877200}]}, {{45.4, -3792877200}, 
                 Offset[{0, 0}, {0, -3792877200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[227, 5], -3792877200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[227, 5], -3792877200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[227, 5], -3792877200}]}, {
                 Offset[{-3.2, 0}, {45.4, -3792877200}], 
                 Offset[{1.5, 3.2}, {45.4, -3792877200}], 
                 Offset[{1.5, -3.2}, {45.4, -3792877200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Israel\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[227, 5], -3792877200}], 
                Offset[{0, 0}, {45.4, -3792877200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[227, 5], -3.79293984*^9}, {45.4, -3.79293984*^9}], 
               NCache[{
                 Rational[221, 4], -3.79281456*^9}, {
                55.25, -3.79281456*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 
           449.13245254847493`}, {-19.29306572440646, 13.363788525085965`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 11 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "11", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 11, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793395600}, {
                0, -3793395600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[227, 5], -3793395600}, 
                 Offset[{0, 0}, {0, -3793395600}]}, {{45.4, -3793395600}, 
                 Offset[{0, 0}, {0, -3793395600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[227, 5], -3793395600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[227, 5], -3793395600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[227, 5], -3793395600}]}, {
                 Offset[{-3.2, 0}, {45.4, -3793395600}], 
                 Offset[{1.5, 3.2}, {45.4, -3793395600}], 
                 Offset[{1.5, -3.2}, {45.4, -3793395600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Zambia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[227, 5], -3793395600}], 
                Offset[{0, 0}, {45.4, -3793395600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[227, 5], -3.79345824*^9}, {45.4, -3.79345824*^9}], 
               NCache[{
                 Rational[221, 4], -3.79333296*^9}, {
                55.25, -3.79333296*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 449.13245254847493`}, {
           76.71417737207275, 109.37103162156518`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 17 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "17", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 17, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793222800}, {
                0, -3793222800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[227, 5], -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}, {{45.4, -3793222800}, 
                 Offset[{0, 0}, {0, -3793222800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[227, 5], -3793222800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[227, 5], -3793222800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[227, 5], -3793222800}]}, {
                 Offset[{-3.2, 0}, {45.4, -3793222800}], 
                 Offset[{1.5, 3.2}, {45.4, -3793222800}], 
                 Offset[{1.5, -3.2}, {45.4, -3793222800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Ghana\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[227, 5], -3793222800}], 
                Offset[{0, 0}, {45.4, -3793222800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[227, 5], -3.79328544*^9}, {45.4, -3.79328544*^9}], 
               NCache[{
                 Rational[221, 4], -3.79316016*^9}, {
                55.25, -3.79316016*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 449.13245254847493`}, {
           44.711763006657286`, 77.36861725614972}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sun 15 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "15", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 15, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[227, 5], -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}, {{45.4, -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[227, 5], -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[227, 5], -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[227, 5], -3793050000}]}, {
                 Offset[{-3.2, 0}, {45.4, -3793050000}], 
                 Offset[{1.5, 3.2}, {45.4, -3793050000}], 
                 Offset[{1.5, -3.2}, {45.4, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Andorra\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[227, 5], -3793050000}], 
                Offset[{0, 0}, {45.4, -3793050000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[227, 5], -3.79311264*^9}, {45.4, -3.79311264*^9}], 
               NCache[{
                 Rational[221, 4], -3.79298736*^9}, {
                55.25, -3.79298736*^9}]]}}}},
          ImageSizeCache->{{30.171572875253787`, 449.13245254847493`}, {
           12.709348641125416`, 45.36620289061784}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793654800}, {
                0, -3793654800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[691, 20], -3793654800}, 
                 Offset[{0, 0}, {0, -3793654800}]}, {{34.55, -3793654800}, 
                 Offset[{0, 0}, {0, -3793654800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[691, 20], -3793654800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[691, 20], -3793654800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[691, 20], -3793654800}]}, {
                 Offset[{-3.2, 0}, {34.55, -3793654800}], 
                 Offset[{1.5, 3.2}, {34.55, -3793654800}], 
                 Offset[{1.5, -3.2}, {34.55, -3793654800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Mauritius\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[691, 20], -3793654800}], 
                Offset[{0, 0}, {34.55, -3793654800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[691, 20], -3.79371744*^9}, {34.55, -3.79371744*^9}], 
               NCache[{
                 Rational[222, 5], -3.79359216*^9}, {
                44.4, -3.79359216*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 368.1641507231816}, {
           124.71779892037057`, 157.374653169863}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 20 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "20", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 20, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793482000}, {
                0, -3793482000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[691, 20], -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}, {{34.55, -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[691, 20], -3793482000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[691, 20], -3793482000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[691, 20], -3793482000}]}, {
                 Offset[{-3.2, 0}, {34.55, -3793482000}], 
                 Offset[{1.5, 3.2}, {34.55, -3793482000}], 
                 Offset[{1.5, -3.2}, {34.55, -3793482000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The Gambia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[691, 20], -3793482000}], 
                Offset[{0, 0}, {34.55, -3793482000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[691, 20], -3.79354464*^9}, {34.55, -3.79354464*^9}], 
               NCache[{
                 Rational[222, 5], -3.79341936*^9}, {
                44.4, -3.79341936*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 368.1641507231816}, {
           92.71538455483869, 125.37223880433112`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 18 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "18", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 18, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[691, 20], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{34.55, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[691, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[691, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[691, 20], -3793309200}]}, {
                 Offset[{-3.2, 0}, {34.55, -3793309200}], 
                 Offset[{1.5, 3.2}, {34.55, -3793309200}], 
                 Offset[{1.5, -3.2}, {34.55, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Jamaica\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[691, 20], -3793309200}], 
                Offset[{0, 0}, {34.55, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[691, 20], -3.79337184*^9}, {34.55, -3.79337184*^9}], 
               NCache[{
                 Rational[222, 5], -3.79324656*^9}, {
                44.4, -3.79324656*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 368.1641507231816}, {
           60.71297018930681, 93.36982443879924}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793136400}, {
                0, -3793136400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[691, 20], -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}, {{34.55, -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[691, 20], -3793136400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[691, 20], -3793136400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[691, 20], -3793136400}]}, {
                 Offset[{-3.2, 0}, {34.55, -3793136400}], 
                 Offset[{1.5, 3.2}, {34.55, -3793136400}], 
                 Offset[{1.5, -3.2}, {34.55, -3793136400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Uruguay\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[691, 20], -3793136400}], 
                Offset[{0, 0}, {34.55, -3793136400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[691, 20], -3.7932040512*^9}, {
                34.55, -3.7932040512*^9}], 
               NCache[{
                 Rational[222, 5], -3.7930687488*^9}, {
                44.4, -3.7930687488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 368.1641507231816}, {
           28.710555823891355`, 61.36741007338378}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sat 14 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "14", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 14, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793914000}, {
                0, -3793914000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[691, 20], -3793914000}, 
                 Offset[{0, 0}, {0, -3793914000}]}, {{34.55, -3793914000}, 
                 Offset[{0, 0}, {0, -3793914000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[691, 20], -3793914000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[691, 20], -3793914000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[691, 20], -3793914000}]}, {
                 Offset[{-3.2, 0}, {34.55, -3793914000}], 
                 Offset[{1.5, 3.2}, {34.55, -3793914000}], 
                 Offset[{1.5, -3.2}, {34.55, -3793914000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Qatar\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[691, 20], -3793914000}], 
                Offset[{0, 0}, {34.55, -3793914000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[691, 20], -3.79397664*^9}, {34.55, -3.79397664*^9}], 
               NCache[{
                 Rational[222, 5], -3.79385136*^9}, {
                44.4, -3.79385136*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 368.1641507231816}, {
           172.72142046855194`, 205.3782747180444}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 23 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "23", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 23, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[691, 20], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{34.55, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[691, 20], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[691, 20], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[691, 20], -3792963600}]}, {
                 Offset[{-3.2, 0}, {34.55, -3792963600}], 
                 Offset[{1.5, 3.2}, {34.55, -3792963600}], 
                 Offset[{1.5, -3.2}, {34.55, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Norway\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[691, 20], -3792963600}], 
                Offset[{0, 0}, {34.55, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[691, 20], -3.7930312512*^9}, {
                34.55, -3.7930312512*^9}], 
               NCache[{
                 Rational[222, 5], -3.7928959488*^9}, {
                44.4, -3.7928959488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 
           368.1641507231816}, {-3.291858541640522, 29.364995707851904`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3794000400}, {
                0, -3794000400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[237, 10], -3794000400}, 
                 Offset[{0, 0}, {0, -3794000400}]}, {{23.7, -3794000400}, 
                 Offset[{0, 0}, {0, -3794000400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[237, 10], -3794000400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[237, 10], -3794000400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[237, 10], -3794000400}]}, {
                 Offset[{-3.2, 0}, {23.7, -3794000400}], 
                 Offset[{1.5, 3.2}, {23.7, -3794000400}], 
                 Offset[{1.5, -3.2}, {23.7, -3794000400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Iceland\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[237, 10], -3794000400}], 
                Offset[{0, 0}, {23.7, -3794000400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[237, 10], -3.79406304*^9}, {23.7, -3.79406304*^9}], 
               NCache[{
                 Rational[671, 20], -3.79393776*^9}, {
                33.55, -3.79393776*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 287.1958488978882}, {
           188.72262765131788`, 221.37948190081033`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 24 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "24", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 24, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793568400}, {
                0, -3793568400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[237, 10], -3793568400}, 
                 Offset[{0, 0}, {0, -3793568400}]}, {{23.7, -3793568400}, 
                 Offset[{0, 0}, {0, -3793568400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[237, 10], -3793568400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[237, 10], -3793568400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[237, 10], -3793568400}]}, {
                 Offset[{-3.2, 0}, {23.7, -3793568400}], 
                 Offset[{1.5, 3.2}, {23.7, -3793568400}], 
                 Offset[{1.5, -3.2}, {23.7, -3793568400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Somalia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[237, 10], -3793568400}], 
                Offset[{0, 0}, {23.7, -3793568400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[237, 10], -3.79363104*^9}, {23.7, -3.79363104*^9}], 
               NCache[{
                 Rational[671, 20], -3.79350576*^9}, {
                33.55, -3.79350576*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 287.19584889788825`}, {
           108.71659173760463`, 141.37344598709706`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 19 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "19", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 19, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[237, 10], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{23.7, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[237, 10], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[237, 10], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[237, 10], -3793309200}]}, {
                 Offset[{-3.2, 0}, {23.7, -3793309200}], 
                 Offset[{1.5, 3.2}, {23.7, -3793309200}], 
                 Offset[{1.5, -3.2}, {23.7, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Ethiopia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[237, 10], -3793309200}], 
                Offset[{0, 0}, {23.7, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[237, 10], -3.7933768512*^9}, {
                23.7, -3.7933768512*^9}], 
               NCache[{
                 Rational[671, 20], -3.7932415488*^9}, {
                33.55, -3.7932415488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 287.19584889788825`}, {
           60.71297018930681, 93.36982443879924}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793136400}, {
                0, -3793136400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[237, 10], -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}, {{23.7, -3793136400}, 
                 Offset[{0, 0}, {0, -3793136400}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[237, 10], -3793136400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[237, 10], -3793136400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[237, 10], -3793136400}]}, {
                 Offset[{-3.2, 0}, {23.7, -3793136400}], 
                 Offset[{1.5, 3.2}, {23.7, -3793136400}], 
                 Offset[{1.5, -3.2}, {23.7, -3793136400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Azerbaijan\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[237, 10], -3793136400}], 
                Offset[{0, 0}, {23.7, -3793136400}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[237, 10], -3.7932040512*^9}, {
                23.7, -3.7932040512*^9}], 
               NCache[{
                 Rational[671, 20], -3.7930687488*^9}, {
                33.55, -3.7930687488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 287.19584889788825`}, {
           28.710555823891355`, 61.36741007338378}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sat 14 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "14", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 14, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793827600}, {
                0, -3793827600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[237, 10], -3793827600}, 
                 Offset[{0, 0}, {0, -3793827600}]}, {{23.7, -3793827600}, 
                 Offset[{0, 0}, {0, -3793827600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[237, 10], -3793827600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[237, 10], -3793827600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[237, 10], -3793827600}]}, {
                 Offset[{-3.2, 0}, {23.7, -3793827600}], 
                 Offset[{1.5, 3.2}, {23.7, -3793827600}], 
                 Offset[{1.5, -3.2}, {23.7, -3793827600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The Democratic Republic of the Congo\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[237, 10], -3793827600}], 
                Offset[{0, 0}, {23.7, -3793827600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[237, 10], -3.7938952512*^9}, {
                23.7, -3.7938952512*^9}], 
               NCache[{
                 Rational[671, 20], -3.7937599488*^9}, {
                33.55, -3.7937599488*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 399.69006336985694`}, {
           156.720213285786, 189.37706753527846`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sun 22 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "22", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 22, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792963600}, {
                0, -3792963600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[237, 10], -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}, {{23.7, -3792963600}, 
                 Offset[{0, 0}, {0, -3792963600}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[237, 10], -3792963600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[237, 10], -3792963600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[237, 10], -3792963600}]}, {
                 Offset[{-3.2, 0}, {23.7, -3792963600}], 
                 Offset[{1.5, 3.2}, {23.7, -3792963600}], 
                 Offset[{1.5, -3.2}, {23.7, -3792963600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The Netherlands\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[237, 10], -3792963600}], 
                Offset[{0, 0}, {23.7, -3792963600}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[237, 10], -3.79302624*^9}, {23.7, -3.79302624*^9}], 
               NCache[{
                 Rational[671, 20], -3.79290096*^9}, {
                33.55, -3.79290096*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 
           299.69006336985694`}, {-3.291858541640522, 29.364995707851904`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Thu 12 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "12", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 12, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793654800}, {
                0, -3793654800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[257, 20], -3793654800}, 
                 Offset[{0, 0}, {0, -3793654800}]}, {{12.85, -3793654800}, 
                 Offset[{0, 0}, {0, -3793654800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[257, 20], -3793654800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[257, 20], -3793654800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[257, 20], -3793654800}]}, {
                 Offset[{-3.2, 0}, {12.85, -3793654800}], 
                 Offset[{1.5, 3.2}, {12.85, -3793654800}], 
                 Offset[{1.5, -3.2}, {12.85, -3793654800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The Bahamas\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[257, 20], -3793654800}], 
                Offset[{0, 0}, {12.85, -3793654800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[257, 20], -3.79371744*^9}, {12.85, -3.79371744*^9}], 
               NCache[{
                 Rational[227, 10], -3.79359216*^9}, {
                22.7, -3.79359216*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 206.72176154456366`}, {
           124.71779892037058`, 157.374653169863}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 20 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "20", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 20, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792790800}, {
                0, -3792790800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[257, 20], -3792790800}, 
                 Offset[{0, 0}, {0, -3792790800}]}, {{12.85, -3792790800}, 
                 Offset[{0, 0}, {0, -3792790800}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[257, 20], -3792790800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[257, 20], -3792790800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[257, 20], -3792790800}]}, {
                 Offset[{-3.2, 0}, {12.85, -3792790800}], 
                 Offset[{1.5, 3.2}, {12.85, -3792790800}], 
                 Offset[{1.5, -3.2}, {12.85, -3792790800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Paraguay\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[257, 20], -3792790800}], 
                Offset[{0, 0}, {12.85, -3792790800}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[257, 20], -3.7928584512*^9}, {
                12.85, -3.7928584512*^9}], 
               NCache[{
                 Rational[227, 10], -3.7927231488*^9}, {
                22.7, -3.7927231488*^9}]]}}}},
          
          ImageSizeCache->{{30.17157287525381, 
           206.22754707259494`}, {-35.29427290705596, -2.637418657563579}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 10 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "10", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 10, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[257, 20], -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}, {{12.85, -3793309200}, 
                 Offset[{0, 0}, {0, -3793309200}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[257, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[257, 20], -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[257, 20], -3793309200}]}, {
                 Offset[{-3.2, 0}, {12.85, -3793309200}], 
                 Offset[{1.5, 3.2}, {12.85, -3793309200}], 
                 Offset[{1.5, -3.2}, {12.85, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Venezuela\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[257, 20], -3793309200}], 
                Offset[{0, 0}, {12.85, -3793309200}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[257, 20], -3.79337184*^9}, {12.85, -3.79337184*^9}], 
               NCache[{
                 Rational[227, 10], -3.79324656*^9}, {
                22.7, -3.79324656*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 206.22754707259497`}, {
           60.712970189306795`, 93.36982443879924}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793914000}, {
                0, -3793914000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[257, 20], -3793914000}, 
                 Offset[{0, 0}, {0, -3793914000}]}, {{12.85, -3793914000}, 
                 Offset[{0, 0}, {0, -3793914000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[257, 20], -3793914000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[257, 20], -3793914000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[257, 20], -3793914000}]}, {
                 Offset[{-3.2, 0}, {12.85, -3793914000}], 
                 Offset[{1.5, 3.2}, {12.85, -3793914000}], 
                 Offset[{1.5, -3.2}, {12.85, -3793914000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"The United Arab Emirates\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[257, 20], -3793914000}], 
                Offset[{0, 0}, {12.85, -3793914000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[257, 20], -3.79397664*^9}, {12.85, -3.79397664*^9}], 
               NCache[{
                 Rational[227, 10], -3.79385136*^9}, {
                22.7, -3.79385136*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 259.7217615445636}, {
           172.72142046855194`, 205.3782747180444}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 23 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "23", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 23, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793482000}, {
                0, -3793482000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[257, 20], -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}, {{12.85, -3793482000}, 
                 Offset[{0, 0}, {0, -3793482000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[257, 20], -3793482000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[257, 20], -3793482000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[257, 20], -3793482000}]}, {
                 Offset[{-3.2, 0}, {12.85, -3793482000}], 
                 Offset[{1.5, 3.2}, {12.85, -3793482000}], 
                 Offset[{1.5, -3.2}, {12.85, -3793482000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Denmark\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[257, 20], -3793482000}], 
                Offset[{0, 0}, {12.85, -3793482000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[257, 20], -3.79354464*^9}, {12.85, -3.79354464*^9}], 
               NCache[{
                 Rational[227, 10], -3.79341936*^9}, {
                22.7, -3.79341936*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 206.22754707259492`}, {
           92.71538455483869, 125.37223880433112`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 18 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "18", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 18, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[257, 20], -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}, {{12.85, -3793050000}, 
                 Offset[{0, 0}, {0, -3793050000}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {
                   Rational[257, 20], -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {
                   Rational[257, 20], -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {
                   Rational[257, 20], -3793050000}]}, {
                 Offset[{-3.2, 0}, {12.85, -3793050000}], 
                 Offset[{1.5, 3.2}, {12.85, -3793050000}], 
                 Offset[{1.5, -3.2}, {12.85, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"France\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[257, 20], -3793050000}], 
                Offset[{0, 0}, {12.85, -3793050000}]], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{
                 Rational[257, 20], -3.79311264*^9}, {12.85, -3.79311264*^9}], 
               NCache[{
                 Rational[227, 10], -3.79298736*^9}, {
                22.7, -3.79298736*^9}]]}}}},
          
          ImageSizeCache->{{30.17157287525381, 206.22754707259494`}, {
           12.709348641125437`, 45.36620289061782}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793654800}, {
                0, -3793654800}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3793654800}, 
                Offset[{0, 0}, {0, -3793654800}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3793654800}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3793654800}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3793654800}]}, {
                 Offset[{-3.2, 0}, {2, -3793654800}], 
                 Offset[{1.5, 3.2}, {2, -3793654800}], 
                 Offset[{1.5, -3.2}, {2, -3793654800}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Saint Lucia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3793654800}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.79371744*^9}, 
               NCache[{
                 Rational[237, 20], -3.79359216*^9}, {
                11.85, -3.79359216*^9}]]}}}},
          
          ImageSizeCache->{{30.171572875253787`, 125.2592452473016}, {
           124.71779892037058`, 157.374653169863}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 20 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "20", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 20, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793827600}, {
                0, -3793827600}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3793827600}, 
                Offset[{0, 0}, {0, -3793827600}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3793827600}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3793827600}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3793827600}]}, {
                 Offset[{-3.2, 0}, {2, -3793827600}], 
                 Offset[{1.5, 3.2}, {2, -3793827600}], 
                 Offset[{1.5, -3.2}, {2, -3793827600}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Kenya\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3793827600}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.7938952512*^9}, 
               NCache[{
                 Rational[237, 20], -3.7937599488*^9}, {
                11.85, -3.7937599488*^9}]]}}}},
          
          ImageSizeCache->{{30.17157287525381, 125.25924524730158`}, {
           156.72021328578603`, 189.37706753527843`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Sun 22 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "22", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 22, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3792877200}, {
                0, -3792877200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3792877200}, 
                Offset[{0, 0}, {0, -3792877200}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3792877200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3792877200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3792877200}]}, {
                 Offset[{-3.2, 0}, {2, -3792877200}], 
                 Offset[{1.5, 3.2}, {2, -3792877200}], 
                 Offset[{1.5, -3.2}, {2, -3792877200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Sweden\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3792877200}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.79293984*^9}, 
               NCache[{
                 Rational[237, 20], -3.79281456*^9}, {
                11.85, -3.79281456*^9}]]}}}},
          ImageSizeCache->{{30.17157287525381, 
           125.25924524730158`}, {-19.29306572440644, 13.363788525085944`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 11 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "11", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 11, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793309200}, {
                0, -3793309200}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3793309200}, 
                Offset[{0, 0}, {0, -3793309200}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3793309200}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3793309200}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3793309200}]}, {
                 Offset[{-3.2, 0}, {2, -3793309200}], 
                 Offset[{1.5, 3.2}, {2, -3793309200}], 
                 Offset[{1.5, -3.2}, {2, -3793309200}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Finland\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3793309200}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.79337184*^9}, 
               NCache[{
                 Rational[237, 20], -3.79324656*^9}, {
                11.85, -3.79324656*^9}]]}}}},
          
          ImageSizeCache->{{30.1715728752538, 125.25924524730159`}, {
           60.71297018930681, 93.36982443879923}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Mon 16 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "16", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 16, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3791840400}, {
                0, -3791840400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3791840400}, 
                Offset[{0, 0}, {0, -3791840400}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3791840400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3791840400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3791840400}]}, {
                 Offset[{-3.2, 0}, {2, -3791840400}], 
                 Offset[{1.5, 3.2}, {2, -3791840400}], 
                 Offset[{1.5, -3.2}, {2, -3791840400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Switzerland\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3791840400}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.79190304*^9}, 
               NCache[{
                 Rational[237, 20], -3.79177776*^9}, {
                11.85, -3.79177776*^9}]]}}}},
          
          ImageSizeCache->{{30.17157287525381, 
           125.25924524730158`}, {-211.30755191724847`, \
-178.65069766775608`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 28 Feb 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "2", ",", "28", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 2, 28, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793482000}, {
                0, -3793482000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3793482000}, 
                Offset[{0, 0}, {0, -3793482000}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3793482000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3793482000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3793482000}]}, {
                 Offset[{-3.2, 0}, {2, -3793482000}], 
                 Offset[{1.5, 3.2}, {2, -3793482000}], 
                 Offset[{1.5, -3.2}, {2, -3793482000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Belgium\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3793482000}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.7935496512*^9}, 
               NCache[{
                 Rational[237, 20], -3.7934143488*^9}, {
                11.85, -3.7934143488*^9}]]}}}},
          
          ImageSizeCache->{{30.1715728752538, 125.25924524730159`}, {
           92.7153845548387, 125.3722388043311}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Wed 18 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "18", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 18, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3793050000}, {
                0, -3793050000}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3793050000}, 
                Offset[{0, 0}, {0, -3793050000}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3793050000}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3793050000}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3793050000}]}, {
                 Offset[{-3.2, 0}, {2, -3793050000}], 
                 Offset[{1.5, 3.2}, {2, -3793050000}], 
                 Offset[{1.5, -3.2}, {2, -3793050000}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Australia\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3793050000}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.79311264*^9}, 
               NCache[{
                 Rational[237, 20], -3.79298736*^9}, {
                11.85, -3.79298736*^9}]]}}}},
          
          ImageSizeCache->{{30.17157287525381, 125.25924524730158`}, {
           12.709348641125437`, 45.36620289061782}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Fri 13 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "13", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 13, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               
               LineBox[{{0, -3794000400}, {
                0, -3794000400}}]}}, {{}, {{{}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[{{2, -3794000400}, 
                Offset[{0, 0}, {0, -3794000400}]}], 
              PolygonBox[
               NCache[{
                 Offset[{
                   Rational[-16, 5], 0}, {2, -3794000400}], 
                 Offset[{1.5, 
                   Rational[16, 5]}, {2, -3794000400}], 
                 Offset[{1.5, 
                   Rational[-16, 5]}, {2, -3794000400}]}, {
                 Offset[{-3.2, 0}, {2, -3794000400}], 
                 Offset[{1.5, 3.2}, {2, -3794000400}], 
                 Offset[{1.5, -3.2}, {2, -3794000400}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox["\"Singapore\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               Offset[{0, 0}, {2, -3794000400}], Left, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[{2, -3.7940680512*^9}, 
               NCache[{
                 Rational[237, 20], -3.7939327488*^9}, {
                11.85, -3.7939327488*^9}]]}}}},
          
          ImageSizeCache->{{30.17157287525381, 125.25924524730158`}, {
           188.7226276513179, 221.3794819008103}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Hour beginning: \"", FontColor -> GrayLevel[0.5], 
                  FontWeight -> Plain], "\"Tue 24 Mar 2020 1 am\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2020", ",", "3", ",", "24", ",", "1"}], "}"}], 
                   ",", "\"Hour\"", ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2020, 3, 24, 1}, "Hour", "Gregorian", 1., {
             "DateTimeShort"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {}}}},
  AspectRatio->0.4,
  Axes->{False, False},
  AxesOrigin->{0, 0},
  Frame->{{True, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Charting`getDateTicks[
       Charting`FindTicks[{-1, 0}, {1, 0}][Automatic], {Automatic}, 
       (Map[DateList, -Reverse[{
           SlotSequence[1]}]]& )[
        SlotSequence[1]], None, 6, {{0.0048, 0}, {0.0024, 0}}, Automatic]& , 
      Automatic}, {None, None}}, {{{{-3.792096*^9, 
        FormBox["\"Mar 02\"", TraditionalForm], {0.0031999999999999997`, 
        0.}}, {-3.7927008*^9, 
        FormBox["\"Mar 09\"", TraditionalForm], {0.0031999999999999997`, 
        0.}}, {-3.7933056*^9, 
        FormBox["\"Mar 16\"", TraditionalForm], {0.0031999999999999997`, 
        0.}}, {-3.7939104*^9, 
        FormBox["\"Mar 23\"", TraditionalForm], {0.0031999999999999997`, 
        0.}}, {-3.7945152*^9, 
        FormBox["\"Mar 30\"", TraditionalForm], {0.0031999999999999997`, 
        0.}}, {-3.79512*^9, 
        FormBox["\"Apr 06\"", TraditionalForm], {0.0031999999999999997`, 
        0.}}, {-3.791664*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7917504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7918368*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7919232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7920096*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.792096*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7921824*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7922688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7923552*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7924416*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.792528*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7926144*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7927008*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7927872*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7928736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.79296*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7930464*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7931328*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7932192*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7933056*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.793392*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7934784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7935648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7936512*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7937376*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.793824*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7939104*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7939968*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7940832*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}, {-3.7941696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.0031999999999999997`, 0.}}}, Automatic}, {None, None}}],
  GridLines->FrontEndValueCache[{{}, (Transpose[{#, 
       Table[
        Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], {
         Length[#]}]}]& )[
      Part[
       Select[
        (Charting`getDateTicks[
         Charting`FindTicks[{-1, 0}, {1, 0}][Automatic], {Automatic}, 
         (Map[DateList, -Reverse[{
             SlotSequence[1]}]]& )[
          SlotSequence[1]], {{None, 
           Scaled[0.05]}, {
           Scaled[0.06], 
           Scaled[0.06]}}, 6, {{0.0048, 0}, {0.0024, 0}}, Automatic]& )[
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
       1]]& }, {{}, {{-3.792096*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {-3.7927008*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {-3.7933056*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {-3.7939104*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {-3.7945152*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {-3.79512*^9, 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImagePadding->All,
  ImageSize->{Automatic, 500},
  PlotLabel->FormBox[
   "\"Start of closing of social distancing\"", TraditionalForm],
  PlotRange->{{0, All}, {All, All}},
  PlotRangePadding->{{None, 
     Scaled[0.05]}, {
     Scaled[0.06], 
     Scaled[0.06]}},
  Ticks->{None, {{-3.792096*^9, 
      FormBox["\"Mar 02\"", TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7927008*^9, 
      FormBox["\"Mar 09\"", TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7933056*^9, 
      FormBox["\"Mar 16\"", TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7939104*^9, 
      FormBox["\"Mar 23\"", TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7945152*^9, 
      FormBox["\"Mar 30\"", TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.79512*^9, 
      FormBox["\"Apr 06\"", TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7918368*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7919232*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7920096*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.792096*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7921824*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7922688*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7923552*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7924416*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.792528*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7926144*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7927008*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7927872*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7928736*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.79296*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7930464*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7931328*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7932192*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7933056*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.793392*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7934784*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7935648*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7936512*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7937376*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.793824*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7939104*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7939968*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7940832*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}, {-3.7941696*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.0031999999999999997`, 0}}}}]], "Output",
 CellChangeTimes->{3.7985587525048103`*^9, 3.7985596490744677`*^9, 
  3.7985615340682487`*^9, 3.798561691170196*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"0cd81eaf-c3bb-4ba8-ac63-2d74b29fd82f"]
}, Open  ]],

Cell["\<\
Note the not every country is included in the couple of plots above. For \
example, social distancing was introduced in the UK in March but this does \
not appear in Wikidata.\
\>", "Text",
 CellChangeTimes->{{3.798558856814816*^9, 3.798558891427953*^9}, {
  3.798558948233287*^9, 3.7985589660580606`*^9}, {3.798559168490718*^9, 
  3.798559169290679*^9}},ExpressionUUID->"32745416-f2c1-479d-85f4-\
1121d80603ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wolfram Data Framework / Entities", "Subsection",
 CellChangeTimes->{{3.793105989651456*^9, 3.7931060209190106`*^9}, {
   3.793109627904931*^9, 3.793109628263386*^9}, {3.7931132125852256`*^9, 
   3.7931132141230664`*^9}, {3.798390707945075*^9, 3.798390726688531*^9}, {
   3.7983920389290953`*^9, 3.798392064478063*^9}, {3.798399261520561*^9, 
   3.7983992647485857`*^9}, {3.798559712336108*^9, 3.798559733423954*^9}, {
   3.798559768643023*^9, 3.798559791317137*^9}, 
   3.79855989678503*^9},ExpressionUUID->"2c6db4e6-6699-4015-b87c-\
9e964cfb7ffa"],

Cell["\<\
Natural language input \
\[OpenCurlyDoubleQuote]Covid-19\[CloseCurlyDoubleQuote] is automatically \
interpreted as a disease and converted to an explorable real-world entity. \
\>", "Text",
 CellChangeTimes->{{3.79855979987608*^9, 
  3.798559862210081*^9}},ExpressionUUID->"ba0c7ef3-ec27-4f12-81a1-\
03510e8a3179"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "Covid-19", Typeset`newq$$ = "Covid-19", 
   Typeset`chosen$$ = "Entity[\"Disease\", \"NovelCoronavirusDisease\"]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {2., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {2., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse["Covid-19", 
                  Defer[
                   Entity["Disease", "NovelCoronavirusDisease"]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 TemplateBox[{"\"COVID-19\"", 
                   RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], 
                    "]"}], "\"Entity[\\\"Disease\\\", \
\\\"NovelCoronavirusDisease\\\"]\"", "\"disease\""},
                  "Entity"],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 TemplateBox[{"\"COVID-19\"", 
                   RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], 
                    "]"}], "\"Entity[\\\"Disease\\\", \
\\\"NovelCoronavirusDisease\\\"]\"", "\"disease\""},
                  "Entity"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    TemplateBox[{"\"COVID-19\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], 
                    "]"}], "\"Entity[\\\"Disease\\\", \
\\\"NovelCoronavirusDisease\\\"]\"", "\"disease\""}, "Entity"]], "Input"], 
                  All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "Covid-19", 
                    Defer[
                    Entity["Disease", "NovelCoronavirusDisease"]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    TemplateBox[{"\"COVID-19\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], 
                    "]"}], "\"Entity[\\\"Disease\\\", \
\\\"NovelCoronavirusDisease\\\"]\"", "\"disease\""},
                    "Entity"],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    TemplateBox[{"\"COVID-19\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], 
                    "]"}], "\"Entity[\\\"Disease\\\", \
\\\"NovelCoronavirusDisease\\\"]\"", "\"disease\""},
                    "Entity"],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    TemplateBox[{"\"COVID-19\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{"\"Disease\"", ",", 
                    "\"NovelCoronavirusDisease\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \
\\\"NovelCoronavirusDisease\\\"]\"", "\"disease\""}, "Entity"]], "Input"], 
                    All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[72]:=",ExpressionUUID->"966944e4-3e43-410a-870a-7983e7d14330"],

Cell[BoxData[
 TemplateBox[{"\"COVID-19\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], "]"}], 
   "\"Entity[\\\"Disease\\\", \\\"NovelCoronavirusDisease\\\"]\"", 
   "\"disease\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.798561691704556*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"dc52b903-d24d-492b-9402-b8d72656d7c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Covid", "-", 
    RowBox[{"19", " ", "as", " ", "a", " ", "disease", " ", "entity"}]}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"covid19", " ", "=", " ", 
    TemplateBox[{"\"COVID-19\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"NovelCoronavirusDisease\\\"]\"", 
      "\"disease\""},
     "Entity"]}], ";", " ", 
   RowBox[{"covid19", "[", "\"\<Properties\>\"", "]"}]}]}]], "Code", "Input",
 CellChangeTimes->{{3.7983907412462187`*^9, 3.798390761548345*^9}, 
   3.798391932669519*^9, {3.798391964986648*^9, 3.798391965218649*^9}, 
   3.7983923296042547`*^9, 3.7985000903187523`*^9, {3.798543776859013*^9, 
   3.798543777128162*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"98c38f7a-6fd5-4aed-9815-08c826e491ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"average patient age\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"AgeMean\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"AgeMean\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"age of onset\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"AgeOfOnset\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"AgeOfOnset\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"associated genes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"AssociatedGenes\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"AssociatedGenes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"basic reproduction number\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"BasicReproductionNumber\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"BasicReproductionNumber\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average patient BMI\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"BodyMassIndexMean\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"BodyMassIndexMean\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average temperature\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"BodyTemperatureMean\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"BodyTemperatureMean\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"causes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"Causes\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"Causes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"common symptoms\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"CommonSymptoms\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"CommonSymptoms\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"definition\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"Definition\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"Definition\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average diastolic blood pressure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"DiastolicMean\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"DiastolicMean\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"duration\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"Duration\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"Duration\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"entity classes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"EntityClasses\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"EntityClasses\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"exposure to disease onset\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"ExposureToDiseaseOnset\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"ExposureToDiseaseOnset\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average patient height\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"HeightMean\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"HeightMean\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ICD\[Hyphen]9 code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNineCode\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"ICDNineCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ICD\[Hyphen]10 code\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDTenCode\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"ICDTenCode\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"image\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"Image\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"Image\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"Name\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"Name\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"prevalence\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"Prevalence\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"Prevalence\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"prevalence rate\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"PrevalenceRate\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"PrevalenceRate\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"prevention\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"Prevention\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"Prevention\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"risks\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"Risks\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"Risks\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"medical specialty\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"Specialty\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"Specialty\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average systolic blood pressure\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"SystolicMean\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"SystolicMean\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"transmission\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"Transmission\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"Transmission\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"treatment\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"Treatment\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"Treatment\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"average patient weight\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"Disease\"", ",", "\"WeightMean\""}], "]"}], 
     "\"EntityProperty[\\\"Disease\\\", \\\"WeightMean\\\"]\""},
    "EntityProperty"]}], "}"}]], "Output",
 CellChangeTimes->{3.798391965422412*^9, 3.7983923300369873`*^9, 
  3.798559867322969*^9, 3.798561535151395*^9, 3.798561691823285*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"b0819097-9ab6-4b27-89f9-45a994723918"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"properties", " ", "of", " ", "Covid"}], "-", "19"}], " ", "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{"covid19", "[", "\"\<Dataset\>\"", "]"}]}]], "Code",
 CellChangeTimes->{{3.798391934939458*^9, 3.7983920153830976`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"5a544558-2d60-4cb4-9101-197ac662ce88"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      EntityProperty["Disease", "AgeMean"] -> Missing["NotAvailable"], 
       EntityProperty["Disease", "AgeOfOnset"] -> Missing["NotAvailable"], 
       EntityProperty["Disease", "AssociatedGenes"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Disease", "BasicReproductionNumber"] -> 
       Interval[{1.3999999999999992`, 2.5000000000000013`}], 
       EntityProperty["Disease", "BodyMassIndexMean"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Disease", "BodyTemperatureMean"] -> 
       Missing["NotAvailable"], 
       EntityProperty["Disease", "Causes"] -> {"SARS-CoV-2 virus"}, 
       EntityProperty["Disease", "CommonSymptoms"] -> {
        "fever", "cough", "shortness of breath"}, 
       EntityProperty["Disease", "Definition"] -> 
       TextCell[
        "a viral respiratory disease caused by a novel coronavirus \
(SARS-CoV-2) first identified in Wuhan, Hubei Province, China"], 
       EntityProperty["Disease", "DiastolicMean"] -> Missing["NotAvailable"], 
       EntityProperty["Disease", "Duration"] -> Missing["NotAvailable"], 
       EntityProperty["Disease", "EntityClasses"] -> Missing["NotAvailable"], 
       EntityProperty["Disease", "ExposureToDiseaseOnset"] -> Quantity[
         Interval[{2, 14}], "Days"], EntityProperty["Disease", "HeightMean"] -> 
       Missing["NotAvailable"], EntityProperty["Disease", "ICDNineCode"] -> 
       Missing["NotAvailable"], EntityProperty["Disease", "ICDTenCode"] -> 
       Missing["NotAvailable"], EntityProperty["Disease", "Image"] -> 
       Image[CompressedData["
1:eJzcvQVYm9neL5rRTh0qFNri7u7uDi1O0eLBJQQNBAlJSAgJwR2Cu0MFSqm7
u07dWzzE3ps3QEtn733Pt+9zzznTWc8KJSGFlfVbf5clHBDjFPIzBAJJ+IP9
xelgknF8/MEUZy72E9foBGhodHCQdTQsODQ4XivgF/aLLuxHKfsBfg/87xwM
AFgCgEXOVzrnKQvgPNbO1Xdy3sycB2gz4ASmOZP9DZXzI/AXsKjA0hzApAJM
GsBiLlGZS+B7mB8A+jwA0FicP8OeC+w/SQMWPwC0V8DCE4D6FHhxE3h8G5ie
Bt5+AmYWwF9HX5r/9AZgLrDm2a98Buh0cJXU1YUyAc4vY/9+OoP9hD2ZTIDB
BH9EX3nD1zXTv34oxtdP+M8Zy5tK/V8hyFrdCjrAZAA0Brih4P9a3tTVLaID
NDZ8C+C2L81SF2dZIFasOYD+ija9jDII/DwHwXkaMP0eeHX/z0HK+QrMUAas
KSz0VXMn8HEBmKUxXr19feXKw6njwIc3wMIMsLjAevMOWGSurJK1cvCo4FlZ
RZC1BsFVmFbXzDlg/1wE6auU8T9BENwrGh3cTDYkNM6rzK+TNvvuOcCaBQD2
nGOyFthAz7EWlti4subBzWP/jTkO6p9obw9PnSsovEMk9PoeaLC0aDS1xIgp
Ddj6Ar3Hz+NK8e5+GabWOeZWneHRFwpJwK17wOwCsLjE/nPLv2OV/OmL4Fli
rqyZuQawVRr8DsHldf7jEFz7MVlfX/33BMh5woZvngnS0VrSZZ9/2iIw9wFY
+gjMv/386MbLmxfnXv8JUNkU9AmkPSadNbvI+LDw4vytxuRspJlDopRCg7lN
s5Z+h7r+lI1bj6p5haBGi66j7zYBI8jPPlw8cGGJCgNzioPrHWIx8OAxMM+m
ORabgr9wJod7s+EDafAbgozVyfzucP6DEQS+5y7/awSBVcG5TIP01X1j7+X0
B2DxM+P2pffHRvqRKY2R4Z2JicxLl4D5z8DiNEBdAJaoAJVGTEyVgfxuv4Un
Q1KpWcfsqJHtEU3zo5pWvQomNSKalcomSC29EHHRDAVFnKLSiKNzp5V98z73
Y9lokAwZjEUOdovLS6MzOez8f4Tgt/f84xAE/vUzfQ/fWgTB1xirwLHW7Ayd
BlCngWf3e5KjO8P8cfq6GDW1NBGpOygccOUqcO8O69YN4NUzNo6TLc37pWU8
9wrnKWs1aBoft3Qa0TAt3i2Zyy3UZmg/Xdn4oLI8XlUhlGc7UkSkzdC0WF65
0tT6blkVMMuWqIzl4wPSFHsNC0yQITCYKwtlfMdF/yIgvkmHf+pg/ctc8/LX
vaGvfk/lqCTznG/AQacCX96cLScECe3KkpMkKypWy6tiufdMOXieOgg9DUtu
iwgvjwp9fvYYQP3SQ8RY8e44sG1nrrRCs75ZhbJWqoCw18ZNaEtz4OGdL6N9
rjxbXdf9kiMtVWtg2GFnfx9HAB4+BmmQxljGBTw/yxKRzc/pXxVRJsgWaF8l
34rC8w1B4B+K4L9i9y8IfuW09DXwzX1jaOwNXHh/6QTJz8VpPSRLQrhKWblK
TKqMV3jS2K5YUCpPWDJSSMhHSmigBA3QPlwb7VDf+rseBJIkJVugppUiKgaT
kbTmWuesIPDu1DDr5GSIIH/Qju3Q7dsyJSWeEAqAd++BL9PALBU0SDiEv6K0
LGvDNA4vXeJMKmcucdBkMVn/VsT/88Z/wO7rYDAYNBqNzmQs/4RBA4mA/Xg/
v8jev1k6Rz+gzT2cHA7XUwwU3YXXUy5QkMoXEircK9yurNMqq16joB62jTvP
zvjJRDdAfwN8fOCqKikPgThv5QrfIwDl53favslHUchFR5Rx7zRw72Gxjhl8
r3jsHqHIvfyTqakgH2az0EVQB2Zx6OzjHLiIRTqLQV0ClmgL9x7M3b776fK1
uZv3QDtlgQ7MzAEMkNczWPRFBvUrgktLS/9H9/b/zPh/he8v72HSGQsz0wCL
Y0iyQAY1T182E+eA909fjHVeK8VcyU5OEuCN3bKxTFFpyNx2zNAqfSN36Lat
92vJwJdHV0cbbh1tO1KJM9m83pV7m+cGLqKRaZPfgZa4wNascODmyZnmTqSU
BpRXOEJUMlBUNNnEqDAkaKS0jP7yDQgex7Bkg8NewOwi2/akL927XxYRGWdq
Hm1k2paKuN83BLz9CCxSAfb5YoAslQ0i++3/OENwzfgPbJM9mEz2BtFAomNy
MGNTIR3cE84/rKVVc55tvAOz74HpV8Dsq0cNpecy4SQ9zdS9e9P59jbqGHcZ
WCL5+HNUFD4ONAH3TiKDHNJ9rBuTI135eAN27jn427ZexwPHg8OanexOpkU+
riy8ii3MNrD1EpJwFRUJ1tPw01ezU5SG+3guPv6TzTOfn7v56fZz4AsN+DDD
ePMWWFj4ePhQpqFhiIQkexbud6kMCH4xOALMsWl2HpTOLDpnwUwah7H+Y0Hk
jH9PiyyOrcdgrUhBUPGjzS58nluaZYO4wKCBQhB0bs0BH5496GpEGGumqMoi
5KRB6bZHMEtMDiUhF8PD67Vzc6mv44Ph2rb8eMQBSx9lqWgl5Spbl3JNq0pl
I5KEAlt0nvJ1JWorlXn7dyLRjWnpSR7OiZ4OgbaGfpb67UQcGyzqrQfB+hbJ
Nq7XatrvN3YeQuZ1hEe0+/iE8/HCxcUIegZkM0ukjt5kbh7w4QOwMAf6c2jU
ZQQZIEdl/lMRXKurfLUN2bKPxWB+83WwsVpksLcRYFGp8x+WdT4qdYFFWwJP
O3UOuH8z3lgHaa5f4mSXpqxEMrfs8AkM2sXvx7XTbetmsw0QL7ndQ8TkiXpM
Rx68NCIAv88pXkIpmlsUK6BQLaXapaw2aapPMdHN8XbvodQd6mxsIOX2VuBq
0UmkROiFjobbfd2P+gfc+EXt13GniSul7RYniyt06pnUqGskbN4YCIEgBQSR
wuJ5ymqtfgHA9WvA7DQw9wX0qdIWVkH8ZzLSv+iZ9NWnNAadzT9ZbBa6xPhm
WbE1vfnpL3euA0sLwKfPKxrgIg14+xp4dLcuNvxmY8WVctIxTM7t+tqnXT1o
Z1cbrq1227ZY8Gww5PkVE7a/pyh1tDzvRE1xV2paoIiMy89ceWKqHVomnYrK
FMHdk177WzDI0lI8MS+9hYy6P977cKxtqgp/rqHkbnfLo67WSEWFML69BVIK
dRLyUxqGFw3Nb7l7DBvqw3/+OXf7ToKYRLWeQYGu/uPqGuDDO2BhFoSPscRi
Li0jyPi/vdv/v4+/2Hr0f3WQrhAg6Eyjv/gwf/3eFI5ICQ6/XdN0nFA2PXUR
eD0NTNNA5YEN4t1rn85NTjWWXT/cc/XY8NGB9rK8TMNdO1V+gaiuh+jx/daK
S3h7bfTCcH0rLvNYdeVRAinPen+MoFSumNSIhVm9xJ5GE7X+wryqImwTFtmL
RhxCpZ7GI29WEq5U4o+Tcq7UkQtcrNF6GvliQo3iolc0tK9raN+0sTpvZVG8
Y3urrOyTiMgrwaHpIiL1Hp5XKsq+XLrAQZDGZFBpjKV/JIKcwQR1zDWxhuWP
yaQymIsc24ptcM0uvjt3dQRXXOwRkCggCd3E0+cXlq5qUO0aOJGOYU1eAC7d
eDYyCjy89+bcydvjI2dGeooLUIER/jr6anJ82+S2rvMxVMsJ8Xh5chh4e//W
4d7ecmJ3dUk9Js9OTNxbQLhATWPE3qZdTfZSQthIOaG1tmywjNycDi844NYa
Hz5ekEUK9sh2s853sw4T3ZsitBfFu7NfTemKucmovMyUuelhCwuiqNCwvQ1w
copVWZm0kyeCe3u0mOjRzAzgDtu+WGBzDLbIXmPaM/91sjjeub/qAH9/tgsG
Zdi6Nn0JtAeA5eAPa61D6ssC6FK+fb8vMS1ZQiV6Aw+JTxzHI9hobFWoY4iQ
VMqQVW9x8SfauBzDk1h37v85fvx8R3c7luBsaPzbul+FZETklcTlZQWSwgOu
DQ9cqm26Temaqmjor6qpqa8gluLTwgNNt3OnS0iP2e5rUFY8kRDZXUnu7u0Y
pFCa8PjWwoKKPGRtOT7qoCsqyAdtYx25bmscBHJM33LCwoqgJDEO9e13dyeb
miGMdF8PdAAfX55OhuXzi9RIyDUqq3YaGD+AJgBX7rD1mXf0eTCmyVoNhK2d
HO2aEzJj62TM74Idf38/Kovj0GDS6asIsskQXDYNYH6kgQiyCZBKfTY8RnJ0
TuQVQWzmy16/rVxUGicpDePZhZFWRMupwgQkvXfy18XB/jxx4uLQ0FhjU35c
YhWOkJ6eCo0Ns7Ez9PWwGair6MkndMRmTGQWXacMHmnpLKorr+1rqizF6e/m
sYRAitV1K3X02oMDGooJbd3t3bUNxzp6e+vqDw31N/Y0FZCxuOT4bBt7vIRa
4TaxakH50X3OV4tQh3Bpr3q7BjKQD0cGgen3k4X5USKCpeKyR3QMr7m6jxua
nDO2B+o62HopeBjpqy5xYBk72spXDoJ0gH2M6d8h+GPEE5nLh5ABHr/VQAzz
m0LDYrOgLx+vdHZmWlrFCoojhCWQIiIlmuo4aSm0uESBjDxSXMaLe5vznt3Z
Qd43To9X1RDxxWgULnN4rLehoWJiuKsWk1oQ6TOYm5FjZUOwcp7KJp6rbaWQ
izPzs/3igqHQg3Yqyp4ikpk6hlBR8UBlJU9bq4SYyFp0wZHqph5y5dGenrqW
uobOxhICxkpCPEJEFimmTNYynoAnvT4xfG2i+3Rn483hAeDPp9SzZ2vcDgT+
sTVv++6T1g4kQQGiAH+HssbjjGzgzRuARp/7OL/si2CtUBcdPMCs5egGaG7Q
V+ePRIOcj7MsApaffF02+9u5hXnQWKBTT7c2+Ssp2K/f4L5xo81PkDhRvlJN
9Wp1jdDffg/cvMl+/e+yEAhb0g21luVgYKnohPJm8pFjfb31Fc+njiyeHhtL
jmxwdizUNyy3dHhcQxnAEQqzMuo7Gqxc7YSE9/Jv3mwlLu2pqKq3bYeDory5
nmZCRNj57oHjFY1nm7umunqHRvpHpw4fmzoCCw6ohMbgbVz6YhJPlxYfaq14
cPfMuVOHO6vLbvb1TaILkqVUo7fwofeK1Smr4QT3FooKdRnoT/oHzA8Og8kb
C6BBxBERzBUcwY/NXN4EzoFlLs+/Rtn+xoO1km3CCdAwv/GNZa/+9OIsx5mx
MH/7xjA2j+Dh5icmEKEsXuJoXq6tmbBxkxkEErJzmwcfFxtBzY0QVKB7OTqp
CJfc0Vx0fqzj6WDfHXLRUIA7W2ARRISIElIkTe2T2TkN2YgKIhpfhEHkIhwd
7fm2b5cXFtWQlNmzcZOukkJERGBtCeHhofEhNGGquPZCR//oQG/ncHdlc01/
X9fZnn4iNBrrG5wTGJSPTDp0tP/l9MtTp8aHS8rz7N1CeES9ftoYyc1z2Nv7
Q27WkK15m7Fenb7eifBo4No9YI7Ktn1Yq64k+vf4fO/QYLK+KTl/68EABR+Y
mQSs8eN/VWTAf6nzwIvn70+dBO7eAl4+uUKpHC/MHk6JjuXns4dAoLt5IqWF
dddBNH6H2O/aXOLv0YdKHyShbo51DeFzu0LDe1w94ds3o3m4epXVaiRk2mxs
+mExI7VFTfXFKFRafUNVSiJMRkJyrwA/7949wqIiUdHQkrL8I72UrtzcQg/f
Cn/otabOocbGuvrKquaaU+dPHu3rG6ujZPoHexgYk3Kym5rrOsd6Fmmz9yZO
JJnvCxJXCheVzTMy+lBTcS8hhiwhnCvCR1KQpmgZvMgnA8+fs/kJazW54Du7
aXl8i4qu8FXWj4Dg/LL28tUyZC3LAvoidRaYn2HcvX8kn5BqanUInQcsfAQW
P8xemrrdUl0b6FMX4HOvtbonF+6jJeUgsivLzPBcTtYJBOIakUA9eqQdGh65
RwSnqJa0dVOJiGC3pEK1sESNqUmBmyMBERUW4h4Z7JWdEo/PykyDJ3j6eQnJ
Su4WFQoODxwbpVwe7ywJ8U/X0y/f73mrtPZSe/uhjtbevg5Kc30RBj1QXZcb
HBFuvS/GyT05DFpWTp44dnj68bMTTR1R1vYVcXFPhrqPpiU2aGpmb9oQt+lX
vIRwrbTice8A6pkpTq7VisSn/tsI/orgWxaL9G8c9e86GKs2IDiYnIwvjlbG
YiujdOrDw0d641NTlHT3reduCAkD3r8A5t/SHt58c2byWm9LPynv2mjHzcOd
XcTsMBPNfFfHM2jUBRT6cXnlo6q645k5ODMbuKRc0Po/cMKiqHXbmpW0S4yN
if5umLTwuFhfLCKOrV7W5aMr8VhvPw9e0T2CEoJ+fq7DLaQT9XiCg/lBrq0l
OqZdXgFnieTB4qKGUmJhfm4VqbACja5IzTzb3Blv74KPgZ07NtHe3HR56uTn
P/8cbW093Npwc6wbZWNyNzr6uK1t0h4uGO/mKkmpk15+jBNHgZk3bOuJtSb4
+10Ef43qsowgZyv+1mTIWkl7WT5pzAXq7NzSDKh0M9nM81lXXFKhmnnyTskc
KU2S3X767asAbRpYmrs6cbi+jFBXUdBYWUBAJiCCPfPC/dJ8nLvQmdSL547g
sDAT8+ro2CEicZxcjDK3wGnoZu4UJctoka3skK4OqBRoXk5seV7q3SPDlNys
0ozU9MQIU3Md7i2/ZcWG9GLhJS4mVUa6lUoqiT9tSt+2l+Li2ZOWSkHn9DRU
tNWUXTh6KD82bqyk4jCpbJBYPNXTi0pLvX7p/J+P7t+8cfnoYBcmKghlZ34z
MqpDXydRijdLXXzAxvILNn+6qxmY/QDMzrIxW5iZXQ6QTS/RF79q4My1ihyT
Y1z8AAiyF09lLOtmdE4uKBVM6GR/0pt3yBb7yFJ6CT/zhPy6PYhPqCw6fLyl
/vG5s+yjXllSWIBFFqbD03wPhBkZpHk45cOgaHhkdxUpPy4y1MoiNywUg0ir
xGF60BiSi1eeijFZ3yZFUzd9n31bKaatjtBRlHe6uTbbxz3dx6MkN7W6GOvn
apcT6t0d7VduoFoiLjZlbovfwFMjrjzs4d8aHDqAx453UEa7m6qKsOWorC5y
YayDIyUntwmfX0csOD917OK5k+/fPL974RQlG9EWEXYtLn7Cz7M30a83yf9G
WlyntcXQQZ+5oQHgwycwBDw9t5o2DHKh6QXaNxfiCoL0H4IGge8UMPoSYxaE
j/314+vO8GjfX7fUK5tkbhQK+Yk7dLeIt4IC1MYSFxFbnoZsxOJL4SmU8Lg6
9wCyjfPhzJzz/R1tzaVdPQ1kMhaZGJcYAfXy945OiKklEkNMrSMU9BHaFh57
RBNMTScaKo511U5QytvQGfhQvwttjX+ePX5muDM9IjA/0JviYDliblzJJ3DG
0Lbgt+2V/LIkeU2Chc3l5obyXEQBOi0mNiApNqSxnNBSQrh8ePDByYm7JyZu
HB+/cfwY8Okj7e6986XlFa5uF1KTWCMdwPtrwOfrwKnhIm3VtF18nftcv/QO
AzfvAQtUMPGVyaCvCsQVw+KbcrPspfmREGQwqcyFLwB9FliYBl497/QPiuDi
azV2wIoqB2/mO7CdT/O33+V+/U1z665EW9fahPRSnxCKnU+luiVGVL3DM2Cs
ENfbUNrX01hcisvLQqTCE0JiwnMI+QmJMHMNbR9V/Uxz5ygFbdw+tzNVlefb
60eriIdryYcriCcp1Q25yBpUFi4lsTQ2Cq+hPmphVSYgXi0kU7pXulvfFimu
ULTPpSk9tSA1wcfLMSYhGJEZj8yII+dn1eJyL/a03Broejpx9NnExJXG1mMY
wrOG1v6IqKsFaODGySdHGu4Olh/Pg+G0VOJ/21goLNfvFXSntBqkwWm2qjZL
ZS5Rv3qDv/phQNBWXG1/cwSXl7xIZzHZagxbdFPZ/PMLcO3Gp7aOXr+AFEnZ
DEWVMCFR6/UbtCAQnd//0P5jk9IvGzBufqMpucPB8SN2/tXi2mgusWIF3UPx
8It1leONVbmJ0TBocDosPiUZji3A27k76+vpeBuaZdi6EKyca1x8umPiB7Iz
jlHKx5rLjjRVd5EJyd5eGWHhxfnYbnJxgJAwXEi4SFMvW1Khw9n7fj75EBwx
lofNCwuJD/aDQv3whbnGZtr29sblJGwrGX+lsfpeXdWNivJrxRUt/hHpKoan
UnKGYuIp0SEd6ZH+yvz+snwJ6lKZSrJoPpFSIYV6LdPJiHjg9n3g/XswiM95
fKJRl4A1sRgG8NVf+jc3CZcFwdwSA0yloNGAj1/okyfPJGcQNPUnIqM/t7W8
H+k7XIhB+3okWFpkWNp5SckH6Op15aKGkzM7vYKqdSwzuQWwfOI4YdmQjdvQ
hiYpFqb7lWQ9LEzAep6wMC+fA1LqCspayvv09MO1DQuNHarNnAgGlsUeHlcG
2xpLMfXk/OEWSkdxWVV+UXFRWX1ZpaWwkOUO7pqIcJSzS3lo+BiOcKur71x7
12BN3Uhne15ORkZmChqdiUiON1RWiHa0w1hZlFtZJopLYTUMaq1cUyXUTyRk
vGxuSbDWd5bi9dixPoSPO0lVJnAnN15EjiKvO2hocxkaB5y/DHz5DNbpAFS2
OfyZBVLid4yU+TWJ/2+N4LI1sWIPzsxPH5qajE0jKuqErdtSYm5BPTYCfHnC
/PIImH/Floz0k+cOY3AVqIxrx4eGcKi2uMg8c2O/nduwOhqZkhLIPcLFqjrZ
GjrRujrxB9xgUcGu++xExARFVCTVDFR9bC2j9Y3IutY95m51hrY1bgeGKoiU
OjIBl52eBCPnFHTUd5bVdSShMH7+B0IC3LMz4b6+bgmxEf5eHk2VVZNDI5WE
otbq+i5KEwmDjfT397GxC7XfVxMeQ9TR7zazqtUwbDPbRzHdDxeQu44mAM+f
dWMR/gqiWEmpKjmVBEF+OwgkmU+4TlnvpI3rncBIoL0L+PQBoE7TqZ8XwRwR
4JtG+jWfhPVjIDgL6swcpvHy3QV8WamuDV5YmSipHi0gDDfUinIy7q3BAtS3
wPTbh9U1LZHhAbb6TSQkMcirKTQIZWbksmVTnp528A7uUg0tspoWUkkZZW2F
j4HmJsUF+xzQVlPWVVNw0NPK8HBHmdmUqhmPWLoPWLu3efo1pMOLUOkoZGoW
Ir04n4zJI6dhS9GV9Y1dTb2jbfZeDhJacqnYbDNH24zMnKnJU0RcYUVxeXER
ua2J0lJdk+AbmA+N9xaVw8urZnPvwu4VoWiZ4AQV4rfx3ykkA5fOAS/vFh5w
qlPUPWPtjuQXSRIWid7JB+fedXG/20lrh3OhYcCt68Dn1wBjhm0yfAEYi2sr
LBg/DIKc2C5tnv4ZzFp6/DjL0DZmh0SRhD5sg4D3xh37tnA57OCKUpE5k5H8
trwYrSJPtND1ktrpK7u7yc2lzsSmSs08bYd4FPdehKxylIhglp56gOjuTHuz
ulRYdnhYQig0ysMPqmFIsnbp8w3vdfRJ3rQni1sQxS/FthDbIiMJYcEZ0LCC
nFxsXkFlQ3vX4VOJyNz+jvpKAtLBwQSOSKxtbXJ0cScXVY4OHOrs6O0fHuka
7e8Y7u4f6UMjMpK8A/fvlUgRlAqB/Bz08y+p3DuLeUWO2jgNhYc+6WsBPvwJ
XL24iK9ulzGkKBnW6RjhtTRypcUmrMyOGOhc9vcD+rqBmfcAYw5gMb6mMS+X
Q65UgrCWU8D/5gjSacwZKu0jKAyfPMbYuYVsF0/jUzr46y7rnzZFK6lGy8l7
btlYZ2h0LvBgvb5mpuQeP97f46T3NJhbtRnaVytapPPIYdXNsGbWMH0NXwUh
RwEu5H7L9mzESHklLDg8xtW3MSQ2WUy5x8GbomUVC9nSrmFerqRLUNcNFZfI
2O8A83JPigxHZWVnpGWXFNWcP3bq6mBnKw5RikXicDlZqLzwmARoSExjdUtP
90B9Swuuktw03FnTWpeWBE/yD8vc72Xz2wb39evjJMUieLa3aui0G5p2BPs+
H+0C3jwCHj/6gi5vE9M7a+o2pGuWyrszXWBHu5ZSq4rslIvzIqUBePMnQJ9n
UWl0TirQcmEUm6OuIkj9+yPIWR6VxWKveoH25lWBf6jpL9yOv/H48UqYcu10
EhMLVVZMU1etNzFF8vCSxMWLleXwWgoodbl0YQmEsFyKuFqyij4lHl4YGRZh
bxK336QmIXQgD9GPyXt49FhuQkpWLDzN0yPJ2LjQzDZm6564n7iHjZwqlQyq
ze19REUS9tmgYOEpMSGI6IiS1MzWzPzjheWdybAxQnY9NgseDyUWk63s99lY
Ox4ZO3bl0tX2zo5UFKJ9uHP85Pj506cm2vuOVDehw0I683POtlSn25mE8e/O
VlOqDfQaJ+QCLx89qK056Rrcya96Rsn0qoH1gLpqpbRo/PrfErm31hkbPy4t
A54+AOgLy9mwDA71rcS4lxEEfgAaXNa9WJycGLY8HCSXe0irxmhb9GSiK9NT
D9dWnqfUtkdFFqhpZPLsqZBRQgsKpQjtjRPaG7VHMFxQ4qC4fKSpJSo2Curt
nBzhFeNp25yV2J+X2Y1CnevszoanZiWnlGGy2nE5hZ6eGH2TYk0TnIQaUkwR
o2scoqTARrAsC16eldKLx1ysqh1PyT0cA09TVmqLDMqH+of7u7MVoSh4YlJy
OqmwuJhArK+uKiohkMtJ5ZUlR8dGLx2dujR2jIDMDPZy6qgofHb6CM7TKd/e
Cudk2xgVWhzsl2loWKqgXbxVqGWrwG1Dq9tO9u06yumighkqKmxr90VXN/D+
FYjRV4/G11oeOqe0DVgmzb83guDKmSzacsk7c+bJ8yO1lDujR4HZObCAnTkH
LE3fam7AaOpXqutXKmpm7RXSg0DcN29AaOt4iUpI/fSzloSIk5NVLCwEjYIn
h/t04bIHcHldWHRRaiq5kDA00j95uAefGo2LCj5SSGiKjAmXU45T1YrX1EXY
2lVGhdcmRFVHhR5H5VY5u/hv5KoyNBn38a2wsThRTDBWkPT280jKTo+Fw/H5
Bd5OzkUY9NHRwYb6qsqKkrqqytbKhjJMYX4G0kxDHZMYAzx7eKa6tD81KVVH
J1pBwXYHd7qhHlpdM+Lndbk/reuWlOjSlT0S4PS4rvJOc9unQ8eAp88BBg30
YC/R6Au0ZWfacuhw2Yz4Ggv+Ww82/6CCEUE2s1hiLguDJTAFFIyjUT/PvgQ9
bHPTN/BF7Y6emSJy2bLK0fKyLoJ81jw7NTdvsZSXS4uNPBjk5RviGRTkwRZe
l3raezCohmxkZlREXVNtz1gviYRKjQ/uqCa3lxKJSQmxTk4hJmZpLq4h2npo
d/c8B/s0Xe0yW1uijnbirp1FsnJ3QsJvJcIHUxKTfN1r6sv2+bhoGun39fSW
4/GtZWXH+nuKsLm4vGxMbk5daVVbDaW3pZVSXjrZ3Xp9tO98c01venKYiJjL
+s3+QkJ2XFsdt2xIEhYiCwpVCu6u1RR7WIgAZjhlUF+WwDoaMDYKsFisFSOC
uVq4xkGQ8dXb9ncerBVHLicrbYGT48RkIzj39uUc7QudzVTYInJx9m3/0FF4
RoWzV4CktKemQvpBj5wAn9zgwLzICFImIi48KAkW5eVki0qIqUpPRfr61ORk
1xTh8aUFkalRhaS89ubK82cmSksJSfB4Hw9Xd1vbGC+fZFfPhgR4jX8wQl0L
ISfbaG1OMTOI/fXnVjnlMx6+w7B4MjzaydVG2VijpK4sLjYy1N29ODPj0qGx
w51t+dmZoYEBHs7uEaFhWenJJfic8c6GJ2eOvDo7PkXKT5KVz1fXQ6hrs9mF
JgSSqaXRqKbZp6U95mT2uqEE9IiuOkMXQL1lJZj0NboNPucUIdLX5F7+fQfH
9mFxukSwFRqQa7z5COZgL1EZS6Be9urRzeNdrYNYXGNc4mRpeYKbU2zIAba6
j4XF1CKRnTgCJQ+TFReXEhOFSktBxsegY2LK0lInmiiHOpprasgjR/v6Bzpw
+FxyaSGluTEyOkpFRS0sBOpq42CupF6ejEC5HwhXUEDr65WZGBapKqZt3Vwv
IDFp71Lh7DxQjN/Bu4FQS+o/MgBLiC7PzekkEUfrapqKiIkR0NjICEtzK3tL
S+gB5xJEwuHKwtlLky/Ge4D71yaCoWU6Jp8oHZ+HRggBfhZbNwX/vqnN0HTs
oMfs4V5gbpGxWoY8D3ZUYNHB/hyctFjGqsjjIPitXvjvPWiLrGXfGp3BYiuk
ANvAvf1o6fotgDZH+/ji09M7U73t2SGBFZkZ105OHDs2PHHuUHF5fmlOJiow
qCw8riE5Iz0guCAzIy8rIyEmMjYgYLKz41R7WxMGdWVsoJ6cPzra29bdWllR
1trQ7OvsZaVnAfUL9/X0j49NTI6PJ2SmN2Rnxurr4M1NE/fsIYpK3HIPOOnq
fRGD7iTkVVYXto11VlOqutqbClNTEj09hqsqYQd9clKS4qIi42LiYSEhMHsL
qJJklZdT8T7LBj/ncmuTYjnVClWDj02dwJdZ4P2bcjgsVEii1tGFdmwUmHnL
RmpubsXf+YWjhYNFItNzPy6CoBCksyUDR3Iv0IHr94eSs1OMLG72dIKl8ey5
8IWUkpgeAz1+bqJxqKWmtwFbiMLC4gawBSeIZTBLB7i3X3JsdCw8Hp6ZikxP
66isbMhEVkREHCfgCkMCavGYvraWzIQkHzsXNxN7+T2ShupG4aHRLp7e2MIC
IglfQ8wfLSbG62hnaWpV6BiViSu2mthM5eVhYsI6uhoaeppwRGxeRlobmViB
SJ1spRzv6cBnIxPjYq0srC2VVeEaaqWGWmQ1BaKidKbQ7iYjA/RO/nOB0cDJ
88DMzMcnD08N9l+ntH85Ogl8fAlGXqhLK0rnAmjvfaAvfPr06QfmopwFs5Xm
JbZUZ5/Ad5+ul9Zi9S29uHalmxgfLsCwrYmXp49nBPhFB/pUtFdnVeBaBtry
UVmpB3xakhDnS2rgdvtQ8ISI2PCYvIzgdFhaFqKBRMrz8EpR026039fm6T2Q
haLkYHICoInufqZyauZqeh4ObsFBUHNrGxsH+9zc7LjQ4HYSKdffP9XabgqZ
W2lkjdM2JAcG5sSGD432kGtK8AWYM0cPv7h4vr0gf6Cm/PyRoZ7WhsS46CC/
QKi1A0pOoVtT87SNzS13j2oBwSlzaxyPwBHfEODZc2B25uaNKw/u3OS0kKKC
zjO23KNxinw/LQLzYORoHmAsLCsAP6gmAwCrSbCgDbt4+XpbaBRByxiropWs
pBwqIxmkKOssIaq1jRsRGUzppTSOdDS1U3ISYYn7XbP2uVBiE8vj4gkoZGRK
bDQhxzEqOCohrgabj3f2RCqo4UWlKLomhYZWBQ7ucXpmpruF7JXUjJWVjbQ0
XJwdQ0OC4PFxbOJtKi+vJ5KwiUnFGcj69Az2Ao4gsrvysZWFuLLq0tHxQ4eG
+l/cvPnw5NTt8UOjLbVNVUW9Xc1VlaWozBwnFfVUCYkGZcVmRfkyvt3HdAzH
9YxxAmKvy6uAZ0+ZM59OTY5fnjoJQrZAnXnzhPXlNfX6tYuVNQ9auoBP08vW
BPvDL0zP/6jWBLCqjrIfSwuLly6X7nfJlpZHCovHCwhABfZARYVlIRCtn3/O
9vPp72js7Gsn4rGwoGCopVVFZExZdCQxISYtOSYyI94nOcY9MjQxAVadnlW0
373a2CJ7J2/6xq0N6iZ50mo1Tu566/9wVJbWlNzt7mji4mCirySVcNAnwddn
oLa+saiEhMFlZCDT4hOKomN7MbjR1tbeni5kXm5jE6WjvqGnsvrCYP/729eI
eel1NaTqmpK+3s6cVER6YEhPeoIr969+3L/lSQo3KijmbOOpNDH+NDpEffUQ
WJoZp7TUwRD3atrvVVLak5KrwoJ7oaFJsrIFJhbUyePA0tz8zMcf36JnMw62
OrYILH5euHQObWqSxC8Yy8UdtGF9JN/OkJ07Dm7bidI3DlVSL0lLbaooa6ws
j/Dx0RUU6Cfgu9iGWURgWloMPDcpICEiMhGGS87oysBkahjCdu+NWvdLqbRE
g5xaLo9gl5NLqrqSCASiL7TFWJFPatcvMd72dThkJQqZFRVdmIOOiYrXNbWI
iYWhk5JTQkOJeByxmByflApPTG0pq+4oLrswOPjh3o22xtKWtqqB4a7hkf6O
OsrJvv7i5KiGVGi2vWGaghROWLRZz6g1wOdYJenD2/tsnjlWXBosqRIjrBAn
LOO1ncd903qE0B62rKwzNr6BwwMfXoMhQjrjB/aqrdiDHKFNn2bduYqzM89X
V0FLiWGVZNJEBHx//iVxt2CrvXvoHnGYqWU3ubimuMTKzJhv3S8wL7f8+DAM
PByHTkNmpSCRGXlJGQWhsKOZBKS6nv+mDaE71w942hYICx6yteu0NMery3nv
+B3vaiz3K8RYdGN62L4+CvGgu+3BAy4FWIy1pV1wYHRyYkYqPCk9LQWGSPUN
gx7wC8zNwvRVN1fnoLuKi+9fOPn08bW+kbZTF46dv3Dq0vFTTcSiQ821aX7O
afss/6yqqFPTy+Dhn8jJnH589eHbW4usT0P4Ap9dws4/b/TZuBUqwJejIInc
vunPyOBrgQF3crKAF4/YYpC9A9Ql1g/r2V72qi3SaaBIB2Y/UaLDK/c5olWV
UyVF0SryWAX5ZN7d9XoWaFkNS8hvaWbWsfb7Zbi4ZbdtEd36u56CaA4iJisH
ngiPxaFQREROqsvBzsTsclfvEge7HF3FAmPVKgvjQk31Dvf9UEEejIVODzw0
bZ9hoKnCGIXQXV9AwKS2UCrHRodJxJKkRCQsHhEZFRcMDTeysoEmJHr5B0L9
gz3U9QLVtQ4TcITIgDJE7M2ToyeODhwe7j/UNnBhdLKrsrIJjzleVQncvjvo
H5Yko3StrWn67cOPrA+f5992ZuVEiilGCIhFCQtDxfcmS+zB8nCPG+kddbD/
WF0BvHsOdn4DmIuMb9GlleotsHHCD0CDy8KavrxIsEfMNPDoJXD13u3yqtJ9
+/pDDuYqyzfbWJYoqzbqGlap6qXtEt4PgQTs2usosFtHhFdVWSw4NiABCUcX
5cfB43MzMsg5uWwbP9rENFFXJ0dfN1RUqCzErz4lPtfPM8rO0lNH01NXO9Hb
PdHXA58c00DMqyVhGqvIRaSCuER4UUVdSFSil1fwPnu3A54H5eRVVDTU9aQk
XbbxoBWUiozUk2R29x10+dhNGS4uGG5uOdk7OdY4Wpxb2FfRkOzs9Xzs2Pzl
a6fbWmhvXnz5+Ooj7cviwszj3kMNPuGkfW4oayuMi3Waumyrmma1sESzifmL
+jqwFxxrYY5JnV/TaXMlwvsjVC0BnJXOgR3rOBrXsiSYAxjXHlQFhVMCg9p8
vRAyYhUG2nlCAjgBYfSOPSjuvembeJP5xex2btsBgaxbDzHdbxYaHx4Ni2Vz
UVxeTm5qMjI6MsjCLN7CvD0qZhyNTgnwTouPSIuNjgw4GOzts9/KNj4yMjU2
Os73QKy7Ew4aeqy+tr+6qopMQuShoDD4gQMBygrapvqWWhq6YmIiFjKSeHXd
di2dZK7fajWlGjXkTkYEPxnoPt03ONIwREaWRnpDESGxxnxiac5e7+7cmH31
GPjyfunL+5evn7E54fzxS42+EYdSs3OsLeP1VEIE+eqVtTrUjO5k5ALXrrIR
ZNHnFgHmFzYZfu339S1d7QfAkFMGwljilFyv1MsvAM/GpkLk1dy2bk+RkoTx
8eSJCGGFhfosrIiiUgchEKKqvt+uPXpcm0W3/iGwl0tdQyHkoE8iFIqGwUuz
c1EJCVlRkUWpyaiQoOrYuE40Oi0+KiUNngxLTIOnBgaFGdtYa1ma6Jro5CXF
GuzaRrJzbPHyv1BQRI6N9vV39Yo4aOPgaGJsKS0hr6qgIi0uprZtexyPYIuy
dpmk6JSb3REH605nx2tNdT3lldX55Wh4nq+9q7mckq+qTnFo+LNTx15fPMF6
cAf48hFUUd6/PZFPDtorGcAvYgKB+O7cipASL5FRGXPwAAbHwEynT+/Y4oN9
gD8xadS1eTKrvfV+BATBgMQSsLQItvrhrPz99JXW3hB5VbyRGUJUNImLmygm
RhATq9XQLJCWrTAwxZlYe4vLuGqoedqYervau9hbIqBhSQd8M70D6pEobEx8
4sGAeiIRA0vAREQVpWekJMMzsnMSIhMIuQWxMYnR8GRTFwd9M71AG9MUfb0G
ffM2dZM+W2e/XbyFMGhIkHt4RAgUGqGqrObn5R0XBg0xMcuWUG5V1i8WFsPy
7RqwMOvz8qAkx1eicnGp2bH+4cYKSvw/QdTXrTPautGId4u3isRZQj7w/jWY
QfHmVYV3oO8uQadNW6whEEMIJJ6Lu0JN73pyFnDjFhikmGNrLmCa0DRYxbym
/Ge1gvIHKOEF+SdtibW4yFxaSfKZmX8wMp5hap2tpFEoo1CnoNKpqVWjqFSj
rU3SUC93cMx1dM0OCEUnJsIiQtgzJy6mDYWFW+/zlFSqj08vgafF+fqX4Auy
EOnojKxqcmlaSgYKic5PzkPHIrPjMwtRhPTklISgg6Ga6tUW1gNKepPy+s17
pM66+4zDY/GhvugUuLPTPhUlZUI+tqKggBwZ02J7IIdLsF5BA7ZuQ/S6Dfk6
2jBbc1J6UlE2ar+xCc9PEFsZUb3N6wzWQax3/hEoubfEzPhMShKYQfH2BcbO
wQBs4LYlin9vKORngqh0vaX9dEcfmHs/P7ecL7rIpC8st3taU4LHaazH/PvX
LoFpkWCWFo0O5oss0Rh0gMF8f/ZirrVjyObtRFHpIj6h3E1bSKJiR7wPjAQH
5FlbEaCxFRgCMT8/C5mOSIwvTEudLKtqjIFHqRu0JiMJcYnBnl7p7JGVm5WL
xWAJuShsfk5+R3lTok9UfkJOXjyiGltQkpTUHBWJU9co2yN6TFXvpJbxNTfP
E0EBfbDItkIcBoWMj4vq7+7ob23GhUJJxg5Ze6RJsho1+sZ+v/+RqqaW6mxH
TE8syUJaqCibyoh6aSuq/Qyx3vqr7WZIpMiuKk31ci1tspNdLwJ+tbK8LjQk
28oiTVmp3cAMtp6b4uFDPXkWbLU3Owv6ZBi0z7Mz35oA07+2rgLN+b9/zvZy
ngyn0Q99HqDNgiKRufTgUVtUAkJEFr2Tv3Db7lM2jteDwxotzRAaSvuF9iKC
wkn5pJzcPGIJCZWNwMDjRwqJEwWkfmTukaJSBDTc3dnJwz8gKi0jCYlOSEWm
ZCIQmem15ZVZsLTy3MKG/OK2gqJWVB7R3xtrYxrGy11jpN1tacpWcS+GhR2O
iewrwPa21FWWESmNNR2UmmgX5xQ9szrHAykSCg1O7h1BIV2J8X2FmJ6yQnxC
TIC1eZq/Z4S1YYCSJFRexOZ3SNiODUdtbHpNzN22bizwdgU+vAJePBkpxMB0
tE4HR7dbu1wtqWDcfwD2zZuZ4fT+ZoLnFljTOYe+ku77wyDIojJps4tsRsrR
x8BXZmZf9w2TtU2a1A0axBVP2OzvMDE98NvPTts3GfJs269nTMKTsQVEckVZ
RmYKKhXWkJNVlQijpCP6isn4bGQ2Oic0MTEWkRMDR0LDY5JiwzNiwnJiohvR
+IrkrPGSWrR3MMr9QJKlqS3PlihlCYcNkNBdXHVmpk2GprXWdteam+qIOEpd
6eBg+8hgB4VUcK21/UlL18feoXEkCrhz+1JLwySl6uJQBzEushWTc6yx+s+J
sVuU6gxDjWB+7gQ+7i41jU4tfYyB7sPuVuDTa2D2/aNzkxHmJoUmNsDAEU4r
KirY229pkUFfaVa5uHJFwioBriBI+zEQZIJ2K6jMgI56Tn+AmVng+etyc3uS
pPKQoRWRXwy2bXvYbp4Dont1dnGr7BFOjUkqKSnLxaIwuNyC/CwSMqUKjUTD
orKTY7AEdDIaGQRLCIuDh4clwvwjwgx1k411rDZt8t4jnKVvk6RqFCahUu0X
Eq2q7ispkmtt6rV7B97AYNg7oFrXot3Z93JVfQsB31xbWl1LOny098rZiTc3
Lz07MflmYvLZ4SOvL5x9duHUtcMDg+WFLycPPx4bfnX+zNPjx4AnD3riIoP3
7my1Me/T1CsSlnxaUQY8fwgsfgFYc58+vRhppzzq6AXeznCy7JfbyDC/2Qxf
U7VXsrV/KARZywiChZDznNpVYG4eePVuLAZeqKJDllHGikjE8fFa/wpRgEA0
tm81EBSP9gxgaymovKz8glwiMa8IiyzBZRViEZh8RGo+Al1VhCzEp6RnYVPy
Ul38csz08QZqcfx7kLJKNbbuIfxSJFefcC3dbDfnxsTYCA2VoeSk8TTEaCz8
CrroErG8LwdThkgvI+a9eHX345cnw4NN966ceHD2+L3DYwt37z64fPbxjUs3
Jg9dH+17fnT087nTn+/ceXXx0r3O7lg1VT/eHa12tqccXKazscDxSbBJ+8KX
+fmPnO7AnP5v7ziXjwBr4APWIPjVEuQg+EPULq32k6HROGnnKyHpBSrw7lOR
uxdKWz9dQjqal89t00Y3Ph7jHVuNdu8y2LnHXU03JTSUlJ9bVJhHIGQXEbKJ
eCQbvpJ6YgY5F19fjCJgc1IRjdmFcFObSIndba7msTu58uQV0XrGHfDk3IiQ
rb9B8pGwnJigbE/n1kTY0XxcSVQ0MSO9Eo+rzcorz8gi4rNOnR2tqUQnRHq2
1hNOj7TP3br+9OSJI0M99+9crSFgJxprn46NfLpw7u6pM+eGDnXloGPVNUud
HB9j0I8i49+y+e3TxyCCM1/YZxO02ZkLnB6bXxtwrSFA1vcl2KyvNTA/QCeE
rx2BvnZ8BRFcpANfZp+NjBYf8AwWE4mSlrDZvMGZf4+jqJC1oJD5tl37hCUz
/P3rC9D5yCQELKIgJ5VNhhhMek1zOaYCm1eMxuWjGgoK+5D4OAX1Mku9POnd
eDHhVjPLsykZGXb2VrqqMQnBSSkRTlZ6pMiQXCdnSmJSMRzm4+8eER9RmJ7t
YWJua2Xo4+vgZKkO9TBzNJCxVRYrj4m62d1z/vjR8cPDWfExNw8fujXYX5aW
PDV6JD4k3FNF00NYLF1Xu93DtdvUstnI7G5ZCXD/Dqe9M3V6YeYTbWG5YSNr
LYLftyD5YQeT07phzX0E4EUAi8CHt83IVA9Zcf1N60QhkIz9DpSkZE9ZeS8h
MR8RsQzX/YSY8GA7Sx9z4/z46NaiwnIcqqwYRyzNLyDlNFWQD5eXVfuFRvOL
VelpDFsZjxmb43eLNVs5t0HjCLAEMj7Xx80uzNUhQE2tCRpBiYiujI9PT4gM
Cw0I8wrQllfW1lGxMFM3ENvupSFmJrjZVXJ3pr7hpaLyk709l0+ffHnr1osr
lzvJhSNNjcXFpWqKqrwQiDrkJ9NfISYQSCAEUqSkmKKi0BQe9qF/dP7sFTaI
nAoR5uzS/LdGMaw1k2P3rW2v+gPBymIxvh1D1qpfAjQQF2jPH0w11xw00lTe
9PswPv/F4Qk3McmDgsIeu3YGKsh4KcmobdpgvGc3xi9wiFhUkBBfis6uryY1
VhO7SgqIQYGBe8FyoQJpSaKYcDzktxoZbbys3kB4ch+WkBEZjkEk4dMS4h2t
h1E5g1nIXA93fEJ0kJsrLDzey9NXVklaU1nYS0Mi20YXZasfLSWEEJEeDIw+
Ul59qLPz6aUrz69d666rriwheYeEHjjgrczNIwaBsI13h58g8J1b6w21w/l3
HdjOXWhgORaPYNx9uPjh3fzizGpnAw5qzNXJeYW+prvFj3VHDHMVt7+yFNoc
sPQJmH715MLkua6WmSuXgBfvD2WjQ4SEDmzfvH/nZqONv0lDIPrrN8dpm+S7
+qXtc+/A4ylFuHpCbgc+N8PWMmgnb7qIWJqIAJyXp1LDoNHInmLjjdKz70lH
50GjRrtaGmuLuppL2iuwwxUF5Mjgzow0VGCQi41zVHxyTEpsZKALxt06T08x
XU44dhvXpJ0nTkKrLwM98/DJ3J8vn968OTrUS64kJ2Ly+kdHifEwyx3b9SCQ
aJGd3Y7mXTbGmXJiuQry9VqmOHnd5629wBe2UkqlLccfWPRvTdRW+6otrZZS
rtwF9uNEKJa7T69FcJV50FfuLpt+BzZhZpsY95/1J2fmKKumiQqH7OXbx7VF
79dfDDduttnOa7xpW4qV7WRpGTEmvCAy+Hh5UV9qcpWLR76BUWfIwYnUpDPI
vAaf8GrvqElsdWlUWmladkF2RldbdW0Vpru5qDIXPlaKv9fe2ofFY7Ox0ITE
iuaq1qrCW9XkTrf9gT9B8nbxTxo7FQgoF9q6HSZVnGnreX71+shoP7GmdPjc
mXezM6xXr06QSd78OwK2rTvqatdpoFmjoVwgLlYvp1mpZgxMnAEVbMYCfdli
BxHkVJ2vmH7fOqxS1/YI+kFoEFjbDOFb8jKwxPEZctzeS5ymAbT352+EyGiU
yWsXC0ph5JShoqLaf/zqJC+OCfWNsTfNcrOvj4OiXR3IvgcosTGticnj+KKm
pPSjZaSy5ARKLrYaiccnojBJ6BJsWaDnweiggNSoIGSUX5C9YZKn42Rd+eXO
9noMxt/PB12E7z/Uc/vc5OXy0nYXz1ol3eI9MpXCKkccfX1+275vw05KBOze
oaNXLp65+uTu66WlabbWz9Y3X79G6mlHcW1sVZI7oqk+pac7pqWN27H7qE8g
cO8h2wxcoC/Or2QPrvbEWyPpWGuEIGvt1vw4g7XGqOXUT3BaPdFWm2wvAu+u
3IXpWZbIahN3S6Tzi3vz8DpLCI+VET7fOHOlp6405EBL5MFcY+0YWan9O3fa
8vJnePpjY+LLczJq8KiK/ILMxIyUxJxwaFI8DBkYEBrl5xvuYGMtsEtv468u
ooKl4aEXuzv762qaW+rrOxpOnB5/d+/6rZr6Ag3DQkH5Kkm1Rh1z+B6Rg1w8
5fvdj+fiqJevAotzHz+/e/7xE3Xl6q7pUjeXbCnJYVOTq/vsz5uZjxsalcnI
n4yHAY+esg2m5S64f//8z/96rJ65vyBI5XgLGcv5sRxLg/7nu4YERIqoHBs+
6F4Rmy1cPsoKwINbwNyHxVMTt4ryj8ZA8bqaqTLS+zZt1v11na+Onr+Febib
IwkBx8Qnxh+EYrPwsdEp0QkpyfAkUnpKhIGu7S+/Ru7eGyUgXGDvcLevb7Ch
prqmpLW36drlU2e72io9fQ5A/kDtES9V1iSZm5Pc9p0g5X85dvj92CjYMvTD
h5dXr6xIKzYN/vm4GhqMNTNstLcYc9/XbWk64rL/aFjI5+4e8NIfGngH6cIP
RlX/g/G9NfRXjRoMvVA5sfvlygrg2bFTZQf8CNZ2oYpKqr/8YrhrF5Wt4Tx9
NDvQdysrs9XaGictVaKjnSIv7y8mGm5s6KGraakoHulsF+vkkh0aPUjprimv
bWhsam9qONve0hIGjVrPXcgv2WPmQNQ1aoiNPNPTfu/y2avnTjy5dfFUW+Nk
bl6do9OxIGiVjeXzjjrg1ing1R3g8wvg3Wva1PGzpSXA50/gjVpsDQWsSPr8
59GhWy21Zwg5x7Lg46nx10k46tEjnKb3C2DGL+uHiPf9l+N7X8S/IshcviV1
folTnwZGD4HXL+cunj/d1IiBhiY4Oj4dGh5OSk2RlmthW3wCwsXCYp3GpmRd
7RwD7arw4EZEooemQpilUcp+pwZE1lR7b09d49mTx0+O9r8/djRfRz9r3bYh
Ge0+ed06TYMpdA7jzpUXk5MXe3quT4xeGu58MtQzlpV6uQDdnxj+5yAFmH8O
vLr9rr8FODP1qrGu3M9j8fwp0GafpwKLbBzZwvoTeIXlhyesZ7eZD28AT+6C
FxYszoGhwLm5fxx4nPHVJcj8RoZfY9Ngm6Dl52DWOqeQgC1u2Bs1857x7tX0
o4cfrlwD3n8eT88+uGl7kaQiea9It4r6cXuHblurBif7waSYqSJMSwasD5s9
XlBwtbH5fEtbb0nxvbPHT7Y3HsOgwrZwle4Qumm8v19avVZR/XBC1ON2yp16
yr3OntOdTSWZMISfi704n5fMXicBrmhjhY/j7W87q2tdbGuszIcO+qDN9Ep8
3W+3tLyaOAYSGlthnn7z9RpZ8EZg6gwYw2XQQJ8TqHYylq/9+kcN1lp37ncg
gvFqJuPbc/YblhgAg7GidLPtp4V50IM6S/vYf6jJ+QBJWqlORumQntFxa5sh
K4t6U4MCI608S4NxXO7j3vZ7Lc23GhtuUChTFSWvjh8axmTHykmX6epViUj3
y6pNGFpkcHF7r/+FYGt+IiPncll1KyYnLyEYE3cw3FrLQ2q3FddPbvyb8i01
q8x0S1TkIyGQqHW/wSX4kUYaDnw783y85m9c4+Tugh1+5mmznxc+szGbnZ9h
sRh0GnVZ82R/w1ZI/69u9/+G8a8IrgERvLGOxfpGiZx9mF34zAJd/cwVJYdt
Y71496KuqVBVq9fE/LTj/qNm5m1aGgQJ0Zhtm4N4toXJSzfGRFQE+JV4eY5l
pJ/A5D6orShxsmP/KJ53V6GUdJ+ZGXLHtoTN67ucbHB6mtcLiE97eq8Pd7++
dvLReF+2m7Ud1+/evJvdt/4SJ7gjX1Jk2Ny0nF+IvFeApCQTzMvlumdXno/n
0n2wXI4+94kJxlm+6/46v0Bd4lw9uQQWJv/9PdX/5fgLF/3ePvqrZcRBkAMf
/ZvNC/boXADefQROnP5UXNyoo00SFurU1WlUUw2EQBJ28Xrt5t2/l9eedwcb
ynQt9Rwt9RJDA5K2Jl5TrcbeIkdH+XhKVKGpxomYoDF3hwvwmA+jg8Cnt8DS
Z+Dj8z+72vDmpmFbuWO4uf3/+DVi24YmA502DY1BFY0JXaNSISGcvCxuv/39
0X7g0ztg5hPnujomjVN2xGKtOptWb/1a7ij+TxOGXzWZ/4zg9x95OZ7I/Kbt
gKd8EVTX790p3+8Yx7erxcSoUUurTFomffP2FD7+1sAgmLGBq4iAn5hA4O4d
7DeUyCvgRMUmAv1p/W1Xags/HO8Bbkz0RXiRFSROhPi9HuoDixbn3wFz74EX
z68jc7FiMhGQ330gkGwhweOurqNGZn3yqj2yymwyrDMzvttSBzYfZrPQRc6t
kUyAscj6Zhet5g2uOs2Y/zR7kPXv5n/++Uo0isUxFVc3CbT6FxbenT0N1VBx
37GFbGKYuGtXxK/rsngEmi0cgPt/3mttIwV4w3TVokT2oqXEKIoqmRu31Brq
AyePADNPgA83phqxrrv/QAnxlqkpDqYkAR/fALTPwML7z0fHsrW0ozfzlMlp
wDZuq1PRun4g8LSVc5+CVsleUbyUxIXsdODZA4A2C7aFmZ/lXLS3fLXrKhul
rRy1pZWO4v84BIH/DwguX5WyUiBJW07sWqIBn9+352V7Soi47eT25eKK3L4r
hou3ztoJePEBmJ57dWiI6OkUtJs7euvGMiGRcmHxLhtbYGIEoL4Cpu+H2KjZ
7/iFTYOJGzeOxiWAl3Cxuei7p+OlhX6iIlF7hAmKmqUqei265odM9x8ytBvU
tSTLKdW6OgLXz4JuWwbb3JsFL9EDvZ2rvunv+2jT/6k0+F+PZQRpywG1lXwF
FudBpy08vt+QDvdXknPbvdtfQMhrG1/x/gPAo1fA5/mJEnKUllKYIE/Ylt8z
t26plJZtsbACzp0B3j97eWrEW11sH9ev/hBI5vbtowFQ4ORZ8Ap7+vSDM0cH
i3BHcnILLGzGIxOOh8SMOXgPWrqcCYyagsMvNJcDjA8gfGCS5BInzAcOOltn
5mRVfLsae9VTT//rCf0njP9AfP9pMFdd+CshUdaqrcGcZguvWeafj66w1Y/A
gwQff0o07EH7ADBL/3ThWoSpqf7GX+PkxWD8O6A/QVK5tpVo6AAXrwDv347k
ZIYrywTt2ZG8k6tKVSWBVzjf0uH2YC8bQTYvXXp2H3j84M3Y2NLUKeDsxemm
rvs40mxnL3DzGvPLE7AXBZO2zCdZnPZMi5wow0oQcPmW8++t3X/YWOuE+Tdu
+X/DXdnAUTlzzeVEjNVMy7k58GZJ6tz8vbvAq1fAq7fADBWYY87detSQmhal
pxkoyue58afIbRvyJMUbLWyB3lF6zwjZyh4mLpUpLVWtqx61cUPY9t1u23dT
0lJYLx8DS7McT8sMyCSXOHP2C/DoPshmFz8DwGc6G0E6p3IMbGrEmmYuzYA2
IXN+pU39aiCJwZnM/+Kk/iiD9S/w/Q8QpC3bgyvvYa7myi7SwUQ+MBWTCibT
0mhgSHGJybnXkAk8ez5eQk62MIRpKdV47K91cT6LyAaefwBOXP5/2rt6lYah
KPw09gF0Lp18jW7uXToIDu7ipvUJ2uKgEFzcnNRBLEURcY7YSmJSmprc3HNv
ruecm7SNTk6B0I8zh5CPe3LP7/d81Bu29w62d45bzU5j67C1O+jui7dXM/NM
6JMEZODhRUXToF9MyyjQbSJLYpaZSOoF6zvTuwDPXS2oAKFDSrTZGWrIy/Hl
w1gn/MeFWvxRI1qxXO5esN+N9guBSQS4rnt/93TljC8vXhyHVta8f1Is+eEF
tw+j/vnN6dn1SW/yOE4mU44LrKDcensnFMJzsFrfWk7LFzHEUnOnNu1MFSHj
q2ou3QBUA4oilhoX1ExlZXzRMKL8Co0fmvn33A/SNP31GMoLbVAJqAFF6CRB
Y6nK4pdkDXQuxCwg34sFenlM1lnbMFgpkBTFOoaSfBu6WSlVHBck8nwJ8igk
5cnxYDKDSikAyLI6eL0fBttmXQ==
         "], "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, 
         Interleaving -> True, MetaInformation -> 
         Association[
          "Source" -> "https://phil.cdc.gov/Details.aspx?pid=23312", "URL" -> 
           "http://www.wolframcdn.com/waimage/hset110/fae/\
fae44ac1e065f39a7dd061617b7daa7e_v001s.jpg"]], 
       EntityProperty["Disease", "Name"] -> "COVID-19", 
       EntityProperty["Disease", "Prevalence"] -> Missing["NotAvailable"], 
       EntityProperty["Disease", "PrevalenceRate"] -> Missing["NotAvailable"],
        EntityProperty["Disease", "Prevention"] -> {
        "handwashing", "avoiding infected people"}, 
       EntityProperty["Disease", "Risks"] -> Missing["NotAvailable"], 
       EntityProperty["Disease", "Specialty"] -> {"infectious disease"}, 
       EntityProperty["Disease", "SystolicMean"] -> Missing["NotAvailable"], 
       EntityProperty["Disease", "Transmission"] -> {"airborne droplet"}, 
       EntityProperty["Disease", "Treatment"] -> {"supportive care"}, 
       EntityProperty["Disease", "WeightMean"] -> Missing["NotAvailable"]], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 27], "Meta" -> 
     Association["ID" -> 12163548424364], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 27], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 27, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"average patient age\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "AgeMean"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "AgeMean"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"age of onset\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "AgeOfOnset"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "AgeOfOnset"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"associated genes\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "AssociatedGenes"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "AssociatedGenes"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"basic reproduction number\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "BasicReproductionNumber"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"Interval", "[", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1.3999999999999992`", ",", "2.5000000000000013`"}], 
                    "}"}], "]"}], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "BasicReproductionNumber"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"average patient BMI\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "BodyMassIndexMean"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "BodyMassIndexMean"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"average temperature\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "BodyTemperatureMean"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "BodyTemperatureMean"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"causes\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "Causes"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"SARS-CoV-2 virus"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"SARS-CoV-2 virus"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    EntityProperty["Disease", "Causes"]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "Causes"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"common symptoms\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "CommonSymptoms"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"fever", "cough", "shortness of breath"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"fever", "cough", "shortness of breath"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[
                    EntityProperty["Disease", "CommonSymptoms"]]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "CommonSymptoms"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"definition\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "Definition"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  Cell[
                  "a viral respiratory disease caused by a novel coronavirus \
(SARS-CoV-2) first identified in Wuhan, Hubei Province, China"], 
                  TextCell[
                  "a viral respiratory disease caused by a novel coronavirus \
(SARS-CoV-2) first identified in Wuhan, Hubei Province, China"]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "Definition"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"average diastolic blood pressure\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "DiastolicMean"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "DiastolicMean"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"duration\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "Duration"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "Duration"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"entity classes\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "EntityClasses"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "EntityClasses"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"exposure to disease onset\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "ExposureToDiseaseOnset"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   InterpretationBox[
                    RowBox[{"(", "\[InvisibleSpace]", "2", 
                    StyleBox["\"to\"", FontSize -> Inherited - 2], "14", 
                    "\[InvisibleSpace]", ")"}], 
                    Interval[{2, 14}], Selectable -> False], "\"days\""}], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "ExposureToDiseaseOnset"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"average patient height\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "HeightMean"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "HeightMean"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"ICD\[Hyphen]9 code\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "ICDNineCode"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "ICDNineCode"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"ICD\[Hyphen]10 code\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "ICDTenCode"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "ICDTenCode"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"image\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "Image"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              RawBoxes[
               TemplateBox[{"\"  \"", 
                 GraphicsBox[
                  TagBox[
                   RasterBox[CompressedData["
1:eJy1WAlUk2fW5nRm+ndqp9rOb0VRWWQrILIGZNGyyI4KLlio7AqEECAQIBAS
CAkhQFhCQiBhl1U2ISBiR6xgS1EouFWlarV0rNRqoWpI8m3zfoGe8cyZmfOf
H7nnS/j4SO778Lz33ve5VzcyMfDkWxoaGinvgLfAiHQXCiWCdmgD+OUIOSUu
hnwi2puceiLmBMU+8g/goR54OYEXfo/9HwzBMAWGweAOVV/qexUKLaH4cwRW
YagcPHyFYYuQAv+bAn1+8/KVav7PI18+v/v9va/GsBeL4AsIDD6PQuATCIJB
uCvwhqDLrt+wAa+QGvkyZmR5EcUyYnBB6PO5G+f6Xj2ZA49/mn3IPnCsw827
x9ypk+CXbGbJMt01lkZXLiy+xDA5AI7CCIygKhS4UgFX6LLrtbHfSUawFX4U
CAruXzx+KAzw5unqj0XEXSovu3bxXISVpcDMhrtFryv6ZE3Yp5mbNafoTGjx
hRKG0VcwIHzFIQC+Jhz/K2D1UiiCoBAEvYQAX+iP18YF/i6lhgatH1tlaW2d
mxyuZiQdePvPZFPDARHrXGJq8J/+PC6phuSK5a9Dv734qu3001t3MQiGEQjG
UGBrihpfACCFAMEooAhCYMX89z3JMVl6etwdpgV21qP1POZR7xRtk5a9niOx
oQ2x5JSDvnEH9t27PD5YVnO779wAjRa58SNRwGFkfh5DVTDua00ww+p4wEMC
hpcD+u/TUz/fuAnuX9y51cekjktFdG8fcw0NKTP6Qk0J09GjVMeke7dlXRFL
JuFPSPlX6ypJhoa1WnojtoSyzZo1NnYT4koUUSHgWgvIgFoUAWUBBmiVKLLw
oo/KKNA2KXd0645Outd5ZmFmuoTFNNllGOzt8m1v11e9XQWMjFR9gwtHA2Sn
alo4eS1cen5IIHu7zpDT7s/9fb5ITb7F4+Zrbfu+ogqBoFcgLcCm4fsGq2sK
+noo/n8NhC2sBD9UOPqnd76N/t/NKes3lJiYhLz1NtXPu7m5Sijkt9cKJIkx
vbFpstrGCMrJA9q6JHMLZirlUmtPt6yHQ6Oy9K2/LMibOt9zd3iYR3Cs1zc6
67RXNXtfhbMCqTEjEA5bXZtWhxnBiyoK4gFPOQz77f53Z0sLxWGHc40Ngz7a
cEB7U2th1mhb7WBUeKWedltAYIOokJgQa7xD39LcTFrOG8orGjnd1TV05hS3
KDs6emxqVFYmitHUG4mKEO80+jKJisrlShSFV7YUZxlddflTnyAYDIHAQ36e
ucayc3k8Poo9+7G/glebn8Y44Hm7QjhIpTHMLQSaOlV+Pllp0Y0lBaEhR533
OcqEuSxT88HUzI4GSZtYXBaXXFPMn7p8ub+pbogUm7txfaujA/ZkDkBcQgDJ
2DLDEF6230BwqJAlkIXNQeFxGu9muLq1iYQSLqfoWEgTh9FaK6ARYysK8pmO
XjRn174GQU8hq6WYwyJHtXp90rBJV2Bs1cVjlxfn1vM45xvr7kxfvT85cTae
+KizaiyTdDE5BX62ACOIAi+jOEcwBq2SavAPq3MbfnJ+uDs4NH+Pm9M760Kt
Hfrj04U61m0h4WJONoVMDCWe9HVwLnI/OMhhDTeL2/hFFdkM+k7zuj0e5xLT
q+iZ8eQockLkkKB4nF9yhkgdpmWIE4PzXGwLPtx+X9II1nkFyjWKByEejKvD
DOoR2KrHw5dK9K2aT4TPTn9xs71NmBrfSiZStmszt+lmWdtQIj5zcCR8ts9V
4uDVciSkuiy/NJ9fLKqnUOPDo4LFFcKelo4acSUpJDTT1KJIS7/GwftmV0uh
vV3KR1uKjXY+TKGhz58soZBiGTMCrxIzpK4ZHVR6kMY6jz++w3Yg9Bz0TTbb
KnZwLdz1SZojge7p2FzATT1yXLTHp0zLTGDjRDt2KIfBbG/qPC0upmQkp2Xk
dPf0Nfa2SkoFKbZOmYY7hBZWv34zulDVItu5t9hIr9XCTDE5DtZ6haIKXMOo
VokZhfGcnhw6LyanfT0o6yUncjdtS9m6JfhDzXB3d2pSRCsro5NfWllaXBEb
Ve7smWVhl3v86Cl6RnPQ8Z6YKFJkSBw5SSqslNRW/m3grLS4pF1YVBsVmuPv
xbEk9G43HPDa00MiKx48AGcsBEQIjhlZbQ6C7XpNFPx05Wup/9EYZ/vkgP2p
xJMU8sl6Br22pLCyQdjRKs2iJod7+xYHHy9ydubpal8MPMogRp5MjRex2ael
VZQEMj0tbeJcz1R9NdXINHSHHnPDX24X52J4BKo1HoynITi8VqmdAFrgEFXA
d/qGXj5+8PVgb1NlWd1paSMrrzKRmkZJ4ufmyCrKumpENVJJkN+Rwwc/zcnM
LI4KKzQxk7n7SbkMUVOVlM1qLS2OioqOcdnbEXak2d97JoM1Nz3dEp8Az93H
8FqHLimVOFwgrlePGQHnKfbb7e9Y5oR8Hy9qgD9fwBVKKgSRseXJyeGZSdm5
jFJXzxoXb+aBY3uNzfx9fcjxxBo+v5xEbjsZ3yAW9PR2zpwdkLXUsNnsDIJd
o+GOGi2d2Wrp/I8/vJj76ddH393pH1ItLqqA0FOTjKpV7qow4zoDmxu7QNum
Fbv+vePvbSgjkujpaURfb2FeBimTUk6hs3bu4mtvk1jbHTXQ9CXoFmWQ2LSs
uDhyMSs3l8ut4JVeGRocGO48O9DfyM3l73cTGJk9mhz5oqOVuNUo3Uj/1G7C
wvgYhjcFqAJ9AzmI4F0RuvTL0zFuYbnrnkpbAsdgZ4T2DrMP10XGhXC47LKU
TKarS/l+j9JjgUnuzvSwI9V8ZnW1KIPODjoW5uzuEW67W+DrOibmTQyPtFTU
yUoq7rafXng5f31gKMvWIcvcYNBpj3zmKijKckTNELpawQH2Sg6aPgwblTan
GxvzPzYUGprQthvaa2/29nHLTaJw09KKSPECWkZ6Oi08MsYnwI/h6dkXQ0pJ
jNnn4WtrZZtqsqtBT0cWdLCnqu64b9BBE/OLDVUYqpxsag/ZrEXS3DRNZWBL
L16CTkJdn99EE4AoYTlw9DdhNe2DTS0WVg3enrwTRGYWrYJGqwyL5cQlZGcz
ONxCPrukJIfPSUsREuxlxpa9MRHZ6cnFRQUlXoH5m3RzCDYF1GR3cxPbtzWC
1789nEw+w8lNMDZia+k+vXAJLKOAlKi6c0PegN5AIEQONu7ZjVuSXbu7CU5h
WzdGHz5WIhKV52Z1sPNY2bTolAwKKSkzNKQ8OlkUHhNv+THD1GjwUPBZibi3
v+1SY8M1keRGd8dgdflIvbQzm0rfrtm42+HZ7PWrZzqnysSIXA76d9DbLre1
CC7KVpmF4OxWAYWELL6s3X844YO/OvzPH7w/Ni/hcsrLOIU8el5lAZfHZwcc
Yhpu4+31iPZwzw4ObI4ntWezqpk5p7ukve1VP1z5auryyFR3++LNW62MnAY3
10VJHYYffAoMQlZat+UeHF3RHKvDjAtaFS5t0fG2Rr+tHzECA4N3GCT4eqQd
/7S+tEhUWyrJzs41Nas20G/yD8pJT6KGHWskJaSRYgL9D35iaxBoqlkRHDwz
emny3Fl2NsPkvfVRGzeWO9qPllbIn/6iRCFcPuPdCq4zVgYpqzYUW6EBBN3c
7em/j32dY2Xt95d3nde9zww42srn1JNJfGfnpoOHm4ITJJl5UjGvo4zVls0g
JlJErNQym11CPcvBvJIrX4w0yXrruQWxmz5odLBib9J5PHAe5wLkuFoXAWWj
wrA30VvhhuDeUJUKeMUejE+ztIyC173fWph7UcDN+8SBaGNfnJRUyWbTqezk
xLQoj73E3dZD1VVN3S3XZL0iYxvBToIoMOjn6ZmXQL0sLYnc9p6zt5W5ur+8
cxcfKf3ex74hsNhymC3PqIB4QZQQ/JtiQlqX4ev7TWvLxThihYlpph0h+bBf
9vGQZlHN8GCf2M2rcovRaCl/dnL8fFWFZL//jbYq9Idv77W3yB8+wpbkc+MX
7rbXLExcxpRKdC0a72W4yymChzaqVjP4AflkYlpoYf/5HtcOL3fRZ4Gf87gz
p5qGywq5OvrN2kY1Ph7XauvbSlkhFjp0V8t2v315+toMD5ent65jK10UiAgI
XGuC+fdzaWXvQADCSkhd+ueHz9faE4R6O9L1DeLtrJm2ViJb235i5AUGud3X
9deZK4of7+WZmUf96a0zTs61W7QbQj9dejaPqCAVPnXE00+5NjOZ1+Psd9g4
QUA5Pn1wL5FgeURDYzSbe6WjLXbj+4It27BbV/vruKT33lkY/3JxbpZtY19r
7XzBZX+b2z7lozu4FyWMgcxQqud+a4D5NZr/CR7FlCBKEHXhf3ztm8489tPr
s8PV0kPvatD/+uGzHhnPxzPmj2+Vefi+nH/4fPbWwsTEfK9Mfu86LmxhVI4X
TxivFatW9//J/p1kQZahq2d3K7Y0/8uleulErRSafXSvZ6CfmTN5pg9VyF8T
aTAeEGpulZi6GKNrhfm/G4pPShG8BUP+jVRfmUzic4A3A+8fLxUIKg==
                    "], {{0, 25.5}, {45., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> {96, 96}], 
                   BoxForm`ImageTag[
                   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    MetaInformation -> 
                    Association[
                    "Source" -> "https://phil.cdc.gov/Details.aspx?pid=23312",
                     "URL" -> 
                    "http://www.wolframcdn.com/waimage/hset110/fae/\
fae44ac1e065f39a7dd061617b7daa7e_v001s.jpg"]], Selectable -> False], 
                  DefaultBaseStyle -> "ImageGraphics", 
                  ImageSizeRaw -> {45., 25.5}, 
                  PlotRange -> {{0, 45.}, {0, 25.5}}]}, "RowDefault"]], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"name\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "Name"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["COVID-19", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "Name"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"prevalence\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "Prevalence"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "Prevalence"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"prevalence rate\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "PrevalenceRate"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["-", 
                GrayLevel[0.85]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["Disease", "PrevalenceRate"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 27, 1], {1, 27 - -20 + 1}], Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 27, 1], {1, 27 - -20 + 1}], Appearance -> None],
                     " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    27, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    27, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 27, 1], {1, 27 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 27, 1], {1, 27 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
      ImageSizeCache->{1105., {280.634033203125, 286.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1105., {280.634033203125, 286.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.798391942213921*^9, 3.7983920093744707`*^9, 
  3.798559875430748*^9, 3.7985615363927727`*^9, 3.7985616920828133`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"074c9b09-3927-4d58-9c6c-ac09cc5d732f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"see", " ", "how", " ", "Covid"}], "-", 
    RowBox[{
    "19", " ", "compares", " ", "to", " ", "other", " ", "infectious", " ", 
     "diseases"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"infectDis", " ", "=", " ", 
   RowBox[{"EntityList", "@", 
    RowBox[{"FilteredEntityClass", "[", 
     RowBox[{"\"\<Disease\>\"", ",", " ", 
      RowBox[{"EntityFunction", "[", 
       RowBox[{"dis", ",", " ", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"dis", "@", "\"\<Specialty\>\""}], ",", " ", 
          "\"\<infectious disease\>\""}], "]"}]}], "]"}]}], 
     "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.798392906682186*^9, 3.7983929503340607`*^9}, {
  3.79839300482648*^9, 3.798393100927649*^9}, {3.798393729488386*^9, 
  3.798393733128315*^9}, {3.798393774876445*^9, 3.798393778857009*^9}, {
  3.7985001178195066`*^9, 3.798500128422638*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"ac29d305-d79e-49d7-8cd8-6f69fc24b259"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Ebola virus disease\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"EbolaVirusDisease\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"EbolaVirusDisease\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"cholera\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine001\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine001\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"salmonella infections\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine003\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine003\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"shigellosis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine004\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine004\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"botulism\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine005.1\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine005.1\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"intestinal infection due to Clostridium difficile\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine008.45\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine008.45\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"infectious colitis, enteritis, and gastroenteritis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine009.0\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine009.0\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"infectious diarrhea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine009.2\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine009.2\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"tuberculosis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine010018.99\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine010018.99\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"leprosy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine030\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine030\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"diphtheria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine032\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine032\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"whooping cough\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine033\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine033\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"streptococcal sore throat and scarlet fever\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine034\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine034\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"streptococcal sore throat\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine034.0\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine034.0\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"tetanus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine037\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine037\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"toxic shock syndrome\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine040.82\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine040.82\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"Helicobacter pylori infection of an unspecified site\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine041.86\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine041.86\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"smallpox\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine050\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine050\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"chicken pox\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine052\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine052\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"herpes simplex\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine054\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine054\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"genital herpes\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine054.1\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine054.1\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"herpes simplex without complications\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine054.9\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine054.9\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"measles\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine055\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine055\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"rubella\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine056\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine056\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"yellow fever\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine060\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine060\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dengue fever\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine061\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine061\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"eastern equine encephalitis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine062.2\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine062.2\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"viral hepatitis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine070\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine070\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"viral hepatitis B without hepatic coma\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine070.3\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine070.3\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"unspecified viral hepatitis C\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine070.7\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine070.7\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"rabies\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine071\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine071\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"mumps\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine072\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine072\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"hand, foot, and mouth disease\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine074.3\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine074.3\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"infectious mononucleosis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine075\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine075\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"Condyloma acuminatum\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine078.11\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine078.11\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"unclassified diseases due to viruses and Chlamydiae\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine078.8\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine078.8\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"severe acute respiratory syndrome\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine079.82\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine079.82\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"unspecified type of chlamydial infection co-occurring with other \
medical conditions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine079.98\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine079.98\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"rickettsioses\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine083\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine083\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"malaria\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine084\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine084\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"lyme disease\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine088.81\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine088.81\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"syphilis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine097\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine097\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"gonococcal infections\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine098\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine098\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"unspecified type of venereal disease\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine099.9\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine099.9\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"pinta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine103\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine103\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"dermatophytosis of the foot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine110.4\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine110.4\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"schistosomiasis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine120\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine120\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"cysticercosis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine123.1\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine123.1\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"trichinosis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine124\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine124\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"enterobiasis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine127.4\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine127.4\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"lice infestation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine132\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine132\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"scabies\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine133.0\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine133.0\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"neutropenia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine288.0\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine288.0\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"meningitis due to an unspecified cause\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine322\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine322\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"acute and subacute endocarditis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine421\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine421\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"common cold\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine460\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine460\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"acute pharyngitis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine462\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine462\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"acute bronchitis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine466.0\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine466.0\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"chronic tonsillitis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine474.00\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine474.00\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"Legionnaires' disease\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine482.84\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine482.84\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"bronchopneumonia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine485\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine485\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"influenza\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine487\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine487\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"urinary tract infection of an unspecified site\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine599.0\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine599.0\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"orchitis and epididymitis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine604\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine604\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"vascular disorders of the male genital organs\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine608.83\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine608.83\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"vaginitis and vulvovaginitis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine616.1\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine616.1\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"cellulitis and abscess of an unspecified digit\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine681.9\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine681.9\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"impetigo\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine684\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine684\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"pityriasis rosea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine696.3\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine696.3\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"necrotizing fasciitis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine728.86\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine728.86\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"osteomyelitis, periostitis, and other infections involving bone\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine730\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine730\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"neonatal candida infection\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine771.7\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine771.7\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"sepsis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ICDNine995.91\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ICDNine995.91\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"Middle East respiratory syndrome\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"MiddleEastRespiratorySyndrome\""}], 
       "]"}], "\"Entity[\\\"Disease\\\", \
\\\"MiddleEastRespiratorySyndrome\\\"]\"", "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"COVID-19\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"NovelCoronavirusDisease\\\"]\"", 
     "\"disease\""},
    "Entity"], ",", 
   TemplateBox[{"\"Zika virus disease\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Disease\"", ",", "\"ZikaVirusDisease\""}], "]"}], 
     "\"Entity[\\\"Disease\\\", \\\"ZikaVirusDisease\\\"]\"", "\"disease\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.7983929442920637`*^9, 3.798392950654187*^9}, 
   3.798393021490424*^9, 3.7983931217888803`*^9, 3.798393780142104*^9, 
   3.798399051582868*^9, 3.7985599684959593`*^9, 3.798561567770526*^9, 
   3.798561693879524*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"ee37b303-2a62-4beb-8570-9e5c5b6bef93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"prevention", " ", "measures"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"infectDisPrevention", " ", "=", " ", 
     RowBox[{"DeleteMissing", "@", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", " ", "\[Rule]", " ", 
           RowBox[{"#", "[", 
            TemplateBox[{"\"prevention\"", 
              RowBox[{"EntityProperty", "[", 
                RowBox[{"\"Disease\"", ",", "\"Prevention\""}], "]"}], 
              "\"EntityProperty[\\\"Disease\\\", \\\"Prevention\\\"]\""},
             "EntityProperty"], "]"}]}], ")"}], "&"}], ",", " ", 
        "infectDis"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Short", "[", "%", "]"}]}]}]], "Code",
 CellChangeTimes->{{3.798398871413587*^9, 3.798398915912097*^9}, {
  3.798500140137876*^9, 3.7985001524298773`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"959e9392-df77-4d4c-a7b8-8b73dcf10ade"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     TemplateBox[{"\"Ebola virus disease\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Disease\"", ",", "\"EbolaVirusDisease\""}], "]"}], 
       "\"Entity[\\\"Disease\\\", \\\"EbolaVirusDisease\\\"]\"", 
       "\"disease\""},
      "Entity"], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\<\"coordinated medical services\"\>", 
       ",", "\<\"careful handling of bushmeat\"\>"}], "}"}]}], ",", 
    RowBox[{"\[LeftSkeleton]", "50", "\[RightSkeleton]"}], ",", 
    RowBox[{
     TemplateBox[{"\"Zika virus disease\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Disease\"", ",", "\"ZikaVirusDisease\""}], "]"}], 
       "\"Entity[\\\"Disease\\\", \\\"ZikaVirusDisease\\\"]\"", "\"disease\""},
      "Entity"], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\<\"decreasing mosquito bites\"\>", ",", "\<\"condoms\"\>"}], 
      "}"}]}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.798398898521337*^9, 3.798398917926785*^9}, 
   3.798399053188776*^9, 3.798560372521241*^9, 3.7985615756296387`*^9, 
   3.798561695827338*^9},
 CellLabel->
  "Out[77]//Short=",ExpressionUUID->"fedd48cc-0cc5-4ad9-bc72-2c22f4b1e26e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "groupings", " ", "of", " ", "infectious", " ", "diseases", " ", "by", " ",
     "prevention", " ", "measures"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Keys", "/@", 
     RowBox[{"GroupBy", "[", 
      RowBox[{"infectDisPrevention", ",", " ", "Last"}], "]"}]}], " ", "//", 
    " ", "KeySort"}], " ", "//", " ", "Dataset"}]}]], "Code",
 CellChangeTimes->{{3.7983963029637823`*^9, 3.798396356476549*^9}, {
   3.79839798355823*^9, 3.798398035218609*^9}, {3.798398987472026*^9, 
   3.798398995102655*^9}, {3.798399030892376*^9, 3.798399057498342*^9}, 
   3.798500176899787*^9, {3.798560375316806*^9, 3.798560380557214*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"81d04324-e8f2-4f24-b768-fd3aff770766"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Association[{"access to clean water"} -> {
         Entity["Disease", "ICDNine120"]}, {"diphtheria vaccines"} -> {
         Entity["Disease", "ICDNine032"]}, {"fully cook meat"} -> {
         Entity["Disease", "ICDNine124"]}, {
        "good maintenance of water systems"} -> {
         Entity["Disease", "ICDNine482.84"]}, {"handwashing"} -> {
         Entity["Disease", "ICDNine004"], 
         Entity["Disease", "ICDNine034.0"], 
         Entity["Disease", "ICDNine074.3"]}, {"hepatitis B vaccines"} -> {
         Entity["Disease", "ICDNine070.3"]}, {"measles vaccines"} -> {
         Entity["Disease", "ICDNine055"]}, {"mumps vaccines"} -> {
         Entity["Disease", "ICDNine072"]}, {"pertussis vaccines"} -> {
         Entity["Disease", "ICDNine033"]}, {"probiotics"} -> {
         Entity["Disease", "ICDNine616.1"]}, {
        "proper preparation and cooking of food"} -> {
         Entity["Disease", "ICDNine003"]}, {"rubella vaccines"} -> {
         Entity["Disease", "ICDNine056"]}, {"smallpox vaccines"} -> {
         Entity["Disease", "ICDNine050"]}, {"tetanus vaccines"} -> {
         Entity["Disease", "ICDNine037"]}, {"vaccination"} -> {
         Entity["Disease", "ICDNine070"], 
         Entity["Disease", "ICDNine322"]}, {"varicella vaccines"} -> {
         Entity["Disease", "ICDNine052"]}, {"yellow fever vaccines"} -> {
         Entity["Disease", "ICDNine060"]}, {
        "avoiding exposure", "antiviral medication"} -> {
         Entity["Disease", "ICDNine054.9"]}, {"condoms", "sexual abstinence"} -> {
         Entity["Disease", "ICDNine097"], 
         Entity["Disease", "ICDNine098"]}, {
        "coordinated medical services", "careful handling of bushmeat"} -> {
         Entity["Disease", "EbolaVirusDisease"]}, {
        "decreasing mosquito bites", "condoms"} -> {
         Entity["Disease", "ZikaVirusDisease"]}, {
        "dengue fever vaccines", "decreasing mosquito bites"} -> {
         Entity["Disease", "ICDNine061"]}, {
        "handwashing", "avoiding infected people"} -> {
         Entity["Disease", "ICDNine079.82"], 
         Entity["Disease", "MiddleEastRespiratorySyndrome"], 
         Entity["Disease", "NovelCoronavirusDisease"]}, {
        "handwashing", "terminal room cleaning in hospital"} -> {
         Entity["Disease", "ICDNine008.45"]}, {
        "handwashing", "wearing a face mask"} -> {
         Entity["Disease", "ICDNine460"]}, {"HPV vaccines", "condoms"} -> {
         Entity["Disease", "ICDNine078.11"]}, {
        "prevention of tick bites", "doxycycline"} -> {
         Entity["Disease", "ICDNine088.81"]}, {
        "proper food preparation", "no honey for children less than one"} -> {
         Entity["Disease", "ICDNine005.1"]}, {"sexual abstinence", "condoms"} -> {
         Entity["Disease", "ICDNine054.1"], 
         Entity["Disease", "ICDNine079.98"]}, {
        "using clean needles", "testing donated blood"} -> {
         Entity["Disease", "ICDNine070.7"]}, {"wound care", "handwashing"} -> {
         Entity["Disease", "ICDNine728.86"]}, {
        "decreasing mosquito bites", "insect repellent", "mosquito control"} -> {
         Entity["Disease", "ICDNine062.2"]}, {
        "handwashing", "avoiding infected people", "cleaning injuries"} -> {
         Entity["Disease", "ICDNine684"]}, {
        "handwashing", "daily bathing in the morning", 
         "daily changing of underwear"} -> {
         Entity["Disease", "ICDNine127.4"]}, {
        "handwashing", "not sharing personal items", 
         "staying away from sick people"} -> {
         Entity["Disease", "ICDNine034"]}, {
        "handwashing", "rotavirus vaccination", "breastfeeding"} -> {
         Entity["Disease", "ICDNine009.2"]}, {
        "handwashing", "wearing a surgical mask", "influenza vaccines"} -> {
         Entity["Disease", "ICDNine487"]}, {
        "improved sanitation", "access to clean water", "cholera vaccines"} -> {
         Entity["Disease", "ICDNine001"]}, {
        "improved sanitation", "treating those with taeniasis", 
         "cooking pork well"} -> {
         Entity["Disease", "ICDNine123.1"]}, {
        "rabies vaccines", "animal control", "rabies immunoglobulin"} -> {
         Entity["Disease", "ICDNine071"]}, {
        "sexual abstinence", "vaccination", "condoms"} -> {
         Entity["Disease", "ICDNine099.9"]}, {
        "vaccination", "handwashing", "not smoking"} -> {
         Entity["Disease", "ICDNine485"]}, {
        "avoiding walking barefoot in public showers", 
         "keeping toenails short", "wearing big enough shoes", 
         "changing socks daily"} -> {
         Entity["Disease", "ICDNine110.4"]}, {
        "handwashing", "drinking clean water", 
         "proper disposal of human waste", "breastfeeding"} -> {
         Entity["Disease", "ICDNine009.0"]}, {
        "mosquito nets", "insect repellent", "mosquito control", 
         "medications"} -> {
         Entity["Disease", "ICDNine084"]}], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[False], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Vector[
        TypeSystem`Atom[String], TypeSystem`AnyLength], 
       TypeSystem`Vector[
        TypeSystem`Atom[
         Entity["Disease"]], TypeSystem`AnyLength], 45], "Meta" -> 
     Association["ID" -> 12167843391664], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[False], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Vector[
        TypeSystem`Atom[String], TypeSystem`AnyLength], 
       TypeSystem`Vector[
        TypeSystem`Atom[
         Entity["Disease"]], TypeSystem`AnyLength], 45], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 45, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"access to clean water"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"access to clean water"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"access to clean water"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"access to clean water"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine120"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine120"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"access to clean water"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"access to clean water"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"diphtheria vaccines"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"diphtheria vaccines"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"diphtheria vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"diphtheria vaccines"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine032"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine032"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"diphtheria vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"diphtheria vaccines"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"fully cook meat"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"fully cook meat"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"fully cook meat"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"fully cook meat"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine124"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine124"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"fully cook meat"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"fully cook meat"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"good maintenance of water systems"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"good maintenance of water systems"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"good maintenance of water systems"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"good maintenance of water systems"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine482.84"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine482.84"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"good maintenance of water systems"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"good maintenance of water systems"}]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"handwashing"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"handwashing"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"handwashing"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"handwashing"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine004"], 
                    Entity["Disease", "ICDNine034.0"], 
                    Entity["Disease", "ICDNine074.3"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine004"], 
                    Entity["Disease", "ICDNine034.0"], 
                    Entity["Disease", "ICDNine074.3"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"handwashing"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"handwashing"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"hepatitis B vaccines"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"hepatitis B vaccines"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"hepatitis B vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"hepatitis B vaccines"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine070.3"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine070.3"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"hepatitis B vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"hepatitis B vaccines"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"measles vaccines"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"measles vaccines"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"measles vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"measles vaccines"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine055"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine055"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"measles vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"measles vaccines"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"mumps vaccines"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"mumps vaccines"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"mumps vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"mumps vaccines"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine072"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine072"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"mumps vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"mumps vaccines"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pertussis vaccines"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"pertussis vaccines"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"pertussis vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pertussis vaccines"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine033"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine033"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"pertussis vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pertussis vaccines"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"probiotics"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"probiotics"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"probiotics"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"probiotics"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine616.1"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine616.1"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"probiotics"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"probiotics"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"proper preparation and cooking of food"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"proper preparation and cooking of food"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"proper preparation and cooking of food"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"proper preparation and cooking of food"}]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine003"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine003"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"proper preparation and cooking of food"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"proper preparation and cooking of food"}]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"rubella vaccines"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"rubella vaccines"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"rubella vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"rubella vaccines"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine056"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine056"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"rubella vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"rubella vaccines"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"smallpox vaccines"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"smallpox vaccines"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"smallpox vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"smallpox vaccines"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine050"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine050"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"smallpox vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"smallpox vaccines"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"tetanus vaccines"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"tetanus vaccines"}, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"tetanus vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"tetanus vaccines"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine037"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine037"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"tetanus vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"tetanus vaccines"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"vaccination"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"vaccination"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"vaccination"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"vaccination"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine070"], 
                    Entity["Disease", "ICDNine322"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine070"], 
                    Entity["Disease", "ICDNine322"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"vaccination"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"vaccination"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"varicella vaccines"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"varicella vaccines"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"varicella vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"varicella vaccines"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine052"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine052"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"varicella vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"varicella vaccines"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"yellow fever vaccines"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"yellow fever vaccines"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"yellow fever vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"yellow fever vaccines"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine060"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine060"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"yellow fever vaccines"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"yellow fever vaccines"}]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"avoiding exposure", "antiviral medication"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"avoiding exposure", "antiviral medication"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"avoiding exposure", "antiviral medication"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"avoiding exposure", "antiviral medication"}]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine054.9"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine054.9"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"avoiding exposure", "antiviral medication"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"avoiding exposure", "antiviral medication"}]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"condoms", "sexual abstinence"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"condoms", "sexual abstinence"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"condoms", "sexual abstinence"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"condoms", "sexual abstinence"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "ICDNine097"], 
                    Entity["Disease", "ICDNine098"]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    Entity["Disease", "ICDNine097"], 
                    Entity["Disease", "ICDNine098"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key[{"condoms", "sexual abstinence"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"condoms", "sexual abstinence"}]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"coordinated medical services", 
                    "careful handling of bushmeat"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"coordinated medical services", 
                    "careful handling of bushmeat"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   
                   Key[{"coordinated medical services", 
                    "careful handling of bushmeat"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 
                 Key[{"coordinated medical services", 
                   "careful handling of bushmeat"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["Disease", "EbolaVirusDisease"]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    Entity["Disease", "EbolaVirusDisease"]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   
                   Key[{"coordinated medical services", 
                    "careful handling of bushmeat"}]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 
                 Key[{"coordinated medical services", 
                   "careful handling of bushmeat"}]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 45, 1], {1, 45 - -20 + 1}], Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 45, 1], {1, 45 - -20 + 1}], Appearance -> None],
                     " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    45, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    45, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 45, 1], {1, 45 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 45, 1], {1, 45 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
      ImageSizeCache->{838., {345.634033203125, 351.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{838., {345.634033203125, 351.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.798396305058441*^9, {3.798396346684471*^9, 3.798396357767138*^9}, {
   3.798397983953809*^9, 3.7983979989427843`*^9}, 3.798398035533699*^9, 
   3.798398976084126*^9, {3.798399036012288*^9, 3.798399058198819*^9}, 
   3.798560381933013*^9, 3.7985615766888857`*^9, 3.7985616960063*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"798643a5-5ac1-412a-a1b3-aa8b4d89ffec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"similarity", " ", "between", " ", "prevention", " ", "measures"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Magnify", "[", 
   RowBox[{
    RowBox[{"ClusteringTree", "[", "\n", 
     RowBox[{
      RowBox[{"Values", "@", "infectDisPrevention"}], ",", " ", 
      RowBox[{"VertexShapeFunction", "\[Rule]", "\"\<Name\>\""}], ",", " ", 
      RowBox[{"GraphLayout", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<LayeredEmbedding\>\"", ",", " ", 
         RowBox[{"\"\<Orientation\>\"", "\[Rule]", "Left"}], ",", " ", 
         RowBox[{"\"\<LeafDistance\>\"", "\[Rule]", "1"}], ",", " ", 
         RowBox[{"LayerSizeFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"1", "&"}], ")"}]}]}], "}"}]}], ",", " ", "\n", 
      RowBox[{"ImageSize", "\[Rule]", "1500"}], ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}], ",", " ", ".8"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.798398528004325*^9, 3.7983987380260277`*^9}, {
  3.7983989213580236`*^9, 3.7983989595497513`*^9}, {3.7983989977679777`*^9, 
  3.798399024149785*^9}, {3.7983990636037283`*^9, 3.7983990637794943`*^9}, {
  3.798500192175329*^9, 3.798500219268301*^9}, {3.798560405954101*^9, 
  3.798560407578126*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"a8baeccc-8c10-44a2-a084-55e988af868e"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
       19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
        37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 
       54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
        72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 
       89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103}, {
       Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {6, 8}, {8, 
        9}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}, {14, 15}, {15, 
        16}, {15, 17}, {17, 18}, {18, 19}, {19, 20}, {19, 21}, {21, 22}, {22, 
        23}, {23, 24}, {24, 25}, {25, 26}, {26, 27}, {27, 28}, {28, 29}, {29, 
        30}, {30, 31}, {31, 32}, {32, 33}, {33, 34}, {34, 35}, {35, 36}, {36, 
        37}, {37, 38}, {38, 39}, {39, 40}, {40, 41}, {41, 42}, {42, 43}, {43, 
        44}, {44, 45}, {45, 46}, {45, 47}, {47, 48}, {47, 49}, {44, 50}, {50, 
        51}, {50, 52}, {52, 53}, {52, 54}, {43, 55}, {55, 56}, {56, 57}, {57, 
        58}, {57, 59}, {59, 60}, {59, 61}, {61, 62}, {61, 63}, {56, 64}, {55, 
        65}, {65, 66}, {65, 67}, {42, 68}, {41, 69}, {40, 70}, {39, 71}, {38, 
        72}, {37, 73}, {36, 74}, {35, 75}, {34, 76}, {33, 77}, {32, 78}, {31, 
        79}, {30, 80}, {29, 81}, {28, 82}, {27, 83}, {26, 84}, {25, 85}, {24, 
        86}, {23, 87}, {22, 88}, {21, 89}, {18, 90}, {17, 91}, {14, 92}, {13, 
        93}, {12, 94}, {11, 95}, {10, 96}, {9, 97}, {8, 98}, {5, 99}, {4, 
        100}, {3, 101}, {2, 102}, {1, 103}}}, {
       AlignmentPoint -> Center, 
        AnnotationRules -> {
         "GraphProperties" -> {
           "LeafLabels" -> 
            Association[
             7 -> {"coordinated medical services", 
                "careful handling of bushmeat"}, 
              16 -> {"improved sanitation", "access to clean water", 
                "cholera vaccines"}, 
              20 -> {"proper preparation and cooking of food"}, 
              46 -> {"handwashing"}, 48 -> {"handwashing"}, 
              49 -> {"handwashing"}, 
              51 -> {"handwashing", "avoiding infected people"}, 
              53 -> {"handwashing", "avoiding infected people"}, 
              54 -> {"handwashing", "avoiding infected people"}, 
              58 -> {"sexual abstinence", "condoms"}, 
              60 -> {"sexual abstinence", "condoms"}, 
              62 -> {"condoms", "sexual abstinence"}, 
              63 -> {"condoms", "sexual abstinence"}, 
              64 -> {"sexual abstinence", "vaccination", "condoms"}, 
              66 -> {"vaccination"}, 67 -> {"vaccination"}, 
              68 -> {"decreasing mosquito bites", "condoms"}, 
              69 -> {"handwashing", "avoiding infected people", 
                "cleaning injuries"}, 70 -> {"wound care", "handwashing"}, 
              71 -> {"handwashing", "wearing a face mask"}, 
              72 -> {"handwashing", "terminal room cleaning in hospital"}, 
              73 -> {"access to clean water"}, 
              74 -> {"vaccination", "handwashing", "not smoking"}, 
              75 -> {"dengue fever vaccines", "decreasing mosquito bites"}, 
              76 -> {"HPV vaccines", "condoms"}, 77 -> {"probiotics"}, 
              78 -> {"fully cook meat"}, 79 -> {"mumps vaccines"}, 
              80 -> {"hepatitis B vaccines"}, 81 -> {"yellow fever vaccines"},
               82 -> {"rubella vaccines"}, 83 -> {"measles vaccines"}, 
              84 -> {"varicella vaccines"}, 85 -> {"smallpox vaccines"}, 
              86 -> {"tetanus vaccines"}, 87 -> {"pertussis vaccines"}, 
              88 -> {"diphtheria vaccines"}, 
              89 -> {"good maintenance of water systems"}, 
              90 -> {"decreasing mosquito bites", "insect repellent", 
                "mosquito control"}, 
              91 -> {"handwashing", "rotavirus vaccination", "breastfeeding"},
               92 -> {"handwashing", "not sharing personal items", 
                "staying away from sick people"}, 
              93 -> {"handwashing", "daily bathing in the morning", 
                "daily changing of underwear"}, 
              94 -> {"handwashing", "wearing a surgical mask", 
                "influenza vaccines"}, 
              95 -> {"prevention of tick bites", "doxycycline"}, 
              96 -> {"avoiding exposure", "antiviral medication"}, 
              97 -> {"proper food preparation", 
                "no honey for children less than one"}, 
              98 -> {"using clean needles", "testing donated blood"}, 
              99 -> {
               "mosquito nets", "insect repellent", "mosquito control", 
                "medications"}, 
              100 -> {"handwashing", "drinking clean water", 
                "proper disposal of human waste", "breastfeeding"}, 
              101 -> {"improved sanitation", "treating those with taeniasis", 
                "cooking pork well"}, 
              102 -> {"rabies vaccines", "animal control", 
                "rabies immunoglobulin"}, 
              103 -> {"avoiding walking barefoot in public showers", 
                "keeping toenails short", "wearing big enough shoes", 
                "changing socks daily"}]}}, AspectRatio -> GoldenRatio^(-1), 
        Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, 
        AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, 
        BaseStyle -> {}, ContentSelectable -> Automatic, EdgeLabels -> {None},
         EdgeStyle -> {
          GrayLevel[0.65]}, Editable -> False, Epilog -> {}, FormatType -> 
        TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {},
         FrameTicks -> None, FrameTicksStyle -> {}, 
        GraphLayout -> {
         "LayeredEmbedding", "Orientation" -> Left, "LeafDistance" -> 1, 
          LayerSizeFunction -> (1& )}, GraphStyle -> Automatic, GridLines -> 
        None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
        ImageSize -> 1500, LabelStyle -> {}, PerformanceGoal -> "Speed", 
        PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, 
        PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotTheme -> 
        Automatic, Prolog -> {}, RotateLabel -> True, Ticks -> Automatic, 
        TicksStyle -> {}, VertexLabels -> {68 -> Placed[
            Framed[
             Short[{"decreasing mosquito bites", "condoms"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          83 -> Placed[
            Framed[
             Short[{"measles vaccines"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 99 -> Placed[
            Framed[
             
             Short[{"mosquito nets", "insect repellent", "mosquito control", 
               "medications"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 100 -> Placed[
            Framed[
             
             Short[{"handwashing", "drinking clean water", 
               "proper disposal of human waste", "breastfeeding"}], 
             Background -> GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          85 -> Placed[
            Framed[
             Short[{"smallpox vaccines"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 92 -> Placed[
            Framed[
             
             Short[{"handwashing", "not sharing personal items", 
               "staying away from sick people"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 72 -> Placed[
            Framed[
             Short[{"handwashing", "terminal room cleaning in hospital"}], 
             Background -> GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          66 -> Placed[
            Framed[
             Short[{"vaccination"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 62 -> Placed[
            Framed[
             Short[{"condoms", "sexual abstinence"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          48 -> Placed[
            Framed[
             Short[{"handwashing"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 87 -> Placed[
            Framed[
             Short[{"pertussis vaccines"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 73 -> Placed[
            Framed[
             Short[{"access to clean water"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 69 -> Placed[
            Framed[
             
             Short[{"handwashing", "avoiding infected people", 
               "cleaning injuries"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 78 -> Placed[
            Framed[
             Short[{"fully cook meat"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 82 -> Placed[
            Framed[
             Short[{"rubella vaccines"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 101 -> Placed[
            Framed[
             
             Short[{"improved sanitation", "treating those with taeniasis", 
               "cooking pork well"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 96 -> Placed[
            Framed[
             Short[{"avoiding exposure", "antiviral medication"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          95 -> Placed[
            Framed[
             Short[{"prevention of tick bites", "doxycycline"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          49 -> Placed[
            Framed[
             Short[{"handwashing"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 20 -> Placed[
            Framed[
             Short[{"proper preparation and cooking of food"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          60 -> Placed[
            Framed[
             Short[{"sexual abstinence", "condoms"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          89 -> Placed[
            Framed[
             Short[{"good maintenance of water systems"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          46 -> Placed[
            Framed[
             Short[{"handwashing"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 74 -> Placed[
            Framed[
             Short[{"vaccination", "handwashing", "not smoking"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          98 -> Placed[
            Framed[
             Short[{"using clean needles", "testing donated blood"}], 
             Background -> GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          16 -> Placed[
            Framed[
             
             Short[{"improved sanitation", "access to clean water", 
               "cholera vaccines"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 76 -> Placed[
            Framed[
             Short[{"HPV vaccines", "condoms"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 103 -> Placed[
            Framed[
             
             Short[{"avoiding walking barefoot in public showers", 
               "keeping toenails short", "wearing big enough shoes", 
               "changing socks daily"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 63 -> Placed[
            Framed[
             Short[{"condoms", "sexual abstinence"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          86 -> Placed[
            Framed[
             Short[{"tetanus vaccines"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 90 -> Placed[
            Framed[
             
             Short[{"decreasing mosquito bites", "insect repellent", 
               "mosquito control"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 75 -> Placed[
            Framed[
             Short[{"dengue fever vaccines", "decreasing mosquito bites"}], 
             Background -> GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          91 -> Placed[
            Framed[
             Short[{"handwashing", "rotavirus vaccination", "breastfeeding"}],
              Background -> GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          94 -> Placed[
            Framed[
             
             Short[{"handwashing", "wearing a surgical mask", 
               "influenza vaccines"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 77 -> Placed[
            Framed[
             Short[{"probiotics"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 88 -> Placed[
            Framed[
             Short[{"diphtheria vaccines"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 97 -> Placed[
            Framed[
             
             Short[{"proper food preparation", 
               "no honey for children less than one"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          80 -> Placed[
            Framed[
             Short[{"hepatitis B vaccines"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 102 -> Placed[
            Framed[
             
             Short[{"rabies vaccines", "animal control", 
               "rabies immunoglobulin"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 70 -> Placed[
            Framed[
             Short[{"wound care", "handwashing"}], Background -> GrayLevel[1],
              FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 67 -> Placed[
            Framed[
             Short[{"vaccination"}], Background -> GrayLevel[1], FrameStyle -> 
             GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 
             2], Center], 81 -> Placed[
            Framed[
             Short[{"yellow fever vaccines"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 7 -> Placed[
            Framed[
             
             Short[{"coordinated medical services", 
               "careful handling of bushmeat"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 79 -> Placed[
            Framed[
             Short[{"mumps vaccines"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 64 -> Placed[
            Framed[
             Short[{"sexual abstinence", "vaccination", "condoms"}], 
             Background -> GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          51 -> Placed[
            Framed[
             Short[{"handwashing", "avoiding infected people"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          54 -> Placed[
            Framed[
             Short[{"handwashing", "avoiding infected people"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          53 -> Placed[
            Framed[
             Short[{"handwashing", "avoiding infected people"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          71 -> Placed[
            Framed[
             Short[{"handwashing", "wearing a face mask"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          93 -> Placed[
            Framed[
             
             Short[{"handwashing", "daily bathing in the morning", 
               "daily changing of underwear"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center], 58 -> Placed[
            Framed[
             Short[{"sexual abstinence", "condoms"}], Background -> 
             GrayLevel[1], FrameStyle -> GrayLevel[1], 
             FrameMargins -> {{0, 0}, {0, 0}}, RoundingRadius -> 2], Center], 
          84 -> Placed[
            Framed[
             Short[{"varicella vaccines"}], Background -> GrayLevel[1], 
             FrameStyle -> GrayLevel[1], FrameMargins -> {{0, 0}, {0, 0}}, 
             RoundingRadius -> 2], Center]}, 
        VertexShape -> {
         79 -> Null, 12 -> Null, 16 -> Null, 52 -> Null, 60 -> Null, 45 -> 
          Null, 8 -> Null, 2 -> Null, 103 -> Null, 89 -> Null, 15 -> Null, 33 -> 
          Null, 97 -> Null, 93 -> Null, 10 -> Null, 61 -> Null, 57 -> Null, 
          71 -> Null, 44 -> Null, 53 -> Null, 94 -> Null, 68 -> Null, 4 -> 
          Null, 90 -> Null, 14 -> Null, 7 -> Null, 29 -> Null, 6 -> Null, 5 -> 
          Null, 20 -> Null, 9 -> Null, 43 -> Null, 74 -> Null, 77 -> Null, 
          101 -> Null, 55 -> Null, 11 -> Null, 34 -> Null, 41 -> Null, 75 -> 
          Null, 72 -> Null, 18 -> Null, 58 -> Null, 66 -> Null, 67 -> Null, 
          24 -> Null, 78 -> Null, 100 -> Null, 32 -> Null, 40 -> Null, 64 -> 
          Null, 48 -> Null, 28 -> Null, 30 -> Null, 3 -> Null, 50 -> Null, 42 -> 
          Null, 102 -> Null, 96 -> Null, 22 -> Null, 39 -> Null, 26 -> Null, 
          65 -> Null, 91 -> Null, 85 -> Null, 19 -> Null, 17 -> Null, 54 -> 
          Null, 88 -> Null, 82 -> Null, 36 -> Null, 59 -> Null, 92 -> Null, 
          81 -> Null, 62 -> Null, 23 -> Null, 21 -> Null, 84 -> Null, 35 -> 
          Null, 13 -> Null, 98 -> Null, 63 -> Null, 56 -> Null, 37 -> Null, 
          25 -> Null, 51 -> Null, 76 -> Null, 73 -> Null, 1 -> Null, 46 -> 
          Null, 27 -> Null, 70 -> Null, 86 -> Null, 69 -> Null, 38 -> Null, 
          49 -> Null, 80 -> Null, 31 -> Null, 47 -> Null, 83 -> Null, 99 -> 
          Null, 87 -> Null, 95 -> Null}, VertexShapeFunction -> {"Name"}, 
        VertexSize -> {0}, 
        VertexWeight -> {
         14.99504433164001, 13.108460880847606`, 12.076925884577363`, 
          11.512338591357787`, 10.973194680498326`, 10.900098110639862`, 0, 
          10.900098110639862`, 10.900098110639862`, 10.900098110639862`, 
          10.900098110639862`, 10.552522397891016`, 10.552522397891016`, 
          10.552522397891016`, 9.941624974078758, 0, 9.629073478892154, 
          8.96551716762432, 8.11125951862209, 0, 8.11125951862209, 
          8.11125951862209, 8.11125951862209, 8.11125951862209, 
          8.11125951862209, 8.11125951862209, 8.11125951862209, 
          8.11125951862209, 8.11125951862209, 8.11125951862209, 
          8.11125951862209, 8.11125951862209, 8.11125951862209, 
          7.937064507881698, 7.893221160169167, 7.838253285104804, 
          7.775128909369833, 7.477697660081361, 7.477697660081361, 
          7.477697660081361, 7.421310801091638, 5.690442628106799, 
          5.10337084670781, 4.376333076210596, 0., 0, 0., 0, 0, 0., 0, 0., 0, 
          0, 4.519317623940267, 2.3255267619028697`, 0., 0, 0., 0, 0., 0, 0, 
          0, 0., 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}]]}, 
     TagBox[GraphicsGroupBox[{
        {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJx1l1tIVFEUhicHoknFypJMQ8cZp8nrqNBNxd1LUDAPWWaY5q0kMjIpC1Qs
L1FG2EOoYFCIQVkRFD0UKIglXgrM7hmYFhmVg1mhWBLFnn8RrcMS5mHzffzn
nL3XXntrLShJ32s2mUxFf38++J0u2FfqakxQJvyNtL2faepzqTL7s84bd1+k
cZ5o9Xzuz08U/eKBzrmfM/GqVo/H06S8MnDuB7vvWPp2x6nckNyG6oVTYt5O
cO73Dl4LauyJgT8t5lWCc/9wequtICZatcZu9rwsmhPzWsAl3/u8eYpz6/Nm
V/z51aoQnI8HMxtS52ZXqe+Xgh3NY2YDp7xJcO4fH67b0p/nUDX6fecbuA15
xLkfm1OR2dRrV4vaGzK6z1kMfAh5xLn/+m3pnsI4m2rT3+sn5rWCc/+Urg+r
SrptPulJDRDzEsC5v1+vbxjma7GYlw/O/QG9fqHqek5Klt/RJQZej7x2cO4f
hD+l5zvQwB16/oPVN3A+rtLzE6Q2vJuesrqXGTjlrQfn/rD+vkDUa5CYVwMu
+QNFt+rX2pcb+AH9fQHqITgf23W+RQXq9Q42cMojzv1XmptV9pdiq/vXCjEv
C5z74dqfTfPWS6iYR5z73vGnNE+J417Bk5Vi3sR//J9PfTH5ZpL/5OMIA3ci
z1uPYQbfBd+7vpEGrsBP6PVwGHwX8pduXHA2u9ku8l21HzI/+jgM/ii+76uu
N5vI1yGP+07M76PfUV1D0TaRByKP+7S+V/V+iTDwI+CTyOM+1Vddh/vHpi6r
gY+AUx73qf7z9H63ivwK8rhP+yul/JCzY3u4yCmP+7S/41EfEs9FHvep/4yj
3iSejDzuU3+7iHqXeBzyuP8G/XUH9pvEKY/71N8DsN8lTnncr8b50oN+I/EM
5HH/Kc63KvQ7ifsjj/uROF/XoN9K/AHyuH8M57sH/V7ilcjjPt0/fHHect4P
vg3fz32630zgviDxKJyn3Kf7Fd1/JF6J+wQf0/1O8olL70P+BdwXJJ6N85yP
Kd8p+KPgl3Ge8/kMwfPuY30lPob6534JnleB9ZW4L+qP+/R+iagXiXcjj4/P
4H5eLvjELXg+H9P/B5JPfKswH/S+LdjfEnei//wBiWakLQ==
          "]]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], InsetBox[
          PaneBox["1",
           Alignment->Center,
           ImageMargins->2], {17.58277043150386, 0.}, Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["2",
           Alignment->Center,
           ImageMargins->2], {16.783553593708227, 0.35502165353734166}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["3",
           Alignment->Center,
           ImageMargins->2], {15.984336755912599, 0.7100433070746849}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["4",
           Alignment->Center,
           ImageMargins->2], {15.18511991811697, 1.0650649606120266}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["5",
           Alignment->Center,
           ImageMargins->2], {14.38590308032134, 1.4200866141493698}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["6",
           Alignment->Center,
           ImageMargins->2], {13.586686242525706, 1.7751082676867116}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], {InsetBox[
           PaneBox["7",
            Alignment->Center,
            ImageMargins->2], {14.38590308032134, 2.130129921224053}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"coordinated medical services\"\>", 
              ",", "\<\"careful handling of bushmeat\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {14.38590308032134, 2.130129921224053},
           BaseStyle->"Graphics"]}, InsetBox[
          PaneBox["8",
           Alignment->Center,
           ImageMargins->2], {12.787469404730077, 2.130129921224055}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["9",
           Alignment->Center,
           ImageMargins->2], {11.988252566934447, 2.4851515747613973}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["10",
           Alignment->Center,
           ImageMargins->2], {11.189035729138821, 2.840173228298739}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["11",
           Alignment->Center,
           ImageMargins->2], {10.389818891343191, 3.1951948818360805}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["12",
           Alignment->Center,
           ImageMargins->2], {9.590602053547558, 3.550216535373424}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["13",
           Alignment->Center,
           ImageMargins->2], {8.791385215751928, 3.9052381889107664}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["14",
           Alignment->Center,
           ImageMargins->2], {7.992168377956299, 4.26025984244811}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["15",
           Alignment->Center,
           ImageMargins->2], {7.1929515401606725, 4.615281495985452}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], {InsetBox[
           PaneBox["16",
            Alignment->Center,
            ImageMargins->2], {7.992168377956302, 4.970303149522793}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"improved sanitation\"\>", 
              ",", "\<\"access to clean water\"\>", 
              ",", "\<\"cholera vaccines\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {7.992168377956302, 4.970303149522793},
           BaseStyle->"Graphics"]}, InsetBox[
          PaneBox["17",
           Alignment->Center,
           ImageMargins->2], {6.393734702365043, 4.970303149522794}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["18",
           Alignment->Center,
           ImageMargins->2], {5.59451786456941, 5.325324803060136}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["19",
           Alignment->Center,
           ImageMargins->2], {4.79530102677378, 5.680346456597479}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], {InsetBox[
           PaneBox["20",
            Alignment->Center,
            ImageMargins->2], {5.59451786456941, 6.03536811013482}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{
            "{", "\<\"proper preparation and cooking of food\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {5.59451786456941, 6.03536811013482},
           BaseStyle->"Graphics"]}, InsetBox[
          PaneBox["21",
           Alignment->Center,
           ImageMargins->2], {3.99608418897815, 6.035368110134821}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["22",
           Alignment->Center,
           ImageMargins->2], {3.1968673511825205, 6.390389763672164}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["23",
           Alignment->Center,
           ImageMargins->2], {2.397650513386889, 6.745411417209507}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["24",
           Alignment->Center,
           ImageMargins->2], {1.5984336755912594, 7.100433070746848}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["25",
           Alignment->Center,
           ImageMargins->2], {0.7992168377956297, 7.455454724284192}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["26",
           Alignment->Center,
           ImageMargins->2], {0., 9.408073818739572}, Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["27",
           Alignment->Center,
           ImageMargins->2], {0.7992168377956315, 10.65064960612027}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["28",
           Alignment->Center,
           ImageMargins->2], {1.598433675591263, 10.295627952582926}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["29",
           Alignment->Center,
           ImageMargins->2], {2.3976505133868926, 9.940606299045584}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["30",
           Alignment->Center,
           ImageMargins->2], {3.1968673511825223, 9.585584645508241}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["31",
           Alignment->Center,
           ImageMargins->2], {3.99608418897815, 9.2305629919709}, Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["32",
           Alignment->Center,
           ImageMargins->2], {4.79530102677378, 8.875541338433557}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["33",
           Alignment->Center,
           ImageMargins->2], {5.59451786456941, 8.520519684896215}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["34",
           Alignment->Center,
           ImageMargins->2], {6.393734702365043, 8.165498031358872}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["35",
           Alignment->Center,
           ImageMargins->2], {7.1929515401606725, 7.810476377821529}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["36",
           Alignment->Center,
           ImageMargins->2], {7.992168377956302, 7.455454724284186}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["37",
           Alignment->Center,
           ImageMargins->2], {8.791385215751932, 7.100433070746844}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["38",
           Alignment->Center,
           ImageMargins->2], {9.590602053547562, 6.745411417209501}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["39",
           Alignment->Center,
           ImageMargins->2], {10.389818891343191, 6.39038976367216}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["40",
           Alignment->Center,
           ImageMargins->2], {11.189035729138824, 6.035368110134816}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["41",
           Alignment->Center,
           ImageMargins->2], {11.988252566934454, 5.680346456597475}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["42",
           Alignment->Center,
           ImageMargins->2], {12.787469404730084, 5.325324803060132}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["43",
           Alignment->Center,
           ImageMargins->2], {13.586686242525714, 4.970303149522789}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["44",
           Alignment->Center,
           ImageMargins->2], {14.38590308032134, 3.1951948818360782}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["45",
           Alignment->Center,
           ImageMargins->2], {15.18511991811697, 2.485151574761394}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], {InsetBox[
           PaneBox["46",
            Alignment->Center,
            ImageMargins->2], {15.984336755912599, 2.130129921224053}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"handwashing\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {15.984336755912599, 2.130129921224053},
           BaseStyle->"Graphics"]}, InsetBox[
          PaneBox["47",
           Alignment->Center,
           ImageMargins->2], {15.984336755912599, 2.8401732282987364}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], {InsetBox[
           PaneBox["48",
            Alignment->Center,
            ImageMargins->2], {16.783553593708227, 2.485151574761394}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"handwashing\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {16.783553593708227, 2.485151574761394},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["49",
            Alignment->Center,
            ImageMargins->2], {16.783553593708227, 3.1951948818360782}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"handwashing\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {16.783553593708227, 3.1951948818360782},
           BaseStyle->"Graphics"]}, InsetBox[
          PaneBox["50",
           Alignment->Center,
           ImageMargins->2], {15.18511991811697, 3.9052381889107624}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], {InsetBox[
           PaneBox["51",
            Alignment->Center,
            ImageMargins->2], {15.984336755912599, 3.5502165353734205}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"handwashing\"\>", 
              ",", "\<\"avoiding infected people\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {15.984336755912599, 3.5502165353734205},
           BaseStyle->"Graphics"]}, InsetBox[
          PaneBox["52",
           Alignment->Center,
           ImageMargins->2], {15.984336755912599, 4.260259842448104}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], {InsetBox[
           PaneBox["53",
            Alignment->Center,
            ImageMargins->2], {16.783553593708227, 3.9052381889107615}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"handwashing\"\>", 
              ",", "\<\"avoiding infected people\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {16.783553593708227, 3.9052381889107615},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["54",
            Alignment->Center,
            ImageMargins->2], {16.783553593708234, 4.615281495985446}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"handwashing\"\>", 
              ",", "\<\"avoiding infected people\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {16.783553593708234, 4.615281495985446},
           BaseStyle->"Graphics"]}, InsetBox[
          PaneBox["55",
           Alignment->Center,
           ImageMargins->2], {14.385903080321343, 6.745411417209499}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["56",
           Alignment->Center,
           ImageMargins->2], {15.185119918116973, 6.035368110134814}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], InsetBox[
          PaneBox["57",
           Alignment->Center,
           ImageMargins->2], {15.984336755912606, 5.680346456597472}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], {InsetBox[
           PaneBox["58",
            Alignment->Center,
            ImageMargins->2], {16.783553593708234, 5.325324803060129}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             RowBox[{"\<\"sexual abstinence\"\>", ",", "\<\"condoms\"\>"}], 
             "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {16.783553593708234, 5.325324803060129},
           BaseStyle->"Graphics"]}, InsetBox[
          PaneBox["59",
           Alignment->Center,
           ImageMargins->2], {16.783553593708234, 6.035368110134813}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], {InsetBox[
           PaneBox["60",
            Alignment->Center,
            ImageMargins->2], {17.582770431503867, 5.680346456597471}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             RowBox[{"\<\"sexual abstinence\"\>", ",", "\<\"condoms\"\>"}], 
             "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {17.582770431503867, 5.680346456597471},
           BaseStyle->"Graphics"]}, InsetBox[
          PaneBox["61",
           Alignment->Center,
           ImageMargins->2], {17.582770431503867, 6.390389763672155}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], {InsetBox[
           PaneBox["62",
            Alignment->Center,
            ImageMargins->2], {18.381987269299493, 6.035368110134813}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             RowBox[{"\<\"condoms\"\>", ",", "\<\"sexual abstinence\"\>"}], 
             "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {18.381987269299493, 6.035368110134813},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["63",
            Alignment->Center,
            ImageMargins->2], {18.381987269299493, 6.745411417209497}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             RowBox[{"\<\"condoms\"\>", ",", "\<\"sexual abstinence\"\>"}], 
             "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {18.381987269299493, 6.745411417209497},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["64",
            Alignment->Center,
            ImageMargins->2], {15.984336755912606, 6.3903897636721565}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"sexual abstinence\"\>", ",", "\<\"vaccination\"\>", 
              ",", "\<\"condoms\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {15.984336755912606, 6.3903897636721565},
           BaseStyle->"Graphics"]}, InsetBox[
          PaneBox["65",
           Alignment->Center,
           ImageMargins->2], {15.185119918116973, 7.4554547242841815}, 
          Automatic, {0., 0.},
          BaseStyle->"Graphics"], {InsetBox[
           PaneBox["66",
            Alignment->Center,
            ImageMargins->2], {15.984336755912606, 7.10043307074684}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"vaccination\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {15.984336755912606, 7.10043307074684},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["67",
            Alignment->Center,
            ImageMargins->2], {15.984336755912606, 7.810476377821523}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"vaccination\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {15.984336755912606, 7.810476377821523},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["68",
            Alignment->Center,
            ImageMargins->2], {13.586686242525714, 5.680346456597473}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"decreasing mosquito bites\"\>", 
              ",", "\<\"condoms\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {13.586686242525714, 5.680346456597473},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["69",
            Alignment->Center,
            ImageMargins->2], {12.787469404730084, 6.035368110134815}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"handwashing\"\>", 
              ",", "\<\"avoiding infected people\"\>", 
              ",", "\<\"cleaning injuries\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {12.787469404730084, 6.035368110134815},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["70",
            Alignment->Center,
            ImageMargins->2], {11.988252566934454, 6.390389763672158}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             RowBox[{"\<\"wound care\"\>", ",", "\<\"handwashing\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {11.988252566934454, 6.390389763672158},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["71",
            Alignment->Center,
            ImageMargins->2], {11.189035729138824, 6.7454114172095005}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"handwashing\"\>", 
              ",", "\<\"wearing a face mask\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {11.189035729138824, 6.7454114172095005},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["72",
            Alignment->Center,
            ImageMargins->2], {10.389818891343191, 7.100433070746844}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"handwashing\"\>", 
              ",", "\<\"terminal room cleaning in hospital\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {10.389818891343191, 7.100433070746844},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["73",
            Alignment->Center,
            ImageMargins->2], {9.590602053547562, 7.455454724284186}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"access to clean water\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {9.590602053547562, 7.455454724284186},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["74",
            Alignment->Center,
            ImageMargins->2], {8.791385215751932, 7.810476377821528}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"vaccination\"\>", ",", "\<\"handwashing\"\>", 
              ",", "\<\"not smoking\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {8.791385215751932, 7.810476377821528},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["75",
            Alignment->Center,
            ImageMargins->2], {7.992168377956302, 8.16549803135887}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"dengue fever vaccines\"\>", 
              ",", "\<\"decreasing mosquito bites\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {7.992168377956302, 8.16549803135887},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["76",
            Alignment->Center,
            ImageMargins->2], {7.1929515401606725, 8.520519684896213}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             RowBox[{"\<\"HPV vaccines\"\>", ",", "\<\"condoms\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {7.1929515401606725, 8.520519684896213},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["77",
            Alignment->Center,
            ImageMargins->2], {6.393734702365043, 8.875541338433557}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"probiotics\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {6.393734702365043, 8.875541338433557},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["78",
            Alignment->Center,
            ImageMargins->2], {5.59451786456941, 9.230562991970897}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"fully cook meat\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {5.59451786456941, 9.230562991970897},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["79",
            Alignment->Center,
            ImageMargins->2], {4.7953010267737834, 9.585584645508241}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"mumps vaccines\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {4.7953010267737834, 9.585584645508241},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["80",
            Alignment->Center,
            ImageMargins->2], {3.9960841889781538, 9.940606299045582}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"hepatitis B vaccines\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {3.9960841889781538, 9.940606299045582},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["81",
            Alignment->Center,
            ImageMargins->2], {3.1968673511825223, 10.295627952582924}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"yellow fever vaccines\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {3.1968673511825223, 10.295627952582924},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["82",
            Alignment->Center,
            ImageMargins->2], {2.3976505133868926, 10.650649606120268}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"rubella vaccines\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {2.3976505133868926, 10.650649606120268},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["83",
            Alignment->Center,
            ImageMargins->2], {1.598433675591263, 11.005671259657609}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"measles vaccines\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {1.598433675591263, 11.005671259657609},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["84",
            Alignment->Center,
            ImageMargins->2], {0.7992168377956332, 11.360692913194953}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"varicella vaccines\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {0.7992168377956332, 11.360692913194953},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["85",
            Alignment->Center,
            ImageMargins->2], {1.5984336755912611, 7.810476377821533}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"smallpox vaccines\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {1.5984336755912611, 7.810476377821533},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["86",
            Alignment->Center,
            ImageMargins->2], {2.397650513386889, 7.455454724284191}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"tetanus vaccines\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {2.397650513386889, 7.455454724284191},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["87",
            Alignment->Center,
            ImageMargins->2], {3.1968673511825205, 7.100433070746848}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"pertussis vaccines\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {3.1968673511825205, 7.100433070746848},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["88",
            Alignment->Center,
            ImageMargins->2], {3.99608418897815, 6.745411417209505}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"diphtheria vaccines\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {3.99608418897815, 6.745411417209505},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["89",
            Alignment->Center,
            ImageMargins->2], {4.79530102677378, 6.390389763672164}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", "\<\"good maintenance of water systems\"\>", "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {4.79530102677378, 6.390389763672164},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["90",
            Alignment->Center,
            ImageMargins->2], {6.393734702365043, 5.680346456597478}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"decreasing mosquito bites\"\>", 
              ",", "\<\"insect repellent\"\>", 
              ",", "\<\"mosquito control\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {6.393734702365043, 5.680346456597478},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["91",
            Alignment->Center,
            ImageMargins->2], {7.1929515401606725, 5.325324803060135}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"handwashing\"\>", 
              ",", "\<\"rotavirus vaccination\"\>", 
              ",", "\<\"breastfeeding\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {7.1929515401606725, 5.325324803060135},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["92",
            Alignment->Center,
            ImageMargins->2], {8.791385215751932, 4.6152814959854505}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"handwashing\"\>", 
              ",", "\<\"not sharing personal items\"\>", 
              ",", "\<\"staying away from sick people\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {8.791385215751932, 4.6152814959854505},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["93",
            Alignment->Center,
            ImageMargins->2], {9.590602053547558, 4.260259842448108}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"handwashing\"\>", 
              ",", "\<\"daily bathing in the morning\"\>", 
              ",", "\<\"daily changing of underwear\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {9.590602053547558, 4.260259842448108},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["94",
            Alignment->Center,
            ImageMargins->2], {10.389818891343191, 3.9052381889107655}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"handwashing\"\>", 
              ",", "\<\"wearing a surgical mask\"\>", 
              ",", "\<\"influenza vaccines\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {10.389818891343191, 3.9052381889107655},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["95",
            Alignment->Center,
            ImageMargins->2], {11.189035729138821, 3.550216535373423}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             RowBox[{"\<\"prevention of tick bites\"\>", 
              ",", "\<\"doxycycline\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {11.189035729138821, 3.550216535373423},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["96",
            Alignment->Center,
            ImageMargins->2], {11.98825256693445, 3.1951948818360805}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"avoiding exposure\"\>", 
              ",", "\<\"antiviral medication\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {11.98825256693445, 3.1951948818360805},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["97",
            Alignment->Center,
            ImageMargins->2], {12.78746940473008, 2.840173228298739}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"proper food preparation\"\>", 
              ",", "\<\"no honey for children less than one\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {12.78746940473008, 2.840173228298739},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["98",
            Alignment->Center,
            ImageMargins->2], {13.586686242525706, 2.4851515747613955}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"using clean needles\"\>", 
              ",", "\<\"testing donated blood\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {13.586686242525706, 2.4851515747613955},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["99",
            Alignment->Center,
            ImageMargins->2], {15.18511991811697, 1.77510826768671}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"mosquito nets\"\>", ",", "\<\"insect repellent\"\>",
               ",", "\<\"mosquito control\"\>", ",", "\<\"medications\"\>"}], 
             "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {15.18511991811697, 1.77510826768671},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["100",
            Alignment->Center,
            ImageMargins->2], {15.984336755912599, 1.4200866141493682}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"handwashing\"\>", 
              ",", "\<\"drinking clean water\"\>", 
              ",", "\<\"proper disposal of human waste\"\>", 
              ",", "\<\"breastfeeding\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {15.984336755912599, 1.4200866141493682},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["101",
            Alignment->Center,
            ImageMargins->2], {16.783553593708227, 1.065064960612025}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"improved sanitation\"\>", 
              ",", "\<\"treating those with taeniasis\"\>", 
              ",", "\<\"cooking pork well\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {16.783553593708227, 1.065064960612025},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["102",
            Alignment->Center,
            ImageMargins->2], {17.58277043150386, 0.7100433070746833}, 
           Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"rabies vaccines\"\>", ",", "\<\"animal control\"\>",
               ",", "\<\"rabies immunoglobulin\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {17.58277043150386, 0.7100433070746833},
           BaseStyle->"Graphics"]}, {InsetBox[
           PaneBox["103",
            Alignment->Center,
            ImageMargins->2], {18.381987269299493, 0.}, Automatic, {0., 0.},
           BaseStyle->"Graphics"], InsetBox[
           FrameBox[
            RowBox[{"{", 
             
             RowBox[{"\<\"avoiding walking barefoot in public showers\"\>", 
              ",", "\<\"keeping toenails short\"\>", 
              ",", "\<\"wearing big enough shoes\"\>", 
              ",", "\<\"changing socks daily\"\>"}], "}"}],
            Background->GrayLevel[1],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->GrayLevel[1],
            RoundingRadius->2,
            StripOnInput->False], {18.381987269299493, 0.},
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   AlignmentPoint->Center,
   Axes->False,
   AxesLabel->None,
   AxesOrigin->Automatic,
   AxesStyle->{},
   Background->None,
   BaseStyle->{},
   BaselinePosition->Automatic,
   ContentSelectable->Automatic,
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   Epilog->{},
   FormatType->TraditionalForm,
   Frame->False,
   FrameLabel->None,
   FrameStyle->{},
   FrameTicks->None,
   FrameTicksStyle->{},
   GridLines->None,
   GridLinesStyle->{},
   ImageMargins->0.,
   ImagePadding->All,
   ImageSize->1500,
   LabelStyle->{},
   PlotLabel->None,
   PlotRange->All,
   PlotRangeClipping->False,
   PlotRangePadding->Automatic,
   PlotRegion->Automatic,
   Prolog->{},
   RotateLabel->True,
   Ticks->Automatic,
   TicksStyle->{}],
  StripOnInput->False,
  Magnification->0.8 Inherited]], "Output",
 CellChangeTimes->{{3.79839852847288*^9, 3.79839873868921*^9}, {
   3.798398937729662*^9, 3.798398960152152*^9}, 3.7983990646897717`*^9, 
   3.798560429675497*^9, 3.798561579837082*^9, 3.798561697442895*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"861f1f11-9aec-4eb3-9e8f-3a9d318a20a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"exposure", " ", "to", " ", 
    RowBox[{"onset", ".", " ", "note"}], " ", "that", " ", "data", " ", "is", 
    " ", "not", " ", "available", " ", "for", " ", "some", " ", "entities"}], 
   "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"infectDisExp", " ", "=", " ", 
   RowBox[{"DeleteMissing", "@", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", " ", "\[Rule]", " ", 
         RowBox[{"#", "[", 
          TemplateBox[{"\"exposure to disease onset\"", 
            RowBox[{"EntityProperty", "[", 
              RowBox[{"\"Disease\"", ",", "\"ExposureToDiseaseOnset\""}], 
              "]"}], "\"EntityProperty[\\\"Disease\\\", \
\\\"ExposureToDiseaseOnset\\\"]\""},
           "EntityProperty"], "]"}]}], ")"}], "&"}], ",", " ", "infectDis"}], 
     "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.798393961114768*^9, 3.7983940074619503`*^9}, {
  3.798394104594261*^9, 3.7983941051797247`*^9}, {3.798500230352463*^9, 
  3.798500237638579*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"1b604b5c-29ec-40a0-b06f-7415c4d4b84c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Ebola virus disease\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"EbolaVirusDisease\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"EbolaVirusDisease\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "2", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "21", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{2, 21}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"cholera\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine001\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine001\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", 
         FractionBox["1", "12"], 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "5", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{
         Rational[1, 12], 5}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"salmonella infections\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine003\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine003\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", 
         FractionBox["1", "2"], 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "3", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{
         Rational[1, 2], 3}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"shigellosis\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine004\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine004\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "1", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "2", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{1, 2}], Selectable -> False], "\"days\"", "days", "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"botulism\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine005.1\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine005.1\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", 
         FractionBox["1", "2"], 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "3", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{
         Rational[1, 2], 3}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"diphtheria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine032\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine032\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "2", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "5", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{2, 5}], Selectable -> False], "\"days\"", "days", "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"streptococcal sore throat\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine034.0\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine034.0\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "1", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "3", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{1, 3}], Selectable -> False], "\"days\"", "days", "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"tetanus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine037\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine037\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "3", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "21", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{3, 21}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"smallpox\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine050\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine050\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "7", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "21", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{7, 21}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"chicken pox\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine052\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine052\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "10", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "21", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{10, 21}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"genital herpes\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine054.1\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine054.1\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "2", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "12", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{2, 12}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"measles\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine055\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine055\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "8", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "12", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{8, 12}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"rubella\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine056\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine056\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"14.`3.", "\"days\"", "days", "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"yellow fever\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine060\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine060\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "3", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "6", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{3, 6}], Selectable -> False], "\"days\"", "days", "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Dengue fever\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine061\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine061\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "3", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "14", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{3, 14}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"eastern equine encephalitis\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine062.2\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine062.2\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "4", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "10", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{4, 10}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"viral hepatitis B without hepatic coma\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine070.3\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine070.3\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", 
         FractionBox["72", "73"], 
         StyleBox["\"to\"", FontSize -> Inherited - 2], 
         FractionBox["432", "73"], "\[InvisibleSpace]", ")"}], 
       Interval[{
         Rational[72, 73], 
         Rational[432, 73]}], Selectable -> False], "\"mo\"", "months", 
      "\"Months\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"mumps\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine072\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine072\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "14", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "21", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{14, 21}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"hand, foot, and mouth disease\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine074.3\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine074.3\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "3", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "6", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{3, 6}], Selectable -> False], "\"days\"", "days", "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Condyloma acuminatum\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine078.11\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine078.11\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "1", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "8", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{1, 8}], Selectable -> False], "\"mo\"", "months", 
      "\"Months\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"unclassified diseases due to viruses and Chlamydiae\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine078.8\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine078.8\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "7", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "21", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{7, 21}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"severe acute respiratory syndrome\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine079.82\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine079.82\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "2", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "7", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{2, 7}], Selectable -> False], "\"days\"", "days", "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"unspecified type of chlamydial infection co-occurring with other \
medical conditions\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine079.98\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine079.98\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "14", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "21", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{14, 21}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"rickettsioses\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine083\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine083\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "7", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "14", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{7, 14}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"malaria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine084\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine084\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "10", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "15", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{10, 15}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"lyme disease\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine088.81\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine088.81\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"7.`3.", "\"days\"", "days", "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"enterobiasis\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine127.4\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine127.4\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "4", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "8", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{4, 8}], Selectable -> False], "\"wk\"", "weeks", "\"Weeks\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"scabies\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine133.0\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine133.0\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "2", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "6", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{2, 6}], Selectable -> False], "\"wk\"", "weeks", "\"Weeks\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Legionnaires' disease\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine482.84\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine482.84\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "2", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "10", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{2, 10}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"influenza\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine487\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine487\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"3.`2.", "\"days\"", "days", "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Middle East respiratory syndrome\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"MiddleEastRespiratorySyndrome\""}], 
        "]"}], "\"Entity[\\\"Disease\\\", \\\"MiddleEastRespiratorySyndrome\\\
\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "2", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "14", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{2, 14}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"COVID-19\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"NovelCoronavirusDisease\\\"]\"", 
      "\"disease\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox[
       RowBox[{"(", "\[InvisibleSpace]", "2", 
         StyleBox["\"to\"", FontSize -> Inherited - 2], "14", 
         "\[InvisibleSpace]", ")"}], 
       Interval[{2, 14}], Selectable -> False], "\"days\"", "days", 
      "\"Days\""},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.798394019611462*^9, 3.798394116769541*^9, 
  3.7985604523707943`*^9, 3.798561583034821*^9, 3.798561698375503*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"da3a67f4-30d4-4f05-a7ef-e335a3f51031"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "can", " ", "be", " ", "inproved", " ", "with", " ", 
    "markers", " ", "but", " ", "NumberLinePlot", " ", 
    RowBox[{"doesn", "'"}], "t", " ", "support", " ", "this", " ", "option"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Quiet", "@", 
   RowBox[{"NumberLinePlot", "[", 
    RowBox[{
     RowBox[{"List", "/@", 
      RowBox[{"Values", "[", "infectDisExp", "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"Keys", "@", "infectDisExp"}], ",", " ", "Below"}], "]"}]}], 
     ",", " ", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "110"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "Automatic"}], "}"}]}], ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Basic reproduction rates of some infectious diseases\>\""}], ",", 
     " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<Days\>\"", "}"}]}]}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.798395075195911*^9, 3.798395078845539*^9}, {
  3.798395136949851*^9, 3.7983951644534187`*^9}, {3.79839535839013*^9, 
  3.798395460092111*^9}, {3.798395617589529*^9, 3.798395621724492*^9}, {
  3.798399171887657*^9, 3.798399188883911*^9}, {3.7985002564912663`*^9, 
  3.798500283328348*^9}, {3.798560478451207*^9, 3.798560536543915*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"f85a093f-2e4b-43be-9428-193b4be0858c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      RGBColor[0.24720000000000014`, 0.24, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.3, 0.68, 0.88]], {{{{{
           PointBox[{2., 1}]}, {
           PointBox[{21., 1}]}, 
          LineBox[{{2, 1}, {21, 1}}]}}}}}, {
      RGBColor[0.6, 0.24, 0.4428931686004542], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.962492, 0.612461, 0.301114]], {{{{{
           PointBox[{0.08333333333333333, 2}]}, {
           PointBox[{5., 2}]}, 
          LineBox[
           NCache[{{
              Rational[1, 12], 2}, {5, 2}}, {{0.08333333333333333, 2}, {5, 
             2}}]]}}}}}, {
      RGBColor[0.6, 0.5470136627990908, 0.24], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.659963, 0.445022, 0.850093]], {{{{{
           PointBox[{0.5, 3}]}, {
           PointBox[{3., 3}]}, 
          LineBox[
           NCache[{{
              Rational[1, 2], 3}, {3, 3}}, {{0.5, 3}, {3, 3}}]]}}}}}, {
      RGBColor[0.24, 0.6, 0.33692049419863584`], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.557756, 0.76, 0.304674]], {{{{{
           PointBox[{1., 4}]}, {
           PointBox[{2., 4}]}, 
          LineBox[{{1, 4}, {2, 4}}]}}}}}, {
      RGBColor[0.24, 0.3531726744018182, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.889907, 0.406019, 0.450155]], {{{{{
           PointBox[{0.5, 5}]}, {
           PointBox[{3., 5}]}, 
          LineBox[
           NCache[{{
              Rational[1, 2], 5}, {3, 5}}, {{0.5, 5}, {3, 5}}]]}}}}}, {
      RGBColor[0.6, 0.24, 0.5632658430022722], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.462306, 0.562616, 1.]], {{{{{
           PointBox[{2., 6}]}, {
           PointBox[{5., 6}]}, 
          LineBox[{{2, 6}, {5, 6}}]}}}}}, {
      RGBColor[0.6, 0.42664098839727194`, 0.24], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.994953, 0.774767, 0.213626]], {{{{{
           PointBox[{1., 7}]}, {
           PointBox[{3., 7}]}, 
          LineBox[{{1, 7}, {3, 7}}]}}}}}, {
      RGBColor[0.2634521802031821, 0.6, 0.24], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.741359, 0.424, 0.690217]], {{{{{
           PointBox[{3., 8}]}, {
           PointBox[{21., 8}]}, 
          LineBox[{{3, 8}, {21, 8}}]}}}}}, {
      RGBColor[0.24, 0.47354534880363613`, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.31102485460500007`, 0.76, 0.6186956395936363]], {{{{{
           PointBox[{7., 9}]}, {
           PointBox[{21., 9}]}, 
          LineBox[{{7, 9}, {21, 9}}]}}}}}, {
      RGBColor[0.5163614825959097, 0.24, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[
       0.9323990673495075, 0.4619953367475375, 0.37148214509613275`]], {{{{{
           PointBox[{10., 10}]}, {
           PointBox[{21., 10}]}, 
          LineBox[{{10, 10}, {21, 10}}]}}}}}, {
      RGBColor[0.6, 0.3062683139954558, 0.24], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.5744565164973487, 0.49532609010159073`, 1.]], {{{{{
           PointBox[{2., 11}]}, {
           PointBox[{12., 11}]}, 
          LineBox[{{2, 11}, {12, 11}}]}}}}}, {
      RGBColor[0.3838248546049982, 0.6, 0.24], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.8435481467551109, 0.7826164607505679, 0.2]], {{{{{
           PointBox[{8., 12}]}, {
           PointBox[{12., 12}]}, 
          LineBox[{{8, 12}, {12, 12}}]}}}}}, {
      RGBColor[0.24, 0.5939180232054561, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.7996770155184237, 0.424, 0.6004968992024251]], {{
        PointBox[{14., 13}]}}}, {
      RGBColor[0.39598880819409377`, 0.24, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[
       0.3118400557467805, 0.6705279554025756, 0.8942080668961365]], {{{{{
           PointBox[{3., 14}]}, {
           PointBox[{6., 14}]}, 
          LineBox[{{3, 14}, {6, 14}}]}}}}}, {
      RGBColor[0.6, 0.24, 0.2941043604063603], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[
       0.9648602470993184, 0.6243012354965923, 0.29487733283184014`]], {{{{{
           PointBox[{3., 15}]}, {
           PointBox[{14., 15}]}, 
          LineBox[{{3, 15}, {14, 15}}]}}}}}, {
      RGBColor[0.5041975290068142, 0.6, 0.24], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.3, 0.68, 0.88]], {{{{{
           PointBox[{4., 16}]}, {
           PointBox[{10., 16}]}, 
          LineBox[{{4, 16}, {10, 16}}]}}}}}, {
      RGBColor[0.24, 0.6, 0.48570930239273163`], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.962492, 0.612461, 0.301114]], {{{{{
           PointBox[{30., 17}]}, {
           PointBox[{180., 17}]}, 
          LineBox[{{30, 17}, {180, 17}}]}}}}}, {
      RGBColor[0.2756161337922776, 0.24, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.659963, 0.445022, 0.850093]], {{{{{
           PointBox[{14., 18}]}, {
           PointBox[{21., 18}]}, 
          LineBox[{{14, 18}, {21, 18}}]}}}}}, {
      RGBColor[0.6, 0.24, 0.4144770348081764], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.557756, 0.76, 0.304674]], {{{{{
           PointBox[{3., 19}]}, {
           PointBox[{6., 19}]}, 
          LineBox[{{3, 19}, {6, 19}}]}}}}}, {
      RGBColor[0.6, 0.5754297965913696, 0.24], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.889907, 0.406019, 0.450155]], {{{{{
           PointBox[{30.416666666666668`, 20}]}, {
           PointBox[{243.33333333333334`, 20}]}, 
          LineBox[
           NCache[{{
              Rational[365, 12], 20}, {
              Rational[730, 3], 20}}, {{30.416666666666668`, 20}, {
             243.33333333333334`, 20}}]]}}}}}, {
      RGBColor[0.24, 0.6, 0.36533662799091565`], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.462306, 0.562616, 1.]], {{{{{
           PointBox[{7., 21}]}, {
           PointBox[{21., 21}]}, 
          LineBox[{{7, 21}, {21, 21}}]}}}}}, {
      RGBColor[0.24, 0.32475654060953846`, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.994953, 0.774767, 0.213626]], {{{{{
           PointBox[{2., 22}]}, {
           PointBox[{7., 22}]}, 
          LineBox[{{2, 22}, {7, 22}}]}}}}}, {
      RGBColor[0.6, 0.24, 0.5348497092099924], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.741359, 0.424, 0.690217]], {{{{{
           PointBox[{14., 23}]}, {
           PointBox[{21., 23}]}, 
          LineBox[{{14, 23}, {21, 23}}]}}}}}, {
      RGBColor[0.6, 0.45505712218955346`, 0.24], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.31102485460500007`, 0.76, 0.6186956395936363]], {{{{{
           PointBox[{7., 24}]}, {
           PointBox[{14., 24}]}, 
          LineBox[{{7, 24}, {14, 24}}]}}}}}, {
      RGBColor[0.24, 0.6, 0.24496395358909184`], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[
       0.9323990673495075, 0.4619953367475375, 0.37148214509613275`]], {{{{{
           PointBox[{10., 25}]}, {
           PointBox[{15., 25}]}, 
          LineBox[{{10, 25}, {15, 25}}]}}}}}, {
      RGBColor[0.24, 0.4451292150113622, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.5744565164973487, 0.49532609010159073`, 1.]], {{
        PointBox[{7., 26}]}}}, {
      RGBColor[0.5447776163881838, 0.24, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.8435481467551109, 0.7826164607505679, 0.2]], {{{{{
           PointBox[{28., 27}]}, {
           PointBox[{56., 27}]}, 
          LineBox[{{28, 27}, {56, 27}}]}}}}}, {
      RGBColor[0.6, 0.3346844477877375, 0.24], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.7996770155184237, 0.424, 0.6004968992024251]], {{{{{
           PointBox[{14., 28}]}, {
           PointBox[{42., 28}]}, 
          LineBox[{{14, 28}, {42, 28}}]}}}}}, {
      RGBColor[0.35540872081272423`, 0.6, 0.24], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[
       0.3118400557467805, 0.6705279554025756, 0.8942080668961365]], {{{{{
           PointBox[{2., 29}]}, {
           PointBox[{10., 29}]}, 
          LineBox[{{2, 29}, {10, 29}}]}}}}}, {
      RGBColor[0.24, 0.5655018894131706, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[
       0.9648602470993184, 0.6243012354965923, 0.29487733283184014`]], {{
        PointBox[{3., 30}]}}}, {
      RGBColor[0.42440494198636775`, 0.24, 0.6], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.3, 0.68, 0.88]], {{{{{
           PointBox[{2., 31}]}, {
           PointBox[{14., 31}]}, 
          LineBox[{{2, 31}, {14, 31}}]}}}}}, {
      RGBColor[0.6, 0.24, 0.26568822661407865`], 
      PointSize[Medium], 
      Directive[
       AbsoluteThickness[1.6], 
       RGBColor[0.962492, 0.612461, 0.301114]], {{{{{
           PointBox[{2., 32}]}, {
           PointBox[{14., 32}]}, 
          LineBox[{{2, 32}, {14, 32}}]}}}}}}, AxesLabel -> {
      FormBox["\"Days\"", TraditionalForm]}, Ticks -> {Automatic, Automatic}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    PlotRange -> {{0.08333333333333331, 243.33333333333337`}, {0, 32}}, 
    PlotRangePadding -> {{
       Scaled[0.1], 
       Scaled[0.1]}, {0, 1}}, AspectRatio -> NCache[
      Rational[1, 3], 0.3333333333333333], 
    AxesOrigin -> {Automatic, Automatic}, Axes -> {True, False}, ImagePadding -> 
    All, {AspectRatio -> NCache[
       Rational[1, 3], 0.3333333333333333], AxesLabel -> {
       FormBox["\"Days\"", TraditionalForm]}, ImageSize -> {1000, Automatic}, 
     PlotLabel -> 
     FormBox["\"Basic reproduction rates of some infectious diseases\"", 
       TraditionalForm]}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"\"Ebola virus disease\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"EbolaVirusDisease\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"EbolaVirusDisease\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"cholera\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine001\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine001\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"salmonella infections\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine003\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine003\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"shigellosis\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine004\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine004\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"botulism\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine005.1\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine005.1\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"diphtheria\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine032\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine032\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"streptococcal sore throat\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine034.0\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine034.0\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"tetanus\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine037\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine037\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"smallpox\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine050\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine050\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"chicken pox\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine052\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine052\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"genital herpes\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine054.1\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine054.1\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"measles\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine055\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine055\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"rubella\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine056\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine056\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"yellow fever\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine060\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine060\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"Dengue fever\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine061\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine061\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"eastern equine encephalitis\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine062.2\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine062.2\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"viral hepatitis B without hepatic coma\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine070.3\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine070.3\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"mumps\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine072\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine072\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"hand, foot, and mouth disease\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine074.3\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine074.3\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"Condyloma acuminatum\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine078.11\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine078.11\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"unclassified diseases due to viruses and Chlamydiae\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine078.8\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine078.8\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"severe acute respiratory syndrome\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine079.82\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine079.82\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{
        "\"unspecified type of chlamydial infection co-occurring with other \
medical conditions\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine079.98\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine079.98\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"rickettsioses\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine083\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine083\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"malaria\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine084\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine084\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"lyme disease\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine088.81\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine088.81\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"enterobiasis\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine127.4\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine127.4\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"scabies\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine133.0\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine133.0\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"Legionnaires' disease\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine482.84\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine482.84\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"influenza\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine487\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine487\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"Middle East respiratory syndrome\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"MiddleEastRespiratorySyndrome\""}], 
           "]"}], "\"Entity[\\\"Disease\\\", \
\\\"MiddleEastRespiratorySyndrome\\\"]\""}, "EntityTraditionalFramed"], 
       TemplateBox[{"\"COVID-19\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], "]"}],
          "\"Entity[\\\"Disease\\\", \\\"NovelCoronavirusDisease\\\"]\""}, 
        "EntityTraditionalFramed"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3, 0.68, 0.88]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3, 0.68, 0.88]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.962492, 0.612461, 0.301114]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.962492, 0.612461, 0.301114]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.659963, 0.445022, 0.850093]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.659963, 0.445022, 0.850093]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.557756, 0.76, 0.304674]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.557756, 0.76, 0.304674]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.889907, 0.406019, 0.450155]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.889907, 0.406019, 0.450155]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.462306, 0.562616, 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.462306, 0.562616, 1.]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.994953, 0.774767, 0.213626]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.994953, 0.774767, 0.213626]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.741359, 0.424, 0.690217]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.741359, 0.424, 0.690217]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.31102485460500007`, 0.76, 0.6186956395936363]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.31102485460500007`, 0.76, 0.6186956395936363]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9323990673495075, 0.4619953367475375, 
                    0.37148214509613275`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9323990673495075, 0.4619953367475375, 
                    0.37148214509613275`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5744565164973487, 0.49532609010159073`, 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5744565164973487, 0.49532609010159073`, 1.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8435481467551109, 0.7826164607505679, 0.2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8435481467551109, 0.7826164607505679, 0.2]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7996770155184237, 0.424, 0.6004968992024251]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7996770155184237, 0.424, 0.6004968992024251]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3118400557467805, 0.6705279554025756, 
                    0.8942080668961365]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3118400557467805, 0.6705279554025756, 
                    0.8942080668961365]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9648602470993184, 0.6243012354965923, 
                    0.29487733283184014`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9648602470993184, 0.6243012354965923, 
                    0.29487733283184014`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3, 0.68, 0.88]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3, 0.68, 0.88]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.962492, 0.612461, 0.301114]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.962492, 0.612461, 0.301114]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.659963, 0.445022, 0.850093]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.659963, 0.445022, 0.850093]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.557756, 0.76, 0.304674]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.557756, 0.76, 0.304674]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.889907, 0.406019, 0.450155]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.889907, 0.406019, 0.450155]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.462306, 0.562616, 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.462306, 0.562616, 1.]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #21, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.994953, 0.774767, 0.213626]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.994953, 0.774767, 0.213626]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #22}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.741359, 0.424, 0.690217]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.741359, 0.424, 0.690217]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #23, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.31102485460500007`, 0.76, 0.6186956395936363]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.31102485460500007`, 0.76, 0.6186956395936363]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #24, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9323990673495075, 0.4619953367475375, 
                    0.37148214509613275`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9323990673495075, 0.4619953367475375, 
                    0.37148214509613275`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #25}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5744565164973487, 0.49532609010159073`, 1.]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5744565164973487, 0.49532609010159073`, 1.]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #26, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8435481467551109, 0.7826164607505679, 0.2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8435481467551109, 0.7826164607505679, 0.2]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #27, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7996770155184237, 0.424, 0.6004968992024251]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7996770155184237, 0.424, 0.6004968992024251]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #28}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3118400557467805, 0.6705279554025756, 
                    0.8942080668961365]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3118400557467805, 0.6705279554025756, 
                    0.8942080668961365]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #29, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9648602470993184, 0.6243012354965923, 
                    0.29487733283184014`]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9648602470993184, 0.6243012354965923, 
                    0.29487733283184014`]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #30}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3, 0.68, 0.88]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3, 0.68, 0.88]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #31, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.962492, 0.612461, 0.301114]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.962492, 0.612461, 0.301114]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #32}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3, 0.68, 0.88], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.2, 0.45333333333333337`, 0.5866666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.3`", ",", "0.68`", ",", "0.88`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3, 0.68, 0.88]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3, 0.68, 0.88], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.962492, 0.612461, 0.301114], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6416613333333334, 0.40830733333333336`, 
                    0.20074266666666668`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.962492`", ",", "0.612461`", ",", "0.301114`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.962492, 0.612461, 0.301114]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.962492, 0.612461, 0.301114], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.659963, 0.445022, 0.850093], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.43997533333333333`, 0.29668133333333335`, 
                    0.5667286666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.659963`", ",", "0.445022`", ",", "0.850093`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.659963, 0.445022, 0.850093]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.659963, 0.445022, 0.850093], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.557756, 0.76, 0.304674], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37183733333333335`, 0.5066666666666667, 
                    0.20311600000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.557756`", ",", "0.76`", ",", "0.304674`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.557756, 0.76, 0.304674]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.557756, 0.76, 0.304674], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.889907, 0.406019, 0.450155], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5932713333333334, 0.2706793333333334, 
                    0.3001033333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.889907`", ",", "0.406019`", ",", "0.450155`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.889907, 0.406019, 0.450155]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.889907, 0.406019, 0.450155], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.462306, 0.562616, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.30820400000000003`, 0.3750773333333334, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.462306`", ",", "0.562616`", ",", "1.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.462306, 0.562616, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.462306, 0.562616, 1.], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.994953, 0.774767, 0.213626], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6633020000000001, 0.5165113333333333, 
                    0.14241733333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.994953`", ",", "0.774767`", ",", "0.213626`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.994953, 0.774767, 0.213626]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.994953, 0.774767, 0.213626], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.741359, 0.424, 0.690217], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.49423933333333336`, 0.2826666666666667, 
                    0.46014466666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.741359`", ",", "0.424`", ",", "0.690217`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.741359, 0.424, 0.690217]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.741359, 0.424, 0.690217], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.31102485460500007`, 0.76, 0.6186956395936363], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20734990307000006`, 0.5066666666666667, 
                    0.4124637597290909], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.31102485460500007`", ",", "0.76`", ",", 
                    "0.6186956395936363`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.31102485460500007`, 0.76, 0.6186956395936363]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.31102485460500007`, 0.76, 0.6186956395936363], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9323990673495075, 0.4619953367475375, 
                    0.37148214509613275`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.621599378233005, 0.30799689116502504`, 
                    0.24765476339742185`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9323990673495075`", ",", "0.4619953367475375`", ",", 
                    "0.37148214509613275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9323990673495075, 0.4619953367475375, 
                    0.37148214509613275`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9323990673495075, 0.4619953367475375, 
                    0.37148214509613275`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5744565164973487, 0.49532609010159073`, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3829710109982325, 0.3302173934010605, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5744565164973487`", ",", "0.49532609010159073`", ",", 
                    "1.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5744565164973487, 0.49532609010159073`, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5744565164973487, 0.49532609010159073`, 1.], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8435481467551109, 0.7826164607505679, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.562365431170074, 0.5217443071670453, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8435481467551109`", ",", "0.7826164607505679`", ",", 
                    "0.2`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8435481467551109, 0.7826164607505679, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8435481467551109, 0.7826164607505679, 0.2], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7996770155184237, 0.424, 0.6004968992024251], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5331180103456159, 0.2826666666666667, 
                    0.40033126613495007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7996770155184237`", ",", "0.424`", ",", 
                    "0.6004968992024251`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7996770155184237, 0.424, 0.6004968992024251]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7996770155184237, 0.424, 0.6004968992024251], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3118400557467805, 0.6705279554025756, 
                    0.8942080668961365], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20789337049785367`, 0.4470186369350504, 
                    0.596138711264091], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3118400557467805`", ",", "0.6705279554025756`", ",", 
                    "0.8942080668961365`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3118400557467805, 0.6705279554025756, 
                    0.8942080668961365]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3118400557467805, 0.6705279554025756, 
                    0.8942080668961365], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9648602470993184, 0.6243012354965923, 
                    0.29487733283184014`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6432401647328789, 0.4162008236643949, 
                    0.1965848885545601], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9648602470993184`", ",", "0.6243012354965923`", ",", 
                    "0.29487733283184014`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9648602470993184, 0.6243012354965923, 
                    0.29487733283184014`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9648602470993184, 0.6243012354965923, 
                    0.29487733283184014`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3, 0.68, 0.88], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.2, 0.45333333333333337`, 0.5866666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.3`", ",", "0.68`", ",", "0.88`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3, 0.68, 0.88]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3, 0.68, 0.88], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.962492, 0.612461, 0.301114], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6416613333333334, 0.40830733333333336`, 
                    0.20074266666666668`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.962492`", ",", "0.612461`", ",", "0.301114`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.962492, 0.612461, 0.301114]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.962492, 0.612461, 0.301114], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.659963, 0.445022, 0.850093], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.43997533333333333`, 0.29668133333333335`, 
                    0.5667286666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.659963`", ",", "0.445022`", ",", "0.850093`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.659963, 0.445022, 0.850093]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.659963, 0.445022, 0.850093], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.557756, 0.76, 0.304674], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37183733333333335`, 0.5066666666666667, 
                    0.20311600000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.557756`", ",", "0.76`", ",", "0.304674`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.557756, 0.76, 0.304674]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.557756, 0.76, 0.304674], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.889907, 0.406019, 0.450155], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5932713333333334, 0.2706793333333334, 
                    0.3001033333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.889907`", ",", "0.406019`", ",", "0.450155`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.889907, 0.406019, 0.450155]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.889907, 0.406019, 0.450155], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.462306, 0.562616, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.30820400000000003`, 0.3750773333333334, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.462306`", ",", "0.562616`", ",", "1.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.462306, 0.562616, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.462306, 0.562616, 1.], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.994953, 0.774767, 0.213626], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6633020000000001, 0.5165113333333333, 
                    0.14241733333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.994953`", ",", "0.774767`", ",", "0.213626`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.994953, 0.774767, 0.213626]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.994953, 0.774767, 0.213626], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.741359, 0.424, 0.690217], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.49423933333333336`, 0.2826666666666667, 
                    0.46014466666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.741359`", ",", "0.424`", ",", "0.690217`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.741359, 0.424, 0.690217]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.741359, 0.424, 0.690217], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.31102485460500007`, 0.76, 0.6186956395936363], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20734990307000006`, 0.5066666666666667, 
                    0.4124637597290909], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.31102485460500007`", ",", "0.76`", ",", 
                    "0.6186956395936363`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.31102485460500007`, 0.76, 0.6186956395936363]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.31102485460500007`, 0.76, 0.6186956395936363], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9323990673495075, 0.4619953367475375, 
                    0.37148214509613275`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.621599378233005, 0.30799689116502504`, 
                    0.24765476339742185`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9323990673495075`", ",", "0.4619953367475375`", ",", 
                    "0.37148214509613275`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9323990673495075, 0.4619953367475375, 
                    0.37148214509613275`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9323990673495075, 0.4619953367475375, 
                    0.37148214509613275`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5744565164973487, 0.49532609010159073`, 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3829710109982325, 0.3302173934010605, 
                    0.6666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5744565164973487`", ",", "0.49532609010159073`", ",", 
                    "1.`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5744565164973487, 0.49532609010159073`, 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5744565164973487, 0.49532609010159073`, 1.], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8435481467551109, 0.7826164607505679, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.562365431170074, 0.5217443071670453, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8435481467551109`", ",", "0.7826164607505679`", ",", 
                    "0.2`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8435481467551109, 0.7826164607505679, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8435481467551109, 0.7826164607505679, 0.2], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7996770155184237, 0.424, 0.6004968992024251], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5331180103456159, 0.2826666666666667, 
                    0.40033126613495007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7996770155184237`", ",", "0.424`", ",", 
                    "0.6004968992024251`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7996770155184237, 0.424, 0.6004968992024251]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7996770155184237, 0.424, 0.6004968992024251], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3118400557467805, 0.6705279554025756, 
                    0.8942080668961365], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20789337049785367`, 0.4470186369350504, 
                    0.596138711264091], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3118400557467805`", ",", "0.6705279554025756`", ",", 
                    "0.8942080668961365`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3118400557467805, 0.6705279554025756, 
                    0.8942080668961365]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3118400557467805, 0.6705279554025756, 
                    0.8942080668961365], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9648602470993184, 0.6243012354965923, 
                    0.29487733283184014`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6432401647328789, 0.4162008236643949, 
                    0.1965848885545601], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9648602470993184`", ",", "0.6243012354965923`", ",", 
                    "0.29487733283184014`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9648602470993184, 0.6243012354965923, 
                    0.29487733283184014`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9648602470993184, 0.6243012354965923, 
                    0.29487733283184014`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3, 0.68, 0.88], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.2, 0.45333333333333337`, 0.5866666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.3`", ",", "0.68`", ",", "0.88`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3, 0.68, 0.88]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3, 0.68, 0.88], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.962492, 0.612461, 0.301114], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6416613333333334, 0.40830733333333336`, 
                    0.20074266666666668`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.962492`", ",", "0.612461`", ",", "0.301114`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.962492, 0.612461, 0.301114]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.962492, 0.612461, 0.301114], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25, 
               ",", #26, ",", #27, ",", #28, ",", #29, ",", #30, ",", #31, 
               ",", #32}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "False", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "False", ",", "True", ",", 
                 "True", ",", "True", ",", "False", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.798395076064299*^9, 3.798395079376553*^9}, {
   3.798395128190136*^9, 3.798395164876583*^9}, {3.7983953625736*^9, 
   3.79839545156245*^9}, 3.798395622144245*^9, 3.7983991937451973`*^9, 
   3.798560457882296*^9, {3.7985605195123787`*^9, 3.798560537320117*^9}, 
   3.798561583701529*^9, 3.798561699007666*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"fc2ef743-3ae3-4084-83f2-260edbf777b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"TimelinePlot", " ", 
    RowBox[{"can", "'"}], "t", " ", "interpret", " ", "time", " ", 
    "interval"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"TimelinePlot", "[", 
   RowBox[{
    RowBox[{"Association", "@", "infectDisExp"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", 
     RowBox[{"1", "/", "GoldenRatio"}]}], ",", " ", 
    RowBox[{"PlotLayout", "\[Rule]", "\"\<Stacked\>\""}], ",", " ", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Exposure to disease onset time of some infectious diseases\>\""}], 
    ",", " ", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.798394845159384*^9, 3.798394895248917*^9}, {
  3.7983949410470943`*^9, 3.798394946355319*^9}, {3.798395020181863*^9, 
  3.79839502692104*^9}, {3.79839550099052*^9, 3.798395541866459*^9}, {
  3.798399197992979*^9, 3.798399211067357*^9}, {3.798500306859037*^9, 
  3.7985003099941387`*^9}, {3.798500376993495*^9, 3.798500381598816*^9}, {
  3.798560541793898*^9, 3.798560547501525*^9}, {3.798560824361112*^9, 
  3.798560844793458*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"81e31c0f-096e-4f0b-83fc-a4405b47ee43"],

Cell[BoxData[
 GraphicsBox[{
   {AbsolutePointSize[0], Opacity[0], 
    PointBox[NCache[{{Rational[1, 12], 1}, {21, Rational[1801, 20]}}, {{
       0.08333333333333333, 1}, {21, 90.05}}]], 
    PointBox[NCache[{{Rational[1, 12], Rational[-1, 2]}, {21, 0}}, {{
       0.08333333333333333, -0.5}, {21, 0}}]]}, {}, {
    {PointSize[0], Opacity[0], 
     PointBox[NCache[{{-1.3495046301369866`, 1}, {
        21, Rational[1791, 20]}}, {{-1.3495046301369866`, 1}, {
        21, 89.55}}]]}, {
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{2, 8}, {14, 8}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {2, 8}], 
                    Offset[{0, -1}, {14, 8}]}, {
                    Offset[{0, 1}, {2, 8}], 
                    Offset[{0, 1}, {14, 8}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{2, 8}, {14, 8}}]}, 
                   PointBox[{{2, 8}, {14, 8}}], 
                   LineBox[{{2, 8}, {14, 8}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{2, 8}, {14, 8}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{2, 
                  Rational[1743, 20]}, 
                 Offset[{0, 3}, {2, 8}]}, {{2, 87.15}, 
                 Offset[{0, 3}, {2, 8}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {2, 
                   Rational[1743, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {2, 
                   Rational[1743, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {2, 
                   Rational[1743, 20]}]}, {
                 Offset[{0, -3.2}, {2, 87.15}], 
                 Offset[{3.2, 1.5}, {2, 87.15}], 
                 Offset[{-3.2, 1.5}, {2, 87.15}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"COVID-19\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], 
                    "]"}], "\"Entity[\\\"Disease\\\", \
\\\"NovelCoronavirusDisease\\\"]\""}, "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {2, 
                  Rational[1743, 20]}], 
                Offset[{0, 0}, {2, 87.15}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{1.068037, 
                 Rational[1743, 20]}, {1.068037, 87.15}], 
               NCache[{2.931963, 
                 Rational[1781, 20]}, {2.931963, 89.05}]]}}}},
          
          ImageSizeCache->{{129.49098500488958`, 
           677.989461628233}, {-295.77917945160175`, 259.989461628233}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:02\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "2.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:14\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "14.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 2.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 14.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{2, 9}, {14, 9}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {2, 9}], 
                    Offset[{0, -1}, {14, 9}]}, {
                    Offset[{0, 1}, {2, 9}], 
                    Offset[{0, 1}, {14, 9}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{2, 9}, {14, 9}}]}, 
                   PointBox[{{2, 9}, {14, 9}}], 
                   LineBox[{{2, 9}, {14, 9}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{2, 9}, {14, 9}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{2, 
                  Rational[337, 4]}, 
                 Offset[{0, 3}, {2, 9}]}, {{2, 84.25}, 
                 Offset[{0, 3}, {2, 9}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {2, 
                   Rational[337, 4]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {2, 
                   Rational[337, 4]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {2, 
                   Rational[337, 4]}]}, {
                 Offset[{0, -3.2}, {2, 84.25}], 
                 Offset[{3.2, 1.5}, {2, 84.25}], 
                 Offset[{-3.2, 1.5}, {2, 84.25}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"Middle East respiratory syndrome\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Disease\"", ",", "\"MiddleEastRespiratorySyndrome\""}],
                     "]"}], 
                    "\"Entity[\\\"Disease\\\", \
\\\"MiddleEastRespiratorySyndrome\\\"]\""}, "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {2, 
                  Rational[337, 4]}], 
                Offset[{0, 0}, {2, 84.25}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{-0.14705400000000024`, 
                 Rational[337, 4]}, {-0.14705400000000024`, 84.25}], 
               NCache[{4.147054000000001, 
                 Rational[1723, 20]}, {4.147054000000001, 86.15}]]}}}},
          
          ImageSizeCache->{{78.70460094707688, 
           677.989461628233}, {-276.9087933135901, 252.98946162823302`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:02\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "2.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:14\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "14.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 2.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 14.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               LineBox[{{3., 16}, {3., 16}}]}}, {{}, {{{{}, {{{
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{3., 16}]}, 
                   PointBox[{3., 16}]}}, {}, {}}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{3.`2., 
                  Rational[1627, 20]}, 
                 Offset[{0, 0}, {3.`2., 16}]}, {{3., 81.35}, 
                 Offset[{0, 0}, {3., 16}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {3.`2., 
                   Rational[1627, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {3.`2., 
                   Rational[1627, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {3.`2., 
                   Rational[1627, 20]}]}, {
                 Offset[{0, -3.2}, {3., 81.35}], 
                 Offset[{3.2, 1.5}, {3., 81.35}], 
                 Offset[{-3.2, 1.5}, {3., 81.35}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"influenza\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine487\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine487\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {3.`2., 
                  Rational[1627, 20]}], 
                Offset[{0, 0}, {3., 81.35}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{2.138819, 
                 Rational[1627, 20]}, {2.138819, 81.35}], 
               NCache[{3.861181, 
                 Rational[333, 4]}, {3.861181, 83.25}]]}}}},
          
          ImageSizeCache->{{174.23523939695082`, 
           254.22370611967565`}, {-258.0489455473454, 207.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:03\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "3.`2."}], "}"}], ",", "\"Instant\"", ",", 
                   "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{1900, 1, 1, 0, 0, 3.`2.}, "Instant", "Gregorian", 
             1., {"DateTimeShort"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{2, 10}, {10, 10}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {2, 10}], 
                    Offset[{0, -1}, {10, 10}]}, {
                    Offset[{0, 1}, {2, 10}], 
                    Offset[{0, 1}, {10, 10}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{2, 10}, {10, 10}}]}, 
                   PointBox[{{2, 10}, {10, 10}}], 
                   LineBox[{{2, 10}, {10, 10}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{2, 10}, {10, 10}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{2, 
                  Rational[1569, 20]}, 
                 Offset[{0, 3}, {2, 10}]}, {{2, 78.45}, 
                 Offset[{0, 3}, {2, 10}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {2, 
                   Rational[1569, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {2, 
                   Rational[1569, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {2, 
                   Rational[1569, 20]}]}, {
                 Offset[{0, -3.2}, {2, 78.45}], 
                 Offset[{3.2, 1.5}, {2, 78.45}], 
                 Offset[{-3.2, 1.5}, {2, 78.45}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"Legionnaires' disease\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine482.84\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine482.84\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {2, 
                  Rational[1569, 20]}], 
                Offset[{0, 0}, {2, 78.45}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{0.4781869999999997, 
                 Rational[1569, 20]}, {0.4781869999999997, 78.45}], 
               NCache[{3.5218130000000003`, 
                 Rational[1607, 20]}, {3.5218130000000003`, 80.35}]]}}}},
          
          ImageSizeCache->{{105.02285100895834`, 
           510.8040111300804}, {-238.98257053941427`, 246.80401113008043`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:02\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "2.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:10\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "10.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 2.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 10.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{2, 11}, {6, 11}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {2, 11}], 
                    Offset[{0, -1}, {6, 11}]}, {
                    Offset[{0, 1}, {2, 11}], 
                    Offset[{0, 1}, {6, 11}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{2, 11}, {6, 11}}]}, 
                   PointBox[{{2, 11}, {6, 11}}], 
                   LineBox[{{2, 11}, {6, 11}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{2, 11}, {6, 11}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{2, 
                  Rational[1511, 20]}, 
                 Offset[{0, 3}, {2, 11}]}, {{2, 75.55}, 
                 Offset[{0, 3}, {2, 11}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {2, 
                   Rational[1511, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {2, 
                   Rational[1511, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {2, 
                   Rational[1511, 20]}]}, {
                 Offset[{0, -3.2}, {2, 75.55}], 
                 Offset[{3.2, 1.5}, {2, 75.55}], 
                 Offset[{-3.2, 1.5}, {2, 75.55}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"scabies\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine133.0\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine133.0\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {2, 
                  Rational[1511, 20]}], 
                Offset[{0, 0}, {2, 75.55}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{1.209601, 
                 Rational[1511, 20]}, {1.209601, 75.55}], 
               NCache[{2.790399, 
                 Rational[1549, 20]}, {2.790399, 77.45}]]}}}},
          
          ImageSizeCache->{{135.77874627977502`, 
           343.6185606319277}, {-219.9267339032499, 239.61856063192772`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:02\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "2.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:06\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "6.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 2.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 6.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{2, 12}, {7, 12}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {2, 12}], 
                    Offset[{0, -1}, {7, 12}]}, {
                    Offset[{0, 1}, {2, 12}], 
                    Offset[{0, 1}, {7, 12}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{2, 12}, {7, 12}}]}, 
                   PointBox[{{2, 12}, {7, 12}}], 
                   LineBox[{{2, 12}, {7, 12}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{2, 12}, {7, 12}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{2, 
                  Rational[1453, 20]}, 
                 Offset[{0, 3}, {2, 12}]}, {{2, 72.65}, 
                 Offset[{0, 3}, {2, 12}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {2, 
                   Rational[1453, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {2, 
                   Rational[1453, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {2, 
                   Rational[1453, 20]}]}, {
                 Offset[{0, -3.2}, {2, 72.65}], 
                 Offset[{3.2, 1.5}, {2, 72.65}], 
                 Offset[{-3.2, 1.5}, {2, 72.65}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"severe acute respiratory syndrome\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine079.82\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine079.82\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {2, 
                  Rational[1453, 20]}], 
                Offset[{0, 0}, {2, 72.65}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{-0.20603900000000053`, 
                 Rational[1453, 20]}, {-0.20603900000000053`, 72.65}], 
               NCache[{4.2060390000000005`, 
                 Rational[1491, 20]}, {4.2060390000000005`, 74.55}]]}}}},
          
          ImageSizeCache->{{76.22870412590152, 
           385.41492325646584`}, {-201.43778713331056`, 234.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:02\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "2.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:07\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "7.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 2.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 7.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{4, 21}, {8, 21}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {4, 21}], 
                    Offset[{0, -1}, {8, 21}]}, {
                    Offset[{0, 1}, {4, 21}], 
                    Offset[{0, 1}, {8, 21}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{4, 21}, {8, 21}}]}, 
                   PointBox[{{4, 21}, {8, 21}}], 
                   LineBox[{{4, 21}, {8, 21}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{4, 21}, {8, 21}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{4, 
                  Rational[279, 4]}, 
                 Offset[{0, 3}, {4, 21}]}, {{4, 69.75}, 
                 Offset[{0, 3}, {4, 21}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {4, 
                   Rational[279, 4]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {4, 
                   Rational[279, 4]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {4, 
                   Rational[279, 4]}]}, {
                 Offset[{0, -3.2}, {4, 69.75}], 
                 Offset[{3.2, 1.5}, {4, 69.75}], 
                 Offset[{-3.2, 1.5}, {4, 69.75}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"enterobiasis\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine127.4\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine127.4\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {4, 
                  Rational[279, 4]}], 
                Offset[{0, 0}, {4, 69.75}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{2.973661, 
                 Rational[279, 4]}, {2.973661, 69.75}], 
               NCache[{5.026339, 
                 Rational[1433, 20]}, {5.026339, 71.65}]]}}}},
          
          ImageSizeCache->{{209.15443374599687`, 
           427.97416461714863`}, {-182.54156561244753`, 174.97416461714863`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:04\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "4.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:08\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "8.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 4.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 8.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{1, 5}, {8, 5}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {1, 5}], 
                    Offset[{0, -1}, {8, 5}]}, {
                    Offset[{0, 1}, {1, 5}], 
                    Offset[{0, 1}, {8, 5}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{1, 5}, {8, 5}}]}, 
                   PointBox[{{1, 5}, {8, 5}}], 
                   LineBox[{{1, 5}, {8, 5}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{1, 5}, {8, 5}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{1, 
                  Rational[279, 4]}, 
                 Offset[{0, 3}, {1, 5}]}, {{1, 69.75}, 
                 Offset[{0, 3}, {1, 5}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {1, 
                   Rational[279, 4]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {1, 
                   Rational[279, 4]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {1, 
                   Rational[279, 4]}]}, {
                 Offset[{0, -3.2}, {1, 69.75}], 
                 Offset[{3.2, 1.5}, {1, 69.75}], 
                 Offset[{-3.2, 1.5}, {1, 69.75}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"Condyloma acuminatum\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine078.11\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine078.11\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {1, 
                  Rational[279, 4]}], 
                Offset[{0, 0}, {1, 69.75}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{-0.6633770000000003, 
                 Rational[279, 4]}, {-0.6633770000000003, 69.75}], 
               NCache[{2.6633770000000005`, 
                 Rational[1433, 20]}, {2.6633770000000005`, 71.65}]]}}}},
          
          ImageSizeCache->{{57.11363923592049, 
           427.2112858810041}, {-182.5674009952989, 279.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:01\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "1.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:08\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "8.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 1.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 8.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{3, 17}, {6, 17}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {3, 17}], 
                    Offset[{0, -1}, {6, 17}]}, {
                    Offset[{0, 1}, {3, 17}], 
                    Offset[{0, 1}, {6, 17}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{3, 17}, {6, 17}}]}, 
                   PointBox[{{3, 17}, {6, 17}}], 
                   LineBox[{{3, 17}, {6, 17}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{3, 17}, {6, 17}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{3, 
                  Rational[1337, 20]}, 
                 Offset[{0, 3}, {3, 17}]}, {{3, 66.85}, 
                 Offset[{0, 3}, {3, 17}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {3, 
                   Rational[1337, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {3, 
                   Rational[1337, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {3, 
                   Rational[1337, 20]}]}, {
                 Offset[{0, -3.2}, {3, 66.85}], 
                 Offset[{3.2, 1.5}, {3, 66.85}], 
                 Offset[{-3.2, 1.5}, {3, 66.85}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"hand, foot, and mouth disease\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine074.3\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine074.3\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {3, 
                  Rational[1337, 20]}], 
                Offset[{0, 0}, {3, 66.85}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{1.0063069999999996`, 
                 Rational[1337, 20]}, {1.0063069999999996`, 66.85}], 
               NCache[{4.993693, 
                 Rational[275, 4]}, {4.993693, 68.75}]]}}}},
          
          ImageSizeCache->{{127.1298299266231, 
           343.77052724168675`}, {-163.46754209897398`, 200.77052724168675`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:03\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "3.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:06\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "6.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 3.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 6.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[
                NCache[{
                  Rational[72, 73], 4}, {0.9863013698630136, 4}], 
                NCache[{
                  Rational[432, 73], 4}, {
                 5.917808219178082, 4}]]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[
                    NCache[{{
                    Offset[{0, -1}, {
                    Rational[72, 73], 4}], 
                    Offset[{0, -1}, {
                    Rational[432, 73], 4}]}, {
                    Offset[{0, 1}, {
                    Rational[72, 73], 4}], 
                    Offset[{0, 1}, {
                    Rational[432, 73], 4}]}}, {{
                    Offset[{0, -1}, {0.9863013698630136, 4}], 
                    Offset[{0, -1}, {5.917808219178082, 4}]}, {
                    Offset[{0, 1}, {0.9863013698630136, 4}], 
                    Offset[{0, 1}, {5.917808219178082, 4}]}}]]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[
                    NCache[{{
                    Rational[72, 73], 4}, {
                    Rational[432, 73], 4}}, {{0.9863013698630136, 4}, {
                    5.917808219178082, 4}}]]}, 
                   PointBox[
                    NCache[{{
                    Rational[72, 73], 4}, {
                    Rational[432, 73], 4}}, {{0.9863013698630136, 4}, {
                    5.917808219178082, 4}}]], 
                   LineBox[
                    NCache[{{
                    Rational[72, 73], 4}, {
                    Rational[432, 73], 4}}, {{0.9863013698630136, 4}, {
                    5.917808219178082, 4}}]]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[
                    NCache[{{
                    Rational[72, 73], 4}, {
                    Rational[432, 73], 4}}, {{0.9863013698630136, 4}, {
                    5.917808219178082, 4}}]]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[72, 73], 
                  Rational[1279, 20]}, 
                 Offset[{0, 3}, {
                   Rational[72, 73], 4}]}, {{0.9863013698630136, 63.95}, 
                 Offset[{0, 3}, {0.9863013698630136, 4}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {
                   Rational[72, 73], 
                   Rational[1279, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {
                   Rational[72, 73], 
                   Rational[1279, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {
                   Rational[72, 73], 
                   Rational[1279, 20]}]}, {
                 Offset[{0, -3.2}, {0.9863013698630136, 63.95}], 
                 Offset[{3.2, 1.5}, {0.9863013698630136, 63.95}], 
                 Offset[{-3.2, 1.5}, {0.9863013698630136, 63.95}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"viral hepatitis B without hepatic coma\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine070.3\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine070.3\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[72, 73], 
                  Rational[1279, 20]}], 
                Offset[{0, 0}, {0.9863013698630136, 63.95}]], {
               Center, Bottom}, {Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{-1.3495046301369866`, 
                 Rational[1279, 20]}, {-1.3495046301369866`, 63.95}], 
               NCache[{3.322107369863014, 
                 Rational[1317, 20]}, {3.322107369863014, 65.85}]]}}}},
          
          ImageSizeCache->{{28.500194596572015`, 
           340.93580540342793`}, {-144.7624341227036, 285.935805403428}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    FractionBox["72", "73"]}], "}"}], ",", "\"Instant\"", ",",
                    "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:05\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    FractionBox["432", "73"]}], "}"}], ",", "\"Instant\"", 
                   ",", "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            DateObject[{1900, 1, 1, 0, 0, 
              Rational[72, 73]}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            DateObject[{1900, 1, 1, 0, 0, 
              Rational[432, 73]}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{3, 18}, {14, 18}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {3, 18}], 
                    Offset[{0, -1}, {14, 18}]}, {
                    Offset[{0, 1}, {3, 18}], 
                    Offset[{0, 1}, {14, 18}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{3, 18}, {14, 18}}]}, 
                   PointBox[{{3, 18}, {14, 18}}], 
                   LineBox[{{3, 18}, {14, 18}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{3, 18}, {14, 18}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{3, 
                  Rational[1221, 20]}, 
                 Offset[{0, 3}, {3, 18}]}, {{3, 61.05}, 
                 Offset[{0, 3}, {3, 18}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {3, 
                   Rational[1221, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {3, 
                   Rational[1221, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {3, 
                   Rational[1221, 20]}]}, {
                 Offset[{0, -3.2}, {3, 61.05}], 
                 Offset[{3.2, 1.5}, {3, 61.05}], 
                 Offset[{-3.2, 1.5}, {3, 61.05}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"Dengue fever\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine061\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine061\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {3, 
                  Rational[1221, 20]}], 
                Offset[{0, 0}, {3, 61.05}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{1.9028789999999998`, 
                 Rational[1221, 20]}, {1.9028789999999998`, 61.05}], 
               NCache[{4.0971210000000005`, 
                 Rational[1259, 20]}, {4.0971210000000005`, 62.95}]]}}}},
          
          ImageSizeCache->{{164.38434397108426`, 
           677.989461628233}, {-125.94570420949697`, 194.98946162823302`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:03\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "3.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:14\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "14.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 3.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 14.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{2, 13}, {12, 13}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {2, 13}], 
                    Offset[{0, -1}, {12, 13}]}, {
                    Offset[{0, 1}, {2, 13}], 
                    Offset[{0, 1}, {12, 13}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{2, 13}, {12, 13}}]}, 
                   PointBox[{{2, 13}, {12, 13}}], 
                   LineBox[{{2, 13}, {12, 13}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{2, 13}, {12, 13}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{2, 
                  Rational[1163, 20]}, 
                 Offset[{0, 3}, {2, 13}]}, {{2, 58.15}, 
                 Offset[{0, 3}, {2, 13}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {2, 
                   Rational[1163, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {2, 
                   Rational[1163, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {2, 
                   Rational[1163, 20]}]}, {
                 Offset[{0, -3.2}, {2, 58.15}], 
                 Offset[{3.2, 1.5}, {2, 58.15}], 
                 Offset[{-3.2, 1.5}, {2, 58.15}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"genital herpes\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine054.1\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine054.1\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {2, 
                  Rational[1163, 20]}], 
                Offset[{0, 0}, {2, 58.15}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{0.8674879999999998, 
                 Rational[1163, 20]}, {0.8674879999999998, 58.15}], 
               NCache[{3.132512, 
                 Rational[1201, 20]}, {3.132512, 60.05}]]}}}},
          
          ImageSizeCache->{{121.09822790513411`, 
           594.3967363791567}, {-107.08585644325234`, 227.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:02\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "2.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:12\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "12.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 2.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 12.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{7, 25}, {21, 25}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {7, 25}], 
                    Offset[{0, -1}, {21, 25}]}, {
                    Offset[{0, 1}, {7, 25}], 
                    Offset[{0, 1}, {21, 25}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{7, 25}, {21, 25}}]}, 
                   PointBox[{{7, 25}, {21, 25}}], 
                   LineBox[{{7, 25}, {21, 25}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{7, 25}, {21, 25}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{7, 
                  Rational[221, 4]}, 
                 Offset[{0, 3}, {7, 25}]}, {{7, 55.25}, 
                 Offset[{0, 3}, {7, 25}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {7, 
                   Rational[221, 4]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {7, 
                   Rational[221, 4]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {7, 
                   Rational[221, 4]}]}, {
                 Offset[{0, -3.2}, {7, 55.25}], 
                 Offset[{3.2, 1.5}, {7, 55.25}], 
                 Offset[{-3.2, 1.5}, {7, 55.25}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   
                   TemplateBox[{
                    "\"unclassified diseases due to viruses and Chlamydiae\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine078.8\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine078.8\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {7, 
                  Rational[221, 4]}], 
                Offset[{0, 0}, {7, 55.25}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{3.8266069999999996`, 
                 Rational[221, 4]}, {3.8266069999999996`, 55.25}], 
               NCache[{10.173393, 
                 Rational[1143, 20]}, {10.173393, 57.15}]]}}}},
          
          ImageSizeCache->{{245.19356193476068`, 
           970.5850767435343}, {-87.80054704877483, 148.58507674353416`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:07\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "7.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:21\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "21.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 7.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 21.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{1, 6}, {3, 6}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {1, 6}], 
                    Offset[{0, -1}, {3, 6}]}, {
                    Offset[{0, 1}, {1, 6}], 
                    Offset[{0, 1}, {3, 6}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{1, 6}, {3, 6}}]}, 
                   PointBox[{{1, 6}, {3, 6}}], 
                   LineBox[{{1, 6}, {3, 6}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{1, 6}, {3, 6}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{1, 
                  Rational[221, 4]}, 
                 Offset[{0, 3}, {1, 6}]}, {{1, 55.25}, 
                 Offset[{0, 3}, {1, 6}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {1, 
                   Rational[221, 4]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {1, 
                   Rational[221, 4]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {1, 
                   Rational[221, 4]}]}, {
                 Offset[{0, -3.2}, {1, 55.25}], 
                 Offset[{3.2, 1.5}, {1, 55.25}], 
                 Offset[{-3.2, 1.5}, {1, 55.25}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"streptococcal sore throat\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine034.0\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine034.0\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {1, 
                  Rational[221, 4]}], 
                Offset[{0, 0}, {1, 55.25}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{-0.6869710000000002, 
                 Rational[221, 4]}, {-0.6869710000000002, 55.25}], 
               NCache[{2.686971, 
                 Rational[1143, 20]}, {2.686971, 57.15}]]}}}},
          
          ImageSizeCache->{{56.12749585615714, 
           218.22947275831325`}, {-88.21547030524067, 273.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:01\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "1.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:03\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "3.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 1.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            DateObject[{1900, 1, 1, 0, 0, 3.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               LineBox[{{7., 23}, {7., 23}}]}}, {{}, {{{{}, {{{
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{7., 23}]}, 
                   PointBox[{7., 23}]}}, {}, {}}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{7.`3., 
                  Rational[1047, 20]}, 
                 Offset[{0, 0}, {7.`3., 23}]}, {{7., 52.35}, 
                 Offset[{0, 0}, {7., 23}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {7.`3., 
                   Rational[1047, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {7.`3., 
                   Rational[1047, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {7.`3., 
                   Rational[1047, 20]}]}, {
                 Offset[{0, -3.2}, {7., 52.35}], 
                 Offset[{3.2, 1.5}, {7., 52.35}], 
                 Offset[{-3.2, 1.5}, {7., 52.35}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"lyme disease\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine088.81\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine088.81\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {7.`3., 
                  Rational[1047, 20]}], 
                Offset[{0, 0}, {7., 52.35}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{5.926473, 
                 Rational[1047, 20]}, {5.926473, 52.35}], 
               NCache[{8.073527, 
                 Rational[217, 4]}, {8.073527, 54.25}]]}}}},
          
          ImageSizeCache->{{332.54539947723333`, 
           430.28444703569846`}, {-69.34508416722906, 161.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:07\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "7.`3."}], "}"}], ",", "\"Instant\"", ",", 
                   "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{1900, 1, 1, 0, 0, 7.`3.}, "Instant", "Gregorian", 
             1., {"DateTimeShort"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{3, 19}, {6, 19}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {3, 19}], 
                    Offset[{0, -1}, {6, 19}]}, {
                    Offset[{0, 1}, {3, 19}], 
                    Offset[{0, 1}, {6, 19}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{3, 19}, {6, 19}}]}, 
                   PointBox[{{3, 19}, {6, 19}}], 
                   LineBox[{{3, 19}, {6, 19}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{3, 19}, {6, 19}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{3, 
                  Rational[1047, 20]}, 
                 Offset[{0, 3}, {3, 19}]}, {{3, 52.35}, 
                 Offset[{0, 3}, {3, 19}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {3, 
                   Rational[1047, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {3, 
                   Rational[1047, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {3, 
                   Rational[1047, 20]}]}, {
                 Offset[{0, -3.2}, {3, 52.35}], 
                 Offset[{3.2, 1.5}, {3, 52.35}], 
                 Offset[{-3.2, 1.5}, {3, 52.35}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"yellow fever\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine060\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine060\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {3, 
                  Rational[1047, 20]}], 
                Offset[{0, 0}, {3, 52.35}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{1.985458, 
                 Rational[1047, 20]}, {1.985458, 52.35}], 
               NCache[{4.0145420000000005`, 
                 Rational[217, 4]}, {4.0145420000000005`, 54.25}]]}}}},
          
          ImageSizeCache->{{168.0547801868023, 
           343.77052724168675`}, {-69.11561140891581, 187.77052724168675`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:03\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "3.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:06\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "6.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 3.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 6.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[
                NCache[{
                  Rational[1, 2], 2}, {0.5, 2}], {3, 2}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[
                    NCache[{{
                    Offset[{0, -1}, {
                    Rational[1, 2], 2}], 
                    Offset[{0, -1}, {3, 2}]}, {
                    Offset[{0, 1}, {
                    Rational[1, 2], 2}], 
                    Offset[{0, 1}, {3, 2}]}}, {{
                    Offset[{0, -1}, {0.5, 2}], 
                    Offset[{0, -1}, {3, 2}]}, {
                    Offset[{0, 1}, {0.5, 2}], 
                    Offset[{0, 1}, {3, 2}]}}]]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[
                    NCache[{{
                    Rational[1, 2], 2}, {3, 2}}, {{0.5, 2}, {3, 2}}]]}, 
                   PointBox[
                    NCache[{{
                    Rational[1, 2], 2}, {3, 2}}, {{0.5, 2}, {3, 2}}]], 
                   LineBox[
                    NCache[{{
                    Rational[1, 2], 2}, {3, 2}}, {{0.5, 2}, {3, 2}}]]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[
                    NCache[{{
                    Rational[1, 2], 2}, {3, 2}}, {{0.5, 2}, {3, 
                    2}}]]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1, 2], 
                  Rational[1047, 20]}, 
                 Offset[{0, 3}, {
                   Rational[1, 2], 2}]}, {{0.5, 52.35}, 
                 Offset[{0, 3}, {0.5, 2}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {
                   Rational[1, 2], 
                   Rational[1047, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {
                   Rational[1, 2], 
                   Rational[1047, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {
                   Rational[1, 2], 
                   Rational[1047, 20]}]}, {
                 Offset[{0, -3.2}, {0.5, 52.35}], 
                 Offset[{3.2, 1.5}, {0.5, 52.35}], 
                 Offset[{-3.2, 1.5}, {0.5, 52.35}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"botulism\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine005.1\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine005.1\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1, 2], 
                  Rational[1047, 20]}], 
                Offset[{0, 0}, {0.5, 52.35}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{-0.32579000000000014`, 
                 Rational[1047, 20]}, {-0.32579000000000014`, 52.35}], 
               NCache[{1.32579, 
                 Rational[217, 4]}, {1.32579, 54.25}]]}}}},
          
          ImageSizeCache->{{71.22354790525046, 
           218.22947275831325`}, {-69.34508416722906, 299.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    FractionBox["1", "2"]}], "}"}], ",", "\"Instant\"", ",", 
                   "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:03\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "3.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            DateObject[{1900, 1, 1, 0, 0, 
              Rational[1, 2]}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 3.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{4, 22}, {10, 22}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {4, 22}], 
                    Offset[{0, -1}, {10, 22}]}, {
                    Offset[{0, 1}, {4, 22}], 
                    Offset[{0, 1}, {10, 22}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{4, 22}, {10, 22}}]}, 
                   PointBox[{{4, 22}, {10, 22}}], 
                   LineBox[{{4, 22}, {10, 22}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{4, 22}, {10, 22}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{4, 
                  Rational[989, 20]}, 
                 Offset[{0, 3}, {4, 22}]}, {{4, 49.45}, 
                 Offset[{0, 3}, {4, 22}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {4, 
                   Rational[989, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {4, 
                   Rational[989, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {4, 
                   Rational[989, 20]}]}, {
                 Offset[{0, -3.2}, {4, 49.45}], 
                 Offset[{3.2, 1.5}, {4, 49.45}], 
                 Offset[{-3.2, 1.5}, {4, 49.45}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"eastern equine encephalitis\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine062.2\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine062.2\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {4, 
                  Rational[989, 20]}], 
                Offset[{0, 0}, {4, 49.45}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{2.1714649999999995`, 
                 Rational[989, 20]}, {2.1714649999999995`, 49.45}], 
               NCache[{5.8285350000000005`, 
                 Rational[1027, 20]}, {5.8285350000000005`, 51.35}]]}}}},
          
          ImageSizeCache->{{175.62555883404286`, 
           510.97416461714863`}, {-50.44886264636608, 168.97416461714863`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:04\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "4.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:10\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "10.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 4.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 10.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{1, 7}, {2, 7}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {1, 7}], 
                    Offset[{0, -1}, {2, 7}]}, {
                    Offset[{0, 1}, {1, 7}], 
                    Offset[{0, 1}, {2, 7}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{1, 7}, {2, 7}}]}, 
                   PointBox[{{1, 7}, {2, 7}}], 
                   LineBox[{{1, 7}, {2, 7}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{1, 7}, {2, 7}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{1, 
                  Rational[989, 20]}, 
                 Offset[{0, 3}, {1, 7}]}, {{1, 49.45}, 
                 Offset[{0, 3}, {1, 7}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {1, 
                   Rational[989, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {1, 
                   Rational[989, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {1, 
                   Rational[989, 20]}]}, {
                 Offset[{0, -3.2}, {1, 49.45}], 
                 Offset[{3.2, 1.5}, {1, 49.45}], 
                 Offset[{-3.2, 1.5}, {1, 49.45}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"shigellosis\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine004\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine004\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {1, 
                  Rational[989, 20]}], 
                Offset[{0, 0}, {1, 49.45}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{0.0680369999999999, 
                 Rational[989, 20]}, {0.0680369999999999, 49.45}], 
               NCache[{1.931963, 
                 Rational[1027, 20]}, {1.931963, 51.35}]]}}}},
          
          ImageSizeCache->{{87.68408400858445, 
           176.43311013377507`}, {-50.47469802921745, 266.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:01\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "1.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:02\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "2.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 1.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 2.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{7, 24}, {14, 24}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {7, 24}], 
                    Offset[{0, -1}, {14, 24}]}, {
                    Offset[{0, 1}, {7, 24}], 
                    Offset[{0, 1}, {14, 24}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{7, 24}, {14, 24}}]}, 
                   PointBox[{{7, 24}, {14, 24}}], 
                   LineBox[{{7, 24}, {14, 24}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{7, 24}, {14, 24}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{7, 
                  Rational[931, 20]}, 
                 Offset[{0, 3}, {7, 24}]}, {{7, 46.55}, 
                 Offset[{0, 3}, {7, 24}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {7, 
                   Rational[931, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {7, 
                   Rational[931, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {7, 
                   Rational[931, 20]}]}, {
                 Offset[{0, -3.2}, {7, 46.55}], 
                 Offset[{3.2, 1.5}, {7, 46.55}], 
                 Offset[{-3.2, 1.5}, {7, 46.55}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"rickettsioses\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine083\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine083\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {7, 
                  Rational[931, 20]}], 
                Offset[{0, 0}, {7, 46.55}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{5.961864, 
                 Rational[931, 20]}, {5.961864, 46.55}], 
               NCache[{8.038136, 
                 Rational[969, 20]}, {8.038136, 48.45}]]}}}},
          
          ImageSizeCache->{{334.03515291864534`, 
           677.989461628233}, {-31.59377351943874, 155.98946162823302`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:07\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "7.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:14\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "14.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 7.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 14.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{14, 30}, {21, 30}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {14, 30}], 
                    Offset[{0, -1}, {21, 30}]}, {
                    Offset[{0, 1}, {14, 30}], 
                    Offset[{0, 1}, {21, 30}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{14, 30}, {21, 30}}]}, 
                   PointBox[{{14, 30}, {21, 30}}], 
                   LineBox[{{14, 30}, {21, 30}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{14, 30}, {21, 30}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{14, 
                  Rational[931, 20]}, 
                 Offset[{0, 3}, {14, 30}]}, {{14, 46.55}, 
                 Offset[{0, 3}, {14, 30}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {14, 
                   Rational[931, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {14, 
                   Rational[931, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {14, 
                   Rational[931, 20]}]}, {
                 Offset[{0, -3.2}, {14, 46.55}], 
                 Offset[{3.2, 1.5}, {14, 46.55}], 
                 Offset[{-3.2, 1.5}, {14, 46.55}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   
                   TemplateBox[{
                    "\"unspecified type of chlamydial infection co-occurring \
with other medical conditions\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine079.98\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine079.98\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {14, 
                  Rational[931, 20]}], 
                Offset[{0, 0}, {14, 46.55}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{9.304794, 
                 Rational[931, 20]}, {9.304794, 46.55}], 
               NCache[{18.695206, 
                 Rational[969, 20]}, {18.695206, 48.45}]]}}}},
          
          ImageSizeCache->{{473.7469290553256, 
           970.5640000000002}, {-31.604311891205725`, 117.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:14\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "14.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:21\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "21.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 14.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            DateObject[{1900, 1, 1, 0, 0, 21.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{3, 20}, {21, 20}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {3, 20}], 
                    Offset[{0, -1}, {21, 20}]}, {
                    Offset[{0, 1}, {3, 20}], 
                    Offset[{0, 1}, {21, 20}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{3, 20}, {21, 20}}]}, 
                   PointBox[{{3, 20}, {21, 20}}], 
                   LineBox[{{3, 20}, {21, 20}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{3, 20}, {21, 20}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{3, 
                  Rational[931, 20]}, 
                 Offset[{0, 3}, {3, 20}]}, {{3, 46.55}, 
                 Offset[{0, 3}, {3, 20}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {3, 
                   Rational[931, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {3, 
                   Rational[931, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {3, 
                   Rational[931, 20]}]}, {
                 Offset[{0, -3.2}, {3, 46.55}], 
                 Offset[{3.2, 1.5}, {3, 46.55}], 
                 Offset[{-3.2, 1.5}, {3, 46.55}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"tetanus\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine037\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine037\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {3, 
                  Rational[931, 20]}], 
                Offset[{0, 0}, {3, 46.55}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{2.2213979999999998`, 
                 Rational[931, 20]}, {2.2213979999999998`, 46.55}], 
               NCache[{3.7786020000000002`, 
                 Rational[969, 20]}, {3.7786020000000002`, 48.45}]]}}}},
          ImageSizeCache->{{177.84406794326472`, 
           970.8426732828578}, {-31.44698517406357, 181.84267328285785`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:03\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "3.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:21\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "21.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 3.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 21.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[
                NCache[{
                  Rational[1, 2], 3}, {0.5, 3}], {3, 3}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[
                    NCache[{{
                    Offset[{0, -1}, {
                    Rational[1, 2], 3}], 
                    Offset[{0, -1}, {3, 3}]}, {
                    Offset[{0, 1}, {
                    Rational[1, 2], 3}], 
                    Offset[{0, 1}, {3, 3}]}}, {{
                    Offset[{0, -1}, {0.5, 3}], 
                    Offset[{0, -1}, {3, 3}]}, {
                    Offset[{0, 1}, {0.5, 3}], 
                    Offset[{0, 1}, {3, 3}]}}]]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[
                    NCache[{{
                    Rational[1, 2], 3}, {3, 3}}, {{0.5, 3}, {3, 3}}]]}, 
                   PointBox[
                    NCache[{{
                    Rational[1, 2], 3}, {3, 3}}, {{0.5, 3}, {3, 3}}]], 
                   LineBox[
                    NCache[{{
                    Rational[1, 2], 3}, {3, 3}}, {{0.5, 3}, {3, 3}}]]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[
                    NCache[{{
                    Rational[1, 2], 3}, {3, 3}}, {{0.5, 3}, {3, 
                    3}}]]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1, 2], 
                  Rational[931, 20]}, 
                 Offset[{0, 3}, {
                   Rational[1, 2], 3}]}, {{0.5, 46.55}, 
                 Offset[{0, 3}, {0.5, 3}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {
                   Rational[1, 2], 
                   Rational[931, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {
                   Rational[1, 2], 
                   Rational[931, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {
                   Rational[1, 2], 
                   Rational[931, 20]}]}, {
                 Offset[{0, -3.2}, {0.5, 46.55}], 
                 Offset[{3.2, 1.5}, {0.5, 46.55}], 
                 Offset[{-3.2, 1.5}, {0.5, 46.55}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"salmonella infections\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine003\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine003\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1, 2], 
                  Rational[931, 20]}], 
                Offset[{0, 0}, {0.5, 46.55}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{-0.9864220000000001, 
                 Rational[931, 20]}, {-0.9864220000000001, 46.55}], 
               NCache[{1.9864220000000001`, 
                 Rational[969, 20]}, {1.9864220000000001`, 48.45}]]}}}},
          
          ImageSizeCache->{{43.61153327187656, 
           218.22947275831325`}, {-31.604311891205725`, 292.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    FractionBox["1", "2"]}], "}"}], ",", "\"Instant\"", ",", 
                   "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:03\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "3.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            DateObject[{1900, 1, 1, 0, 0, 
              Rational[1, 2]}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 3.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{10, 28}, {15, 28}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {10, 28}], 
                    Offset[{0, -1}, {15, 28}]}, {
                    Offset[{0, 1}, {10, 28}], 
                    Offset[{0, 1}, {15, 28}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{10, 28}, {15, 28}}]}, 
                   PointBox[{{10, 28}, {15, 28}}], 
                   LineBox[{{10, 28}, {15, 28}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{10, 28}, {15, 28}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{10, 
                  Rational[873, 20]}, 
                 Offset[{0, 3}, {10, 28}]}, {{10, 43.65}, 
                 Offset[{0, 3}, {10, 28}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {10, 
                   Rational[873, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {10, 
                   Rational[873, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {10, 
                   Rational[873, 20]}]}, {
                 Offset[{0, -3.2}, {10, 43.65}], 
                 Offset[{3.2, 1.5}, {10, 43.65}], 
                 Offset[{-3.2, 1.5}, {10, 43.65}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"malaria\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine084\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine084\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {10, 
                  Rational[873, 20]}], 
                Offset[{0, 0}, {10, 43.65}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{9.221398, 
                 Rational[873, 20]}, {9.221398, 43.65}], 
               NCache[{10.778602, 
                 Rational[911, 20]}, {10.778602, 45.55}]]}}}},
          
          ImageSizeCache->{{470.2612795978897, 
           719.7858242527712}, {-12.733925753194114`, 130.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:10\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "10.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:15\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "15.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 10.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 15.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{14, 31}, {21, 31}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {14, 31}], 
                    Offset[{0, -1}, {21, 31}]}, {
                    Offset[{0, 1}, {14, 31}], 
                    Offset[{0, 1}, {21, 31}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{14, 31}, {21, 31}}]}, 
                   PointBox[{{14, 31}, {21, 31}}], 
                   LineBox[{{14, 31}, {21, 31}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{14, 31}, {21, 31}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{14, 
                  Rational[873, 20]}, 
                 Offset[{0, 3}, {14, 31}]}, {{14, 43.65}, 
                 Offset[{0, 3}, {14, 31}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {14, 
                   Rational[873, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {14, 
                   Rational[873, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {14, 
                   Rational[873, 20]}]}, {
                 Offset[{0, -3.2}, {14, 43.65}], 
                 Offset[{3.2, 1.5}, {14, 43.65}], 
                 Offset[{-3.2, 1.5}, {14, 43.65}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"mumps\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine072\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine072\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {14, 
                  Rational[873, 20]}], 
                Offset[{0, 0}, {14, 43.65}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{13.221398, 
                 Rational[873, 20]}, {13.221398, 43.65}], 
               NCache[{14.778602, 
                 Rational[911, 20]}, {14.778602, 45.55}]]}}}},
          
          ImageSizeCache->{{637.4467300960424, 
           970.5640000000002}, {-12.733925753194114`, 110.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:14\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "14.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:21\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "21.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 14.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 21.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{8, 27}, {12, 27}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {8, 27}], 
                    Offset[{0, -1}, {12, 27}]}, {
                    Offset[{0, 1}, {8, 27}], 
                    Offset[{0, 1}, {12, 27}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{8, 27}, {12, 27}}]}, 
                   PointBox[{{8, 27}, {12, 27}}], 
                   LineBox[{{8, 27}, {12, 27}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{8, 27}, {12, 27}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{8, 
                  Rational[873, 20]}, 
                 Offset[{0, 3}, {8, 27}]}, {{8, 43.65}, 
                 Offset[{0, 3}, {8, 27}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {8, 
                   Rational[873, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {8, 
                   Rational[873, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {8, 
                   Rational[873, 20]}]}, {
                 Offset[{0, -3.2}, {8, 43.65}], 
                 Offset[{3.2, 1.5}, {8, 43.65}], 
                 Offset[{-3.2, 1.5}, {8, 43.65}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"measles\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine055\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine055\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {8, 
                  Rational[873, 20]}], 
                Offset[{0, 0}, {8, 43.65}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{7.1742099999999995`, 
                 Rational[873, 20]}, {7.1742099999999995`, 43.65}], 
               NCache[{8.82579, 
                 Rational[911, 20]}, {8.82579, 45.55}]]}}}},
          
          ImageSizeCache->{{384.90755347029074`, 
           594.7887141189959}, {-12.522639872190041`, 135.78871411899593`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:08\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "8.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:12\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "12.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 8.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 12.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{2, 14}, {5, 14}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {2, 14}], 
                    Offset[{0, -1}, {5, 14}]}, {
                    Offset[{0, 1}, {2, 14}], 
                    Offset[{0, 1}, {5, 14}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{2, 14}, {5, 14}}]}, 
                   PointBox[{{2, 14}, {5, 14}}], 
                   LineBox[{{2, 14}, {5, 14}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{2, 14}, {5, 14}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{2, 
                  Rational[873, 20]}, 
                 Offset[{0, 3}, {2, 14}]}, {{2, 43.65}, 
                 Offset[{0, 3}, {2, 14}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {2, 
                   Rational[873, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {2, 
                   Rational[873, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {2, 
                   Rational[873, 20]}]}, {
                 Offset[{0, -3.2}, {2, 43.65}], 
                 Offset[{3.2, 1.5}, {2, 43.65}], 
                 Offset[{-3.2, 1.5}, {2, 43.65}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"diphtheria\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine032\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine032\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {2, 
                  Rational[873, 20]}], 
                Offset[{0, 0}, {2, 43.65}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{1.0916309999999998`, 
                 Rational[873, 20]}, {1.0916309999999998`, 43.65}], 
               NCache[{2.9083690000000004`, 
                 Rational[911, 20]}, {2.9083690000000004`, 45.55}]]}}}},
          
          ImageSizeCache->{{130.64439200549634`, 
           301.8221980073896}, {-12.556123760583716`, 220.8221980073896}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:02\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "2.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:05\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "5.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 2.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 5.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[
                NCache[{
                  Rational[1, 12], 1}, {0.08333333333333333, 1}], {5, 
                1}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[
                    NCache[{{
                    Offset[{0, -1}, {
                    Rational[1, 12], 1}], 
                    Offset[{0, -1}, {5, 1}]}, {
                    Offset[{0, 1}, {
                    Rational[1, 12], 1}], 
                    Offset[{0, 1}, {5, 1}]}}, {{
                    Offset[{0, -1}, {0.08333333333333333, 1}], 
                    Offset[{0, -1}, {5, 1}]}, {
                    Offset[{0, 1}, {0.08333333333333333, 1}], 
                    Offset[{0, 1}, {5, 1}]}}]]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[
                    NCache[{{
                    Rational[1, 12], 1}, {5, 1}}, {{0.08333333333333333, 1}, {
                    5, 1}}]]}, 
                   PointBox[
                    NCache[{{
                    Rational[1, 12], 1}, {5, 1}}, {{0.08333333333333333, 1}, {
                    5, 1}}]], 
                   LineBox[
                    NCache[{{
                    Rational[1, 12], 1}, {5, 1}}, {{0.08333333333333333, 1}, {
                    5, 1}}]]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[
                    NCache[{{
                    Rational[1, 12], 1}, {5, 1}}, {{0.08333333333333333, 1}, {
                    5, 1}}]]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{
                  Rational[1, 12], 
                  Rational[873, 20]}, 
                 Offset[{0, 3}, {
                   Rational[1, 12], 1}]}, {{0.08333333333333333, 43.65}, 
                 Offset[{0, 3}, {0.08333333333333333, 1}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {
                   Rational[1, 12], 
                   Rational[873, 20]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {
                   Rational[1, 12], 
                   Rational[873, 20]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {
                   Rational[1, 12], 
                   Rational[873, 20]}]}, {
                 Offset[{0, -3.2}, {0.08333333333333333, 43.65}], 
                 Offset[{3.2, 1.5}, {0.08333333333333333, 43.65}], 
                 Offset[{-3.2, 1.5}, {0.08333333333333333, 43.65}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"cholera\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine001\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine001\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {
                  Rational[1, 12], 
                  Rational[873, 20]}], 
                Offset[{0, 0}, {0.08333333333333333, 43.65}]], {
               Center, Bottom}, {Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{-0.6952686666666668, 
                 Rational[873, 20]}, {-0.6952686666666668, 43.65}], 
               NCache[{0.8619353333333335, 
                 Rational[911, 20]}, {0.8619353333333335, 45.55}]]}}}},
          
          ImageSizeCache->{{55.958485563829996`, 
           301.8221980073896}, {-12.556123760583716`, 304.8221980073896}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:00\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    FractionBox["1", "12"]}], "}"}], ",", "\"Instant\"", ",", 
                   "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:05\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "5.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            DateObject[{1900, 1, 1, 0, 0, 
              Rational[1, 12]}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 5.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               CapForm["Round"], 
               LineBox[{{14., 32}, {14., 32}}]}}, {{}, {{{{}, {{{
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{14., 32}]}, 
                   PointBox[{14., 32}]}}, {}, {}}, {}}, {{}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{14.`3., 
                  Rational[163, 4]}, 
                 Offset[{0, 0}, {14.`3., 32}]}, {{14., 40.75}, 
                 Offset[{0, 0}, {14., 32}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {14.`3., 
                   Rational[163, 4]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {14.`3., 
                   Rational[163, 4]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {14.`3., 
                   Rational[163, 4]}]}, {
                 Offset[{0, -3.2}, {14., 40.75}], 
                 Offset[{3.2, 1.5}, {14., 40.75}], 
                 Offset[{-3.2, 1.5}, {14., 40.75}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"rubella\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine056\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine056\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {14.`3., 
                  Rational[163, 4]}], 
                Offset[{0, 0}, {14., 40.75}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{13.256789, 
                 Rational[163, 4]}, {13.256789, 40.75}], 
               NCache[{14.743211, 
                 Rational[853, 20]}, {14.743211, 42.65}]]}}}},
          
          ImageSizeCache->{{638.9259451656874, 709.0529780907787}, {
           6.136460384817497, 103.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:14\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "14.`3."}], "}"}], ",", "\"Instant\"", ",", 
                   "\"Gregorian\"", ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{1900, 1, 1, 0, 0, 14.`3.}, "Instant", "Gregorian", 
             1., {"DateTimeShort"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{10, 29}, {21, 29}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {10, 29}], 
                    Offset[{0, -1}, {21, 29}]}, {
                    Offset[{0, 1}, {10, 29}], 
                    Offset[{0, 1}, {21, 29}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{10, 29}, {21, 29}}]}, 
                   PointBox[{{10, 29}, {21, 29}}], 
                   LineBox[{{10, 29}, {21, 29}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{10, 29}, {21, 29}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{10, 
                  Rational[163, 4]}, 
                 Offset[{0, 3}, {10, 29}]}, {{10, 40.75}, 
                 Offset[{0, 3}, {10, 29}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {10, 
                   Rational[163, 4]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {10, 
                   Rational[163, 4]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {10, 
                   Rational[163, 4]}]}, {
                 Offset[{0, -3.2}, {10, 40.75}], 
                 Offset[{3.2, 1.5}, {10, 40.75}], 
                 Offset[{-3.2, 1.5}, {10, 40.75}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"chicken pox\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine052\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine052\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {10, 
                  Rational[163, 4]}], 
                Offset[{0, 0}, {10, 40.75}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{8.985458, 
                 Rational[163, 4]}, {8.985458, 40.75}], 
               NCache[{11.014542, 
                 Rational[853, 20]}, {11.014542, 42.65}]]}}}},
          
          ImageSizeCache->{{460.3998458002561, 970.5640000000002}, {
           6.136460384817497, 123.}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:10\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "10.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:21\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "21.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 10.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 21.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{7, 26}, {21, 26}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {7, 26}], 
                    Offset[{0, -1}, {21, 26}]}, {
                    Offset[{0, 1}, {7, 26}], 
                    Offset[{0, 1}, {21, 26}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{7, 26}, {21, 26}}]}, 
                   PointBox[{{7, 26}, {21, 26}}], 
                   LineBox[{{7, 26}, {21, 26}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{7, 26}, {21, 26}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{7, 
                  Rational[163, 4]}, 
                 Offset[{0, 3}, {7, 26}]}, {{7, 40.75}, 
                 Offset[{0, 3}, {7, 26}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {7, 
                   Rational[163, 4]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {7, 
                   Rational[163, 4]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {7, 
                   Rational[163, 4]}]}, {
                 Offset[{0, -3.2}, {7, 40.75}], 
                 Offset[{3.2, 1.5}, {7, 40.75}], 
                 Offset[{-3.2, 1.5}, {7, 40.75}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"smallpox\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"ICDNine050\""}], "]"}], 
                    "\"Entity[\\\"Disease\\\", \\\"ICDNine050\\\"]\""}, 
                    "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {7, 
                  Rational[163, 4]}], 
                Offset[{0, 0}, {7, 40.75}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{6.150615999999999, 
                 Rational[163, 4]}, {6.150615999999999, 40.75}], 
               NCache[{7.849384000000001, 
                 Rational[853, 20]}, {7.849384000000001, 42.65}]]}}}},
          
          ImageSizeCache->{{342.02891008555144`, 970.8848514994336}, {
           6.25160888538386, 142.88485149943364`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:07\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "7.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:21\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "21.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 7.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 21.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, 
     {RGBColor[0.34398, 0.49112, 0.89936], AbsolutePointSize[6], 
      AbsoluteThickness[3], Opacity[1], CapForm["Butt"], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[0.34398, 0.49112, 0.89936], 
               Thickness[Large], 
               Opacity[0.2]]], 
             FaceForm[{
               RGBColor[
               0.22932000000000002`, 0.32741333333333333`, 
                0.5995733333333334], 
               Opacity[1]}], 
             CapForm["Round"], 
             AbsoluteThickness[2.5], 
             AbsolutePointSize[9], 
             FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
              Directive[
               Opacity[0.2]], {
               Directive[
                Opacity[0.2]], 
               EdgeForm[], 
               RectangleBox[{2, 15}, {21, 15}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {2, 15}], 
                    Offset[{0, -1}, {21, 15}]}, {
                    Offset[{0, 1}, {2, 15}], 
                    Offset[{0, 1}, {21, 15}]}}]}, {
                    AbsolutePointSize[8], 
                    GrayLevel[1], 
                    PointBox[{{2, 15}, {21, 15}}]}, 
                   PointBox[{{2, 15}, {21, 15}}], 
                   LineBox[{{2, 15}, {21, 15}}]}}, {}, {{
                   AbsolutePointSize[4], 
                   GrayLevel[1], 
                   PointBox[{{2, 15}, {21, 15}}]}}}, {}}, {{}, {}}}}}, {{
              CapForm["Butt"], 
              LineBox[
               NCache[{{2, 
                  Rational[163, 4]}, 
                 Offset[{0, 3}, {2, 15}]}, {{2, 40.75}, 
                 Offset[{0, 3}, {2, 15}]}]], 
              PolygonBox[
               NCache[{
                 Offset[{0, 
                   Rational[-16, 5]}, {2, 
                   Rational[163, 4]}], 
                 Offset[{
                   Rational[16, 5], 1.5}, {2, 
                   Rational[163, 4]}], 
                 Offset[{
                   Rational[-16, 5], 1.5}, {2, 
                   Rational[163, 4]}]}, {
                 Offset[{0, -3.2}, {2, 40.75}], 
                 Offset[{3.2, 1.5}, {2, 40.75}], 
                 Offset[{-3.2, 1.5}, {2, 40.75}]}]], 
              InsetBox[
               BoxData[
                FormBox[
                 FrameBox[
                  StyleBox[
                   TemplateBox[{"\"Ebola virus disease\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"Disease\"", ",", "\"EbolaVirusDisease\""}], 
                    "]"}], "\"Entity[\\\"Disease\\\", \\\"EbolaVirusDisease\\\
\"]\""}, "EntityTraditionalFramed"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                  5, FrameMargins -> 5, Background -> GrayLevel[1], 
                  StripOnInput -> False], TraditionalForm]], 
               NCache[
                Offset[{0, 0}, {2, 
                  Rational[163, 4]}], 
                Offset[{0, 0}, {2, 40.75}]], {Center, Bottom}, {
               Automatic, Automatic}]}, {
              EdgeForm[], 
              FaceForm[], 
              RectangleBox[
               NCache[{0.5843599999999998, 
                 Rational[163, 4]}, {0.5843599999999998, 40.75}], 
               NCache[{3.4156400000000002`, 
                 Rational[853, 20]}, {3.4156400000000002`, 42.65}]]}}}},
          
          ImageSizeCache->{{109.69761748174888`, 970.566889866225}, {
           6.5695705185925135`, 213.56688986622498`}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{"\"start: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:02\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "2.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}, {"\"end: \"", 
             TemplateBox[{
               RowBox[{"\"Mon 1 Jan 1900 00:00:21\"", 
                 StyleBox[
                  RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "1.`", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "1900", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
                    "21.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"",
                    ",", "1.`", ",", 
                   RowBox[{"{", "\"DateTimeShort\"", "}"}]}], "]"}]}, 
              "DateObject", Editable -> False]}}, RowSpacings -> 1, 
           ColumnSpacings -> 0, RowAlignments -> Baseline, ColumnAlignments -> 
           Right], 
          Function[BoxForm`e$, 
           TableForm[
           BoxForm`e$, TableAlignments -> Right, 
            TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         TableForm[{{"start: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 2.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}, {"end: ", 
            
            DateObject[{1900, 1, 1, 0, 0, 21.}, "Instant", "Gregorian", 1., {
             "DateTimeShort"}]}}, TableAlignments -> Right, 
          TableSpacing -> {1, 0}], {}], 
        "Tooltip"]& ]}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesOrigin->{0, 0},
  Frame->{{None, None}, {True, None}},
  FrameTicks->
   FrontEndValueCache[{{None, None}, {
     Charting`getDateTicks[Automatic, {Automatic}, 
       (Map[DateList, {
         SlotSequence[1]}]& )[
        SlotSequence[1]], None, 11, {{0.006, 0}, {0.003, 0}}, Automatic]& , 
      Automatic}}, {{None, None}, {{{-5., 
        FormBox["\"23:59:55\"", TraditionalForm], {0.004, 0.}}, {0., 
        FormBox["\"00:00:00\"", TraditionalForm], {0.004, 0.}}, {5., 
        FormBox["\"00:00:05\"", TraditionalForm], {0.004, 0.}}, {10., 
        FormBox["\"00:00:10\"", TraditionalForm], {0.004, 0.}}, {15., 
        FormBox["\"00:00:15\"", TraditionalForm], {0.004, 0.}}, {20., 
        FormBox["\"00:00:20\"", TraditionalForm], {0.004, 0.}}, {25., 
        FormBox["\"00:00:25\"", TraditionalForm], {0.004, 0.}}, {-5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 
        0.}}, {-4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 
        0.}}, {-3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 
        0.}}, {-2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 
        0.}}, {-1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       9., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       10., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       11., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       12., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       13., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       14., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       15., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       16., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       17., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       18., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       19., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       20., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}, {
       21., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.004, 0.}}}, 
      Automatic}}],
  GridLines->FrontEndValueCache[{(Transpose[{#, 
       Table[
        Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], {
         Length[#]}]}]& )[
      Part[
       Select[
        (Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], {{
           Scaled[0.032], 
           Scaled[0.032]}, {None, 
           Scaled[0.05]}}, 11, {{0.006, 0}, {0.003, 0}}, Automatic]& )[
         SlotSequence[1]], And[
         FreeQ[#, 
          Alternatives["", 
           Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
       1]]& , {}}, {{{-5., 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {0., 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {5., 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {10., 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {15., 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {20., 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {25., 
       Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}}, {}}],
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImagePadding->All,
  ImageSize->{1000, Automatic},
  PlotLabel->FormBox[
   "\"Exposure to disease onset time of some infectious diseases\"", 
    TraditionalForm],
  PlotRange->{{All, All}, {0, All}},
  PlotRangePadding->{{
     Scaled[0.032], 
     Scaled[0.032]}, {None, 
     Scaled[0.05]}},
  Ticks->{{{-5., 
      FormBox["\"23:59:55\"", TraditionalForm], {0.004, 0}}, {0., 
      FormBox["\"00:00:00\"", TraditionalForm], {0.004, 0}}, {5., 
      FormBox["\"00:00:05\"", TraditionalForm], {0.004, 0}}, {10., 
      FormBox["\"00:00:10\"", TraditionalForm], {0.004, 0}}, {15., 
      FormBox["\"00:00:15\"", TraditionalForm], {0.004, 0}}, {20., 
      FormBox["\"00:00:20\"", TraditionalForm], {0.004, 0}}, {25., 
      FormBox["\"00:00:25\"", TraditionalForm], {0.004, 0}}, {-5., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {-4., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {-3., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {-2., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {-1., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {0., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {1., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {2., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {3., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {4., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {5., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {6., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {7., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {8., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {9., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {10., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {11., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {12., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {13., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {14., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {15., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {16., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {17., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {18., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {19., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {20., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}, {21., 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.004, 0}}}, 
    None}]], "Output",
 CellChangeTimes->{{3.798394847375361*^9, 3.798394896048098*^9}, {
   3.798394942044018*^9, 3.798394948143055*^9}, {3.798395021251953*^9, 
   3.798395027914307*^9}, {3.798395504190093*^9, 3.798395513607574*^9}, 
   3.798399212666069*^9, 3.798560549452964*^9, {3.798560826811322*^9, 
   3.7985608523332853`*^9}, 3.798561585659891*^9, 3.7985617000810547`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"48b79baf-a523-4a4d-a014-5e038687dd50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"reproduction", " ", 
    RowBox[{"no", ".", " ", 
     RowBox[{"(", 
      SubscriptBox["R", "0"], ")"}]}], " ", "of", " ", "such", " ", 
    RowBox[{"diseases", ".", " ", "note"}], " ", "that", " ", "data", " ", 
    "is", " ", "not", " ", "available", " ", "for", " ", "some", " ", 
    "entities"}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"infectDisR0", " ", "=", " ", 
   RowBox[{"DeleteMissing", "@", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", " ", "\[Rule]", " ", 
         RowBox[{"#", "[", 
          TemplateBox[{"\"basic reproduction number\"", 
            RowBox[{"EntityProperty", "[", 
              RowBox[{"\"Disease\"", ",", "\"BasicReproductionNumber\""}], 
              "]"}], "\"EntityProperty[\\\"Disease\\\", \
\\\"BasicReproductionNumber\\\"]\""},
           "EntityProperty"], "]"}]}], ")"}], "&"}], ",", " ", "infectDis"}], 
     "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.7983932129341793`*^9, 3.79839327308953*^9}, {
  3.798393315468268*^9, 3.7983933354461718`*^9}, {3.798393783558907*^9, 
  3.79839385218224*^9}, {3.798500392487782*^9, 3.798500399535199*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"b84e0270-92f3-490b-b2bd-2ecbd8d1ca64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Ebola virus disease\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"EbolaVirusDisease\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"EbolaVirusDisease\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"1.4999999999999991`", ",", "2.5000000000000018`"}], "}"}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"diphtheria\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine032\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine032\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"5.9999999999999964`", ",", "7.0000000000000036`"}], "}"}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"whooping cough\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine033\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine033\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", "5.5`"}], ",", 
   RowBox[{
    TemplateBox[{"\"smallpox\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine050\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine050\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"4.9999999999999964`", ",", "7.0000000000000036`"}], "}"}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"measles\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine055\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine055\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"11.999999999999993`", ",", "18.000000000000014`"}], "}"}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"rubella\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine056\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine056\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"4.9999999999999964`", ",", "7.0000000000000036`"}], "}"}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"mumps\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine072\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine072\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"3.9999999999999982`", ",", "7.0000000000000036`"}], "}"}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"severe acute respiratory syndrome\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine079.82\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine079.82\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"1.9999999999999991`", ",", "5.0000000000000036`"}], "}"}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"influenza\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"ICDNine487\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"ICDNine487\\\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"1.9999999999999991`", ",", "3.0000000000000018`"}], "}"}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Middle East respiratory syndrome\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"MiddleEastRespiratorySyndrome\""}], 
        "]"}], "\"Entity[\\\"Disease\\\", \\\"MiddleEastRespiratorySyndrome\\\
\"]\"", "\"disease\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"0.5999999999999995`", ",", "1.0000000000000009`"}], "}"}], 
     "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"COVID-19\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], "]"}], 
      "\"Entity[\\\"Disease\\\", \\\"NovelCoronavirusDisease\\\"]\"", 
      "\"disease\""},
     "Entity"], "\[Rule]", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{"1.399999999999999`", ",", "2.5000000000000018`"}], "}"}], 
     "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.798393245359182*^9, 3.798393273364565*^9}, {
   3.798393319082739*^9, 3.798393346754534*^9}, 3.798393858654312*^9, 
   3.798399226629938*^9, 3.798560564456781*^9, 3.798561596900691*^9, 
   3.7985617040788937`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"c80c066b-717c-47da-9033-70651684038c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberLinePlot", "[", 
  RowBox[{
   RowBox[{"Values", "@", "infectDisR0"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"Keys", "@", "infectDisR0"}], ",", " ", "Below"}], "]"}]}], ",",
    " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "Automatic"}], "}"}]}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "5"}]}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Basic reproduction rates of some infectious diseases\>\""}]}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.798393275482441*^9, 3.7983933085544147`*^9}, {
  3.798393368734645*^9, 3.798393429634234*^9}, {3.798393460955277*^9, 
  3.7983935844081087`*^9}, {3.798393856487447*^9, 3.798393896483047*^9}, {
  3.7983949608240337`*^9, 3.7983949765111217`*^9}, {3.798560579430192*^9, 
  3.798560589995035*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"29dab3f7-ae15-4e15-b2f8-89507366aecc"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      RGBColor[0.24720000000000014`, 0.24, 0.6], 
      PointSize[Medium], 
      Directive[
       RGBColor[0.34398, 0.49112, 0.89936], 
       CapForm["Butt"], 
       AbsoluteThickness[3]], {{{{
          PointBox[{1.4999999999999991`, 1}]}, {
          PointBox[{2.5000000000000018`, 1}]}, 
         LineBox[{{1.4999999999999991`, 1}, {2.5000000000000018`, 1}}]}}}}, {
      RGBColor[0.6, 0.24, 0.4428931686004542], 
      PointSize[Medium], 
      Directive[
       RGBColor[0.97, 0.606, 0.081], 
       CapForm["Butt"], 
       AbsoluteThickness[3]], {{{{
          PointBox[{5.9999999999999964`, 2}]}, {
          PointBox[{7.0000000000000036`, 2}]}, 
         LineBox[{{5.9999999999999964`, 2}, {7.0000000000000036`, 2}}]}}}}, {
      RGBColor[0.6, 0.5470136627990908, 0.24], 
      PointSize[Medium], 
      Directive[
       RGBColor[0.91, 0.318, 0.243], 
       CapForm["Butt"], 
       AbsoluteThickness[3]], {
       PointBox[{5.5, 3}]}}, {
      RGBColor[0.24, 0.6, 0.33692049419863584`], 
      PointSize[Medium], 
      Directive[
       RGBColor[0.448, 0.69232, 0.1538], 
       CapForm["Butt"], 
       AbsoluteThickness[3]], {{{{
          PointBox[{4.9999999999999964`, 4}]}, {
          PointBox[{7.0000000000000036`, 4}]}, 
         LineBox[{{4.9999999999999964`, 4}, {7.0000000000000036`, 4}}]}}}}, {
      RGBColor[0.24, 0.3531726744018182, 0.6], 
      PointSize[Medium], 
      Directive[
       RGBColor[0.62168, 0.2798, 0.6914], 
       CapForm["Butt"], 
       AbsoluteThickness[3]], {{{{
          PointBox[{11.999999999999993`, 5}]}, {
          PointBox[{18.000000000000014`, 5}]}, 
         LineBox[{{11.999999999999993`, 5}, {18.000000000000014`, 5}}]}}}}, {
      RGBColor[0.6, 0.24, 0.5632658430022722], 
      PointSize[Medium], 
      Directive[
       RGBColor[0.09096, 0.6296, 0.85532], 
       CapForm["Butt"], 
       AbsoluteThickness[3]], {{{{
          PointBox[{4.9999999999999964`, 6}]}, {
          PointBox[{7.0000000000000036`, 6}]}, 
         LineBox[{{4.9999999999999964`, 6}, {7.0000000000000036`, 6}}]}}}}, {
      RGBColor[0.6, 0.42664098839727194`, 0.24], 
      PointSize[Medium], 
      Directive[
       RGBColor[0.46056, 0.40064, 0.81392], 
       CapForm["Butt"], 
       AbsoluteThickness[3]], {{{{
          PointBox[{3.9999999999999982`, 7}]}, {
          PointBox[{7.0000000000000036`, 7}]}, 
         LineBox[{{3.9999999999999982`, 7}, {7.0000000000000036`, 7}}]}}}}, {
      RGBColor[0.2634521802031821, 0.6, 0.24], 
      PointSize[Medium], 
      Directive[
       RGBColor[0.94, 0.462, 0.162], 
       CapForm["Butt"], 
       AbsoluteThickness[3]], {{{{
          PointBox[{1.9999999999999991`, 8}]}, {
          PointBox[{5.0000000000000036`, 8}]}, 
         LineBox[{{1.9999999999999991`, 8}, {5.0000000000000036`, 8}}]}}}}, {
      RGBColor[0.24, 0.47354534880363613`, 0.6], 
      PointSize[Medium], 
      Directive[
       RGBColor[0., 0.7, 0.7], 
       CapForm["Butt"], 
       AbsoluteThickness[3]], {{{{
          PointBox[{1.9999999999999991`, 9}]}, {
          PointBox[{3.0000000000000018`, 9}]}, 
         LineBox[{{1.9999999999999991`, 9}, {3.0000000000000018`, 9}}]}}}}, {
      RGBColor[0.5163614825959097, 0.24, 0.6], 
      PointSize[Medium], 
      Directive[
       RGBColor[0.827051, 0.418034, 0.0243459], 
       CapForm["Butt"], 
       AbsoluteThickness[3]], {{{{
          PointBox[{0.5999999999999995, 10}]}, {
          PointBox[{1.0000000000000009`, 10}]}, 
         LineBox[{{0.5999999999999995, 10}, {1.0000000000000009`, 10}}]}}}}, {
      RGBColor[0.6, 0.3062683139954558, 0.24], 
      PointSize[Medium], 
      Directive[
       RGBColor[0.5511749434976025, 0.32014794962639853`, 0.8720626412559938], 
       CapForm["Butt"], 
       AbsoluteThickness[3]], {{{{
          PointBox[{1.399999999999999, 11}]}, {
          PointBox[{2.5000000000000018`, 11}]}, 
         LineBox[{{1.399999999999999, 11}, {2.5000000000000018`, 11}}]}}}}}, 
    AxesLabel -> {None}, Ticks -> {Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& }, 
    FrameTicks -> {{Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}]& , None}, {
      Charting`FindScaledTicks[
        (Charting`SimpleTicks[#, #2, 6]& )[
         SlotSequence[1]], {Identity, Identity}]& , None}}, 
    PlotRange -> {{0.5999999999999995, 18.000000000000014`}, {0, 11}}, 
    PlotRangePadding -> {{
       Scaled[0.1], 
       Scaled[0.1]}, {0, 1}}, AspectRatio -> NCache[
      Rational[1, 5], 0.2], AxesOrigin -> {Automatic, Automatic}, 
    Axes -> {True, False}, ImagePadding -> All, {AspectRatio -> NCache[
       Rational[1, 5], 0.2], 
     FrameTicks -> {{Charting`SimpleTicks[#, #2, 6]& , None}, {
       Charting`SimpleTicks[#, #2, 6]& , None}}, 
     ImageSize -> {1000, Automatic}, PlotLabel -> 
     FormBox["\"Basic reproduction rates of some infectious diseases\"", 
       TraditionalForm], Ticks -> (Charting`SimpleTicks[#, #2, 6]& )}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"\"Ebola virus disease\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"EbolaVirusDisease\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"EbolaVirusDisease\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"diphtheria\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine032\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine032\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"whooping cough\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine033\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine033\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"smallpox\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine050\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine050\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"measles\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine055\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine055\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"rubella\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine056\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine056\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"mumps\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine072\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine072\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"severe acute respiratory syndrome\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine079.82\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine079.82\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"influenza\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"ICDNine487\""}], "]"}], 
         "\"Entity[\\\"Disease\\\", \\\"ICDNine487\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"Middle East respiratory syndrome\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"MiddleEastRespiratorySyndrome\""}], 
           "]"}], "\"Entity[\\\"Disease\\\", \
\\\"MiddleEastRespiratorySyndrome\\\"]\""}, "EntityTraditionalFramed"], 
       TemplateBox[{"\"COVID-19\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Disease\"", ",", "\"NovelCoronavirusDisease\""}], "]"}],
          "\"Entity[\\\"Disease\\\", \\\"NovelCoronavirusDisease\\\"]\""}, 
        "EntityTraditionalFramed"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.97, 0.606, 0.081], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.97, 0.606, 0.081], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.91, 0.318, 0.243], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.91, 0.318, 0.243], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.448, 0.69232, 0.1538], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.448, 0.69232, 0.1538], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.62168, 0.2798, 0.6914], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.62168, 0.2798, 0.6914], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.09096, 0.6296, 0.85532], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.09096, 0.6296, 0.85532], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.46056, 0.40064, 0.81392], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.46056, 0.40064, 0.81392], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.94, 0.462, 0.162], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.94, 0.462, 0.162], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0., 0.7, 0.7], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0., 0.7, 0.7], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.827051, 0.418034, 0.0243459], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.827051, 0.418034, 0.0243459], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.5511749434976025, 0.32014794962639853`, 
                    0.8720626412559938], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.5511749434976025, 0.32014794962639853`, 
                    0.8720626412559938], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22932000000000002`, 0.32741333333333333`, 
                    0.5995733333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.34398`", ",", "0.49112`", ",", "0.89936`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.34398, 0.49112, 0.89936]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.34398, 0.49112, 0.89936], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97, 0.606, 0.081], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6466666666666667, 0.404, 0.054000000000000006`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.97`", ",", "0.606`", ",", "0.081`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97, 0.606, 0.081]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97, 0.606, 0.081], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.91, 0.318, 0.243], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6066666666666667, 0.21200000000000002`, 0.162],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.91`", ",", "0.318`", ",", "0.243`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.91, 0.318, 0.243]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.91, 0.318, 0.243], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.448, 0.69232, 0.1538], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2986666666666667, 0.4615466666666667, 
                    0.10253333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.448`", ",", "0.69232`", ",", "0.1538`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.448, 0.69232, 0.1538]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.448, 0.69232, 0.1538], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.62168, 0.2798, 0.6914], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.41445333333333334`, 0.18653333333333333`, 
                    0.46093333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.62168`", ",", "0.2798`", ",", "0.6914`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.62168, 0.2798, 0.6914]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.62168, 0.2798, 0.6914], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.09096, 0.6296, 0.85532], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.06064, 0.4197333333333334, 0.5702133333333333],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.09096`", ",", "0.6296`", ",", "0.85532`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.09096, 0.6296, 0.85532]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.09096, 0.6296, 0.85532], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.46056, 0.40064, 0.81392], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.30704000000000004`, 0.26709333333333335`, 
                    0.5426133333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.46056`", ",", "0.40064`", ",", "0.81392`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.46056, 0.40064, 0.81392]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.46056, 0.40064, 0.81392], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.94, 0.462, 0.162], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6266666666666667, 0.30800000000000005`, 
                    0.10800000000000001`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.94`", ",", "0.462`", ",", "0.162`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.94, 0.462, 0.162]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.94, 0.462, 0.162], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.7, 0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4666666666666667, 0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.`", ",", "0.7`", ",", "0.7`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.7, 0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.7, 0.7], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.827051, 0.418034, 0.0243459], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5513673333333333, 0.27868933333333334`, 0.0162306], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.827051`", ",", "0.418034`", ",", "0.0243459`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.827051, 0.418034, 0.0243459]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.827051, 0.418034, 0.0243459], Editable -> 
                    False, Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5511749434976025, 0.32014794962639853`, 
                    0.8720626412559938], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36744996233173505`, 0.21343196641759904`, 
                    0.5813750941706626], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5511749434976025`", ",", "0.32014794962639853`", ",", 
                    "0.8720626412559938`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5511749434976025, 0.32014794962639853`, 
                    0.8720626412559938]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5511749434976025, 0.32014794962639853`, 
                    0.8720626412559938], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "False", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.798393276486966*^9, 3.798393308788093*^9}, {
   3.798393356570764*^9, 3.7983934352577477`*^9}, {3.7983934757605658`*^9, 
   3.798393584814741*^9}, {3.7983938609251337`*^9, 3.798393896724244*^9}, {
   3.798394968553145*^9, 3.798394977354699*^9}, 3.798399226930621*^9, 
   3.798560592933666*^9, 3.798561597226967*^9, 3.798561704316897*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"b01912fd-b46e-4ec8-ad9d-f0facef37a41"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c2fc1d40-278a-4dd3-b25b-7abfb7939142"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 292, 5, 98, "Title",ExpressionUUID->"e77c1826-4845-4332-9bff-c4605939e3cf"],
Cell[875, 29, 479, 9, 58, "Text",ExpressionUUID->"82919fd9-3291-4fad-bd47-cf518a2b23c5"],
Cell[CellGroupData[{
Cell[1379, 42, 462, 10, 72, "Code",ExpressionUUID->"954fa826-3c06-4b80-b9d0-3f31cda83509"],
Cell[1844, 54, 61778, 1126, 777, "Output",ExpressionUUID->"73f94d17-02ff-42f5-b64e-c181b3b4c3e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63659, 1185, 455, 7, 54, "Subsection",ExpressionUUID->"da6eb7c6-4d31-433d-910e-7cc828c78f77"],
Cell[CellGroupData[{
Cell[64139, 1196, 632, 12, 72, "Code",ExpressionUUID->"f782353e-c4b9-4634-9909-d5d4d6308b35"],
Cell[64774, 1210, 3200, 58, 284, "Output",ExpressionUUID->"595eac48-6116-4166-beeb-b950924f54cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68011, 1273, 1211, 26, 72, "Code",ExpressionUUID->"b47ca147-5005-48ef-b6e8-77c0f0c20459"],
Cell[69225, 1301, 3603, 49, 499, "Output",ExpressionUUID->"c08f6bc8-e8ea-44fb-85da-b3a21433ed99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72865, 1355, 780, 17, 72, "Code",ExpressionUUID->"3c318e20-25c3-4adc-8d9e-29a835085865"],
Cell[73648, 1374, 24491, 573, 377, "Output",ExpressionUUID->"bef26d2f-2d8c-4783-99a0-5e6bf4b50c93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98176, 1952, 694, 15, 72, "Code",ExpressionUUID->"1a1ac13a-c086-4cc7-a035-862b9eaa635d"],
Cell[98873, 1969, 6192, 155, 236, "Output",ExpressionUUID->"53a22b43-4053-4dcd-a720-5fdcc59d79fe"]
}, Open  ]],
Cell[105080, 2127, 733, 12, 81, "Text",ExpressionUUID->"f2e0cbbb-208b-4c50-a165-e92c1dc7ff1f"],
Cell[CellGroupData[{
Cell[105838, 2143, 1616, 36, 110, "Code",ExpressionUUID->"ae1e3e82-1ef3-47d9-9fc9-b0678b11ffc5"],
Cell[107457, 2181, 21056, 443, 238, "Output",ExpressionUUID->"8a731bcf-c6a3-49ee-b382-9ee71582f830"]
}, Open  ]],
Cell[128528, 2627, 285, 7, 35, "Text",ExpressionUUID->"58e48f20-a5c0-4737-aacf-b3f7f0b1309a"],
Cell[CellGroupData[{
Cell[128838, 2638, 1787, 41, 110, "Code",ExpressionUUID->"b83475a6-19d2-42c8-a772-114f90573450"],
Cell[130628, 2681, 15713, 335, 238, "Output",ExpressionUUID->"d2b5e423-b487-4cee-b103-6745068761c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146378, 3021, 2396, 52, 129, "Code",ExpressionUUID->"8f91bdcf-1625-4817-9d0e-f7b42fd20392"],
Cell[148777, 3075, 48531, 1007, 221, "Output",ExpressionUUID->"d9c1220b-9201-4457-8789-7dedf2863a9a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[197357, 4088, 454, 7, 54, "Subsection",ExpressionUUID->"ea3713b8-fd6f-440e-a8c5-5b34b84550de"],
Cell[CellGroupData[{
Cell[197836, 4099, 547, 11, 72, "Code",ExpressionUUID->"f200a038-9f72-46d6-a566-ef171bc6a8fa"],
Cell[198386, 4112, 6158, 136, 75, "Output",ExpressionUUID->"ded048e1-0c1b-434c-996a-94aec25b6a79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204581, 4253, 970, 22, 82, "Code",ExpressionUUID->"598e3424-247f-4bcf-a15d-924b7e351c5a"],
Cell[205554, 4277, 10382, 222, 106, "Output",ExpressionUUID->"fb4f833b-b1da-4bae-aa37-fa4e9bd948c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215973, 4504, 2371, 51, 108, "Code",ExpressionUUID->"a1147914-39a4-481b-8411-dd8c2a536862"],
Cell[218347, 4557, 24827, 579, 333, "Output",ExpressionUUID->"a02f6ea9-f9fd-4fa1-ba6e-e5de888a7e6e"]
}, Open  ]],
Cell[243189, 5139, 3659, 78, 162, "Code",ExpressionUUID->"1a78227a-723d-4ba4-9429-b21981a88c42"],
Cell[CellGroupData[{
Cell[246873, 5221, 944, 22, 91, "Code",ExpressionUUID->"854785be-67f3-4c59-89b4-a260423f6032"],
Cell[247820, 5245, 16175, 350, 262, "Output",ExpressionUUID->"5a25b66f-41b5-4aa4-9779-9bef3f20ac3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264032, 5600, 1484, 29, 82, "Code",ExpressionUUID->"03c7d746-71a6-4588-98c9-be9a693ad382"],
Cell[265519, 5631, 4666, 104, 75, "Output",ExpressionUUID->"f5645502-bfb0-414c-a492-ec9f9a5c0e5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270222, 5740, 1592, 34, 82, "Code",ExpressionUUID->"b567dd33-007a-4e1f-becf-333ecca10e3b"],
Cell[271817, 5776, 4490, 98, 44, "Output",ExpressionUUID->"5996eb24-6665-4b73-b13e-9dab02e1f304"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276344, 5879, 1629, 36, 82, "Code",ExpressionUUID->"40679cf5-30d1-436d-95a2-5d8faef8cd8b"],
Cell[277976, 5917, 139971, 2680, 719, "Output",ExpressionUUID->"206f5011-f9c0-4a67-9bd6-043f10f0410b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417984, 8602, 2282, 50, 102, "Code",ExpressionUUID->"11581f65-329d-410a-ac24-6833c354a1d7"],
Cell[420269, 8654, 11924, 278, 166, "Output",ExpressionUUID->"8dbc7411-e4bc-4523-8e39-d60b2d81eabe"]
}, Open  ]],
Cell[432208, 8935, 321, 7, 35, "Text",ExpressionUUID->"c02d98e3-3590-4475-8233-c6490dcb6164"],
Cell[CellGroupData[{
Cell[432554, 8946, 1592, 35, 61, "Code",ExpressionUUID->"2a30e187-8c35-49e8-a6be-35f312df79d2"],
Cell[434149, 8983, 2932, 68, 75, "Output",ExpressionUUID->"1cf05203-d5c3-4ec3-a6e4-13ed09502441"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437118, 9056, 1271, 27, 82, "Code",ExpressionUUID->"55ad6394-6835-486d-8e35-f5db3e73af49"],
Cell[438392, 9085, 42134, 768, 223, "Output",ExpressionUUID->"2fa0bfdd-0346-4839-a8f2-1b5ee15fb0df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480563, 9858, 899, 20, 40, "Input",ExpressionUUID->"c9651b25-be6b-43ad-9e0e-be2e49c01c75"],
Cell[481465, 9880, 3214, 69, 44, "Output",ExpressionUUID->"033f5f7b-2d28-4c23-9b52-4edb2b08e719"]
}, Open  ]],
Cell[484694, 9952, 1804, 41, 133, "Code",ExpressionUUID->"c4908c34-6d39-4e02-b972-bae473fda647"],
Cell[CellGroupData[{
Cell[486523, 9997, 1246, 28, 110, "Code",ExpressionUUID->"f7ebb62e-9dc1-41ec-9b86-31c33dee4919"],
Cell[487772, 10027, 159183, 3072, 237, "Output",ExpressionUUID->"de1f7f18-5e71-43d0-87ec-f390390e510d"],
Cell[646958, 13101, 40819, 778, 441, "Output",ExpressionUUID->"b60efd30-a6c0-4bd1-95bd-97c40d86b482"]
}, Open  ]],
Cell[CellGroupData[{
Cell[687814, 13884, 2732, 59, 121, "Code",ExpressionUUID->"fae9b2f3-b506-4326-8c47-21b82aef6300"],
Cell[690549, 13945, 210166, 3977, 601, "Output",ExpressionUUID->"98647bd5-4eaf-4c62-8a03-78e86e9144ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[900752, 17927, 860, 21, 72, "Code",ExpressionUUID->"b972dd55-394e-4021-96a4-91956cc9ddfe"],
Cell[901615, 17950, 14467, 343, 653, "Output",ExpressionUUID->"fa819c6e-05d1-477e-bc20-0d8c287620d7"]
}, Open  ]],
Cell[916097, 18296, 2499, 58, 148, "Code",ExpressionUUID->"53fe083b-a8c5-4980-a7ba-3539c38b6757"],
Cell[CellGroupData[{
Cell[918621, 18358, 1110, 25, 82, "Code",ExpressionUUID->"f5b0aeba-b69a-4a77-aca1-0e6857c028d0"],
Cell[919734, 18385, 235401, 5740, 517, "Output",ExpressionUUID->"10606eb4-3a69-48e4-9675-e326e1033d77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155172, 24130, 1126, 23, 82, "Code",ExpressionUUID->"c290ef10-0b0a-4abb-a73d-4f65abefdde9"],
Cell[1156301, 24155, 235283, 5727, 517, "Output",ExpressionUUID->"0cd81eaf-c3bb-4ba8-ac63-2d74b29fd82f"]
}, Open  ]],
Cell[1391599, 29885, 422, 8, 35, "Text",ExpressionUUID->"32745416-f2c1-479d-85f4-1121d80603ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1392058, 29898, 555, 8, 54, "Subsection",ExpressionUUID->"2c6db4e6-6699-4015-b87c-9e964cfb7ffa"],
Cell[1392616, 29908, 324, 7, 35, "Text",ExpressionUUID->"ba0c7ef3-ec27-4f12-81a1-03510e8a3179"],
Cell[CellGroupData[{
Cell[1392965, 29919, 14746, 359, 72, "WolframAlphaShortInput",ExpressionUUID->"966944e4-3e43-410a-870a-7983e7d14330"],
Cell[1407714, 30280, 377, 8, 43, "Output",ExpressionUUID->"dc52b903-d24d-492b-9402-b8d72656d7c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1408128, 30293, 897, 19, 77, "Code",ExpressionUUID->"98c38f7a-6fd5-4aed-9815-08c826e491ba"],
Cell[1409028, 30314, 6675, 140, 106, "Output",ExpressionUUID->"b0819097-9ab6-4b27-89f9-45a994723918"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1415740, 30459, 373, 8, 72, "Code",ExpressionUUID->"5a544558-2d60-4cb4-9101-197ac662ce88"],
Cell[1416116, 30469, 96026, 1781, 587, "Output",ExpressionUUID->"074c9b09-3927-4d58-9c6c-ac09cc5d732f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1512179, 32255, 1027, 23, 72, "Code",ExpressionUUID->"ac29d305-d79e-49d7-8cd8-6f69fc24b259"],
Cell[1513209, 32280, 18253, 392, 346, "Output",ExpressionUUID->"ee37b303-2a62-4beb-8570-9e5c5b6bef93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1531499, 32677, 1018, 24, 102, "Code",ExpressionUUID->"959e9392-df77-4d4c-a7b8-8b73dcf10ade"],
Cell[1532520, 32703, 1202, 29, 44, "Output",ExpressionUUID->"fedd48cc-0cc5-4ad9-bc72-2c22f4b1e26e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1533759, 32737, 795, 16, 72, "Code",ExpressionUUID->"81d04324-e8f2-4f24-b768-fd3aff770766"],
Cell[1534557, 32755, 105036, 1964, 717, "Output",ExpressionUUID->"798643a5-5ac1-412a-a1b3-aa8b4d89ffec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1639630, 34724, 1395, 28, 110, "Code",ExpressionUUID->"a8baeccc-8c10-44a2-a084-55e988af868e"],
Cell[1641028, 34754, 67958, 1491, 657, "Output",ExpressionUUID->"861f1f11-9aec-4eb3-9e8f-3a9d318a20a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1709023, 36250, 1138, 25, 82, "Code",ExpressionUUID->"1b604b5c-29ec-40a0-b06f-7415c4d4b84c"],
Cell[1710164, 36277, 17760, 440, 256, "Output",ExpressionUUID->"da3a67f4-30d4-4f05-a7ef-e335a3f51031"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1727961, 36722, 1654, 36, 72, "Code",ExpressionUUID->"f85a093f-2e4b-43be-9428-193b4be0858c"],
Cell[1729618, 36760, 141568, 2904, 773, "Output",ExpressionUUID->"fc2ef743-3ae3-4084-83f2-260edbf777b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1871223, 39669, 1270, 25, 72, "Code",ExpressionUUID->"81e31c0f-096e-4f0b-83fc-a4405b47ee43"],
Cell[1872496, 39696, 206754, 4928, 667, "Output",ExpressionUUID->"48b79baf-a523-4a4d-a014-5e038687dd50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2079287, 44629, 1297, 28, 82, "Code",ExpressionUUID->"b84e0270-92f3-490b-b2bd-2ecbd8d1ca64"],
Cell[2080587, 44659, 4632, 115, 106, "Output",ExpressionUUID->"c80c066b-717c-47da-9033-70651684038c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2085256, 44779, 1069, 24, 52, "Code",ExpressionUUID->"29dab3f7-ae15-4e15-b2f8-89507366aecc"],
Cell[2086328, 44805, 52513, 1076, 420, "Output",ExpressionUUID->"b01912fd-b46e-4ec8-ad9d-f0facef37a41"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

